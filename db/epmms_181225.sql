--
-- PostgreSQL database dump
--

-- Dumped from database version 10.6 (Debian 10.6-1.pgdg90+1)
-- Dumped by pg_dump version 10.6

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: award; Type: SCHEMA; Schema: -; Owner: -
--

CREATE SCHEMA award;


--
-- Name: orientation; Type: TYPE; Schema: public; Owner: -
--

CREATE TYPE public.orientation AS ENUM (
    'top',
    'bottom',
    'left',
    'right'
);


--
-- Name: add_group(integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.add_group(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
  g_order integer;
BEGIN
  g_order:=(select group_count+1 from epmms_group where group_id=1);
  insert into epmms_groupmap(groupmap_group_id,groupmap_order,groupmap_verify_date,groupmap_member_id)
  values(1,g_order,now(),member_id);
  update epmms_group set group_count=group_count+1 where group_id=1;
  --raise notice 'g_order:%',g_order;
  if g_order>=17 then
     perform award.groupmap_upgrade(1);
  end if;
  return 1;
END;
$$;


--
-- Name: award_agent(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_agent(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money)*pv(),award_sum_type
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id and p.membermap_id=my.membermap_agent_id;
END;
$$;


--
-- Name: award_agent_141203(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_agent_141203(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money),award_sum_type
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id and p.membermap_id=my.membermap_agent_id
    and my.membermap_membertype_level<=3;
END;
$$;


--
-- Name: award_agent_150805(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_agent_150805(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  insert into epmms_award_period(award_period_period
  ,award_period_memberinfo_id,award_period_type_id
  ,award_period_currency,award_period_sum_type)
  select award_period,min(my.membermap_agent_id),award_type
  ,get_config_award(award_type,sum(period.award_period_currency)),award_sum_type
  from epmms_award_period as period,epmms_membermap as my
  where period.award_period_period=award_period and period.award_period_currency>0
  and award_sum_type=period.award_period_sum_type
  and period.award_period_type_id in (260,261,262)
  and period.award_period_memberinfo_id=my.membermap_id
  and my.membermap_agent_id is not null
  group by period.award_period_memberinfo_id;
END;
$$;


--
-- Name: award_agent_global_fenhong(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_agent_global_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$

BEGIN

	--县级分红

	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

	select award_period,my.membermap_id,award_type,award.get_month_perf(agent.agent_county,3)*100/count(*) over(partition by agent_county),award_sum_type

	from epmms_membermap as my,epmms_agent as agent

	where my.membermap_id=member_id

    and my.membermap_id=agent.agent_memberinfo_id

    and agent.agent_type=3;

    --市级分红

	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

	select award_period,my.membermap_id,award_type,award.get_month_perf(agent.agent_county,2)*100/count(*) over(partition by agent_county),award_sum_type

	from epmms_membermap as my,epmms_agent as agent

	where my.membermap_id=member_id

    and my.membermap_id=agent.agent_memberinfo_id

    and agent.agent_type=2;

    --省级分红

	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

	select award_period,my.membermap_id,award_type,award.get_month_perf(agent.agent_county,2)*100/count(*) over(partition by agent_county),award_sum_type

	from epmms_membermap as my,epmms_agent as agent

	where my.membermap_id=member_id

    and my.membermap_id=agent.agent_memberinfo_id

    and agent.agent_type=2;

END;

$$;


--
-- Name: award_agent_leader(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_agent_leader(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$

BEGIN

	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

	select award_period,award.upper_provience(my.membermap_id,1),award_type,60,award_sum_type

	from epmms_membermap as my

	where my.membermap_id=member_id

	and award.upper_provience(my.membermap_id,1) is not null;

    

	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

	select award_period,award.upper_provience(my.membermap_id,1),award_type,30,award_sum_type

	from epmms_membermap as my

	where my.membermap_id=member_id

    and award.upper_provience(my.membermap_id,2) is not null;

    

    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

	select award_period,award.upper_city(my.membermap_id),award_type,100,award_sum_type

	from epmms_membermap as my

	where my.membermap_id=member_id

    and award.upper_city(my.membermap_id) is not null;

    

    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

	select award_period,award.upper_area(my.membermap_id),award_type,500,award_sum_type

	from epmms_membermap as my

	where my.membermap_id=member_id

    and award.upper_area(my.membermap_id) is not null;



	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

	select award_period,award.upper_city_city(my.membermap_id,1),award_type,80,award_sum_type

	from epmms_membermap as my

	where my.membermap_id=member_id

	and award.upper_city_city(my.membermap_id,1) is not null;

    

	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

	select award_period,award.upper_city_city(my.membermap_id,2),award_type,40,award_sum_type

	from epmms_membermap as my

	where my.membermap_id=member_id

    and award.upper_city_city(my.membermap_id,2) is not null;

    

    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

	select award_period,award.upper_city_provience(my.membermap_id),award_type,100,award_sum_type

	from epmms_membermap as my

	where my.membermap_id=member_id

    and award.upper_city_provience(my.membermap_id) is not null;

    

    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

	select award_period,award.upper_city_area(my.membermap_id),award_type,200,award_sum_type

	from epmms_membermap as my

	where my.membermap_id=member_id

    and award.upper_city_area(my.membermap_id) is not null;

    

	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

	select award_period,award.upper_area_area(my.membermap_id,1),award_type,100,award_sum_type

	from epmms_membermap as my

	where my.membermap_id=member_id

	and award.upper_area_area(my.membermap_id,1) is not null;

    

	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

	select award_period,award.upper_area_area(my.membermap_id,2),award_type,50,award_sum_type

	from epmms_membermap as my

	where my.membermap_id=member_id

    and award.upper_area_area(my.membermap_id,2) is not null;

    

    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

	select award_period,award.upper_area_provience(my.membermap_id),award_type,100,award_sum_type

	from epmms_membermap as my

	where my.membermap_id=member_id

    and award.upper_area_provience(my.membermap_id) is not null;

    

    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

	select award_period,award.upper_area_city(my.membermap_id),award_type,100,award_sum_type

	from epmms_membermap as my

	where my.membermap_id=member_id

    and award.upper_city_area(my.membermap_id) is not null;

    

    --insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

	--select award_period,award.upper_area_silver(my.membermap_id),award_type,300,award_sum_type

	--from epmms_membermap as my

	--where my.membermap_id=member_id

    --and award.upper_area_silver(my.membermap_id) is not null;

    

    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

	select award_period,p.membermap_id,award_type,500,award_sum_type

	from epmms_membermap as my,epmms_membermap as p,epmms_membermap as down1

	where my.membermap_id=member_id

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and p.membermap_membertype_level=3

    and down1.membermap_recommend_id=p.membermap_id

    and my.membermap_recommend_path like down1.membermap_recommend_path || '/%'

    and down1.membermap_membertype_level<=3

    and my.membermap_recommend_layer-p.membermap_recommend_layer>=2;

    

    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

	select award_period,p.membermap_id,award_type,300,award_sum_type

	from epmms_membermap as my,epmms_membermap as p,epmms_membermap as down1

	where my.membermap_id=member_id

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and p.membermap_agent_type=3

    and down1.membermap_recommend_id=p.membermap_id

    and my.membermap_recommend_path like down1.membermap_recommend_path || '/%'

    and down1.membermap_membertype_level<=3

    and my.membermap_recommend_layer-p.membermap_recommend_layer>=2;

    

    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

	select award_period,p.membermap_id,award_type,800,award_sum_type

	from epmms_membermap as my,epmms_membermap as p,epmms_membermap as down1

	where my.membermap_id=member_id

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and p.membermap_agent_type=2

    and down1.membermap_recommend_id=p.membermap_id

    and my.membermap_recommend_path like down1.membermap_recommend_path || '/%'

    and down1.membermap_membertype_level<=3

    and my.membermap_recommend_layer-p.membermap_recommend_layer>=2;

    

    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

	select award_period,p.membermap_id,award_type,1100,award_sum_type

	from epmms_membermap as my,epmms_membermap as p,epmms_membermap as down1

	where my.membermap_id=member_id

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and p.membermap_agent_type=1

    and down1.membermap_recommend_id=p.membermap_id

    and my.membermap_recommend_path like down1.membermap_recommend_path || '/%'

    and down1.membermap_membertype_level<=3

    and my.membermap_recommend_layer-p.membermap_recommend_layer>=2;

END;

$$;


--
-- Name: award_agent_month(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_agent_month(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money),award_sum_type
	from membermap_month as my,epmms_membermap as p
	where p.membermap_id=my.membermap_agent_id;
END;
$$;


--
-- Name: award_agent_rank(integer, integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_agent_rank(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer, order_id integer DEFAULT NULL::integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,pn.pid,award_type,get_config_award(award_type,m.membermap_money),award_sum_type
	from (  select row_number() over(order by p.membermap_recommend_layer desc) as rno,p.membermap_id as pid
    from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and p.membermap_membertype_level=2) as pn ,epmms_membermap as m
    where pn.rno=1
    and m.membermap_id=member_id;
END;
$$;


--
-- Name: award_agent_type(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_agent_type(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$

BEGIN

	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

	select award_period,p.membermap_id,award_type,cfg.award_config_currency,award_sum_type

	from epmms_membermap as my,epmms_membermap as p,award.epmms_award_config_agent as cfg

	where my.membermap_id=member_id and p.membermap_id=my.membermap_agent_id

    and my.membermap_membertype_level=cfg.award_config_agent;

END;

$$;


--
-- Name: award_agent_up_down(integer, integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_agent_up_down(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer, order_id integer DEFAULT NULL::integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
 BEGIN
    if award_calc_type=2 then
      insert into epmms_award_period(award_period_period,award_period_memberinfo_id
      ,award_period_type_id,award_period_currency,award_period_sum_type)
      select award_period,pn.pid,award_type,get_config_award(award_type,pc),award_sum_type
      from (  select row_number() over(order by p.membermap_recommend_layer desc) as rno,p.membermap_id as pid,period.award_period_currency as pc
      from epmms_membermap as my,epmms_membermap as p,(select award_period_memberinfo_id,sum(award_period_currency) as award_period_currency from epmms_award_period where award_period_period=award_period
      and award_period_period_id=award_period-1 and award_period_type=award_type group by award_period_memberinfo_id) as period
      where my.membermap_id=period.award_period_memberinfo_id
      and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
      and my.membermap_membertype_level=2
      and p.membermap_membertype_level=2) as pn
      where pn.rno=1;
    else
      insert into epmms_award_period(award_period_period,award_period_memberinfo_id
      ,award_period_type_id,award_period_currency,award_period_sum_type)
      select award_period,pn.pid,award_type,get_config_award(award_type,pc),award_sum_type
      from (  select row_number() over(order by p.membermap_recommend_layer desc) as rno,p.membermap_id as pid,period.award_period_currency as pc
      from epmms_membermap as my,epmms_membermap as p,(select award_period_memberinfo_id,sum(award_period_currency) as award_period_currency from epmms_award_period where award_period_period=award_period group by award_period_memberinfo_id) as period
      where my.membermap_id=period.award_period_memberinfo_id
      and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
      and my.membermap_membertype_level=2
      and p.membermap_membertype_level=2) as pn
      where pn.rno=1;
   end if;
END;
$$;


--
-- Name: award_budian(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_budian(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,cfg.award_config_currency*pv(),award_sum_type
    from epmms_membermap as p,epmms_membermap as my,award.award_config_budian as cfg,epmms_memberstatus as s
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer=1
    and my.membermap_membertype_level=cfg.award_config_new_member
    and p.membermap_membertype_level=cfg.award_config_award_member
    and s.status_id=p.membermap_id
    and s.right_count=1
    and 2=get_loc(my.membermap_path,p.membermap_path);    
END;
$$;


--
-- Name: award_butie(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_butie(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    s1 numeric(16,2);
    s2 numeric(16,2);
    s3 numeric(16,2);
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,r.membermap_id,award_type,50,award_sum_type
    from epmms_membermap as my,epmms_membermap as r
    where my.membermap_id=member_id
    and my.membermap_recommend_path like r.membermap_recommend_path || '/%'
    and my.membermap_membertype_level=2
    and r.membermap_membertype_level<>3
    and my.membermap_recommend_layer-r.membermap_recommend_layer<=5;
    select sum(50) into s1
    from epmms_membermap as my,epmms_membermap as r
    where my.membermap_id=member_id
    and my.membermap_recommend_path like r.membermap_recommend_path || '/%'
    and my.membermap_membertype_level=2
    and r.membermap_membertype_level<>3
    and my.membermap_recommend_layer-r.membermap_recommend_layer<=5;
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,r.membermap_id,award_type,250-s1,award_sum_type
    from epmms_membermap as my,epmms_membermap as r
    where my.membermap_id=member_id
    and my.membermap_recommend_path like r.membermap_recommend_path || '/%'
    and my.membermap_membertype_level=2
    and r.membermap_membertype_level<>3
    and my.membermap_recommend_layer-r.membermap_recommend_layer=5;
    
    
    
    
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,r.membermap_id,award_type,800,award_sum_type
    from epmms_membermap as my,epmms_membermap as r
    where my.membermap_id=member_id
    and my.membermap_recommend_path like r.membermap_recommend_path || '/%'
    and my.membermap_membertype_level=1
    and r.membermap_membertype_level=1
    and my.membermap_recommend_layer-r.membermap_recommend_layer<=5;
    select sum(800) into s2
    from epmms_membermap as my,epmms_membermap as r
    where my.membermap_id=member_id
    and my.membermap_recommend_path like r.membermap_recommend_path || '/%'
    and my.membermap_membertype_level=1
    and r.membermap_membertype_level=1
    and my.membermap_recommend_layer-r.membermap_recommend_layer<=5;
     
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,r.membermap_id,award_type,200,award_sum_type
    from epmms_membermap as my,epmms_membermap as r
    where my.membermap_id=member_id
    and my.membermap_recommend_path like r.membermap_recommend_path || '/%'
    and my.membermap_membertype_level=1
    and r.membermap_membertype_level=2
    and my.membermap_recommend_layer-r.membermap_recommend_layer<=5;
    select sum(200) into s3
    from epmms_membermap as my,epmms_membermap as r
    where my.membermap_id=member_id
    and my.membermap_recommend_path like r.membermap_recommend_path || '/%'
    and my.membermap_membertype_level=1
    and r.membermap_membertype_level=2
    and my.membermap_recommend_layer-r.membermap_recommend_layer<=5;
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,r.membermap_id,award_type,4000-s2-s3,award_sum_type
    from epmms_membermap as my,epmms_membermap as r
    where my.membermap_id=member_id
    and my.membermap_recommend_path like r.membermap_recommend_path || '/%'
    and my.membermap_membertype_level=1
    and r.membermap_membertype_level<>3
    and my.membermap_recommend_layer-r.membermap_recommend_layer=5;
END;
$$;


--
-- Name: award_caifu(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_caifu(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,membermap_id,award_type,(6-cl)*get_award_value(award_type),award_sum_type
    from 
	(select pp.membermap_id,row_number() over (order by pp.membermap_layer desc) as cl
    from epmms_membermap as p,epmms_membermap as my,epmms_membermap as pp
	where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '%'
    and p.membermap_order=2
    and pp.membermap_id=p.membermap_parent_id) as a
    where cl<=5;
END;
$$;


--
-- Name: award_car_b(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_car_b(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_prize(prize_info,prize_member_id,prize_id_id)
    select cfg.award_config_name,p.membermap_id,cfg.award_config_id
    from epmms_membermap2 as p,award.epmms_award_config_prize as cfg
    where award.is_car(p.membermap_id) and cfg.award_config_id=1
    and not exists(select 1 from epmms_prize where prize_id_id=cfg.award_config_id and prize_member_id=p.membermap_id);
END;
$$;


--
-- Name: award_car_c(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_car_c(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_prize(prize_info,prize_member_id,prize_id_id)
    select cfg.award_config_name,p.membermap_id,cfg.award_config_id
    from epmms_membermap4 as my,epmms_membermap4 as p,award.epmms_award_config_prize as cfg
    where cfg.award_config_id=2
    and my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer=8
    and (select count(*) from epmms_membermap4 where membermap_path like p.membermap_path || '/%')=2^8;
    insert into epmms_prize(prize_info,prize_member_id,prize_id_id)
    select cfg.award_config_name,p.membermap_id,cfg.award_config_id
    from epmms_membermap4 as my,epmms_membermap4 as p,award.epmms_award_config_prize as cfg
    where cfg.award_config_id=3
    and my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer=10
    and (select count(*) from epmms_membermap4 where membermap_path like p.membermap_path || '/%')=2^10;
END;
$$;


--
-- Name: award_day_fenhong(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_day_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    day_money numeric(16,4);
BEGIN
    select coalesce(sum(membermap_money),0) into day_money from membermap_day;
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period
	,p.membermap_id
	,award_type
	,cfg.award_currency*day_money/count(*) over (partition by p.membermap_level)
    ,award_sum_type
	from epmms_membermap as p,award.epmms_award_config_day_fenhong as cfg
	where p.membermap_is_verify=1
    and p.membermap_level=cfg.award_membertype;
END;
$$;


--
-- Name: FUNCTION award_day_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer); Type: COMMENT; Schema: award; Owner: -
--

COMMENT ON FUNCTION award.award_day_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) IS '公司上周业绩周分红';


--
-- Name: award_day_futou(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_day_futou(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period
	,p.membermap_id
	,award_type
	,cfg.award_config_money
    ,award_sum_type
	from epmms_membermap as p,award.award_config_day_futou as cfg
	where p.membermap_is_verify=1
    and p.membermap_day_level=cfg.award_config_level;
    
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period
	,p.membermap_id
	,624
	,-cfg.award_config_money*cfg.award_config_percnet_finance
    ,award_sum_type
	from epmms_membermap as p,award.award_config_day_futou as cfg
	where p.membermap_is_verify=1
    and p.membermap_day_level=cfg.award_config_level;
    
    update epmms_membermap set membermap_day_count=membermap_day_count+1 where membermap_day_level>0;
    
    update epmms_membermap set membermap_day_count=0,membermap_day_level=iif(membermap_level-membermap_day_level>=2,0,iif(membermap_level<=8,membermap_day_level-1,8))
    from award.award_config_day_futou as cfg
    where membermap_day_level=cfg.award_config_level
    and membermap_day_count>=cfg.award_config_days;
    
END;
$$;


--
-- Name: FUNCTION award_day_futou(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer); Type: COMMENT; Schema: award; Owner: -
--

COMMENT ON FUNCTION award.award_day_futou(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) IS '公司上周业绩周分红';


--
-- Name: award_day_push_fenhong(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_day_push_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    day_money numeric(16,2);
    all_bill integer;
BEGIN
    select coalesce(sum(membermap_money),0) into day_money from membermap_day;
    select sum(membermap_product_count) into all_bill from epmms_membermap where membermap_is_verify=1;
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period
    ,my.membermap_id
    ,award_type
    ,my.membermap_product_count/all_bill*get_config_award(award_type,day_money)
    ,award_sum_type
    from epmms_membermap as my
    where my.membermap_is_verify=1 and my.membermap_is_active=1;
END;
$$;


--
-- Name: award_diff(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_diff(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE 
	member_award RECORD;
    previous_award numeric(16,2)=0;
    previous_award2 numeric(16,2)=0;
    current_award numeric(16,2)=0;
BEGIN
  --perform upgrade_level_1120(member_id);
  --计算级差
  for member_award in  select p.membermap_id,c.dif_award as dif_award,c.equal_award,my.membermap_money,c.director_level
   from epmms_membermap as my,epmms_membermap as p,award.epmms_award_config_dif as c
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and p.membermap_level=c.director_level
    order by p.membermap_layer desc
  loop
    current_award:=member_award.dif_award;
    
    if current_award=previous_award then
        --与上一个拿级差奖的人的等级相同则拿平级奖，不再拿级差奖
      insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
      values(award_period,member_award.membermap_id,581,member_award.equal_award*member_award.membermap_money,award_sum_type);
    end if;
    if current_award=previous_award2 then
        --与上一个拿级差奖的人的等级相同则拿平级奖2，不再拿级差奖
      insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
      values(award_period,member_award.membermap_id,581,member_award.equal_award*member_award.membermap_money,award_sum_type);
    end if;
    if current_award>previous_award then
        --比上一个拿级差奖的级别高
      insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
      values(award_period,member_award.membermap_id,award_type,(current_award-previous_award)*member_award.membermap_money,award_sum_type);
      previous_award2:=previous_award;
      previous_award:=current_award;
    end if;
  end loop;
END;
$$;


--
-- Name: FUNCTION award_diff(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer); Type: COMMENT; Schema: award; Owner: -
--

COMMENT ON FUNCTION award.award_diff(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) IS '升级各级的条件和各级奖金
奖金按级差发放(接点关系)
级别    特定会员人数(接点关系)    特定会员类型(>=)    特定会员级别(>=)    累计业绩    奖金
主任    3    土豪        5万    12%
经理    3        主任    15万    15%
部长    3        经理    50万    20%
总监    3        部长    150万    25%
';


--
-- Name: award_diff_180402(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_diff_180402(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE 
	member_award RECORD;
    previous_award numeric(16,2)=0;
    current_award numeric(16,2)=0;
    previous_income_award numeric(16,2)=0;
BEGIN
  --perform upgrade_level_1120(member_id);
  --计算级差
  for member_award in  select p.membermap_id,c.dif_award as dif_award,c.equal_award,my.membermap_money,c.director_level
   from epmms_membermap as my,epmms_membermap as p,award.epmms_award_config_dif as c
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and p.membermap_level=c.director_level
    and my.membermap_membertype_level=c.membertype
    order by p.membermap_layer desc
  loop
    current_award:=member_award.dif_award;
    
    if current_award=previous_award and previous_income_award>0 then
        --与上一个拿级差奖的人的等级相同则拿平级奖，不再拿级差奖
      /*insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
      values(award_period,member_award.membermap_id,award_type+1,member_award.equal_award*member_award.membermap_money,award_sum_type);
      previous_income_award:=0;*/
    end if;
    if current_award>previous_award then
        --比上一个拿级差奖的级别高
      insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
      values(award_period,member_award.membermap_id,award_type,(current_award-previous_award)*member_award.membermap_money,award_sum_type);
      previous_income_award:=current_award-previous_award;
      previous_award:=current_award;
    end if;
  end loop;
END;
$$;


--
-- Name: FUNCTION award_diff_180402(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer); Type: COMMENT; Schema: award; Owner: -
--

COMMENT ON FUNCTION award.award_diff_180402(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) IS '升级各级的条件和各级奖金
奖金按级差发放(接点关系)
级别    特定会员人数(接点关系)    特定会员类型(>=)    特定会员级别(>=)    累计业绩    奖金
主任    3    土豪        5万    12%
经理    3        主任    15万    15%
部长    3        经理    50万    20%
总监    3        部长    150万    25%
';


--
-- Name: award_diff_fenhong(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_diff_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(
    award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
    select  award_period,p.membermap_id,award_type,get_config_award(award_type,leaf.membermap_recommend_under_product_count*get_bill_money())/count(*) over (partition by leaf.membermap_id),award_sum_type
    from award.get_level_leaf() as leaf,epmms_membermap as p
    where leaf.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and p.membermap_level=5;
END;
$$;


--
-- Name: FUNCTION award_diff_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer); Type: COMMENT; Schema: award; Owner: -
--

COMMENT ON FUNCTION award.award_diff_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) IS '升级各级的条件和各级奖金
奖金按级差发放(接点关系)
级别    特定会员人数(接点关系)    特定会员类型(>=)    特定会员级别(>=)    累计业绩    奖金
主任    3    土豪        5万    12%
经理    3        主任    15万    15%
部长    3        经理    50万    20%
总监    3        部长    150万    25%
';


--
-- Name: award_dixin(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dixin(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,my.membermap_id,award_type,cfg.df_currency,award_sum_type
    from epmms_membermap as my,award.award_config_global_fenhong as cfg
    where my.membermap_id=member_id
    and my.membermap_level=cfg.upgrade_level;
END;
$$;


--
-- Name: award_dot(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dot(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,my.membermap_money*cfg.award_config_currency*pv(),award_sum_type
	from epmms_parent_relation as pr,epmms_membermap as p,epmms_membermap as my,award.award_config_dot_layer as cfg
	where my.membermap_id=member_id
    and pr.parent_relation_member_id=member_id
    and p.membermap_id=pr.parent_relation_upper_id
    and my.membermap_layer-p.membermap_layer<@cfg.award_config_layer
    and my.membermap_membertype_level=cfg.award_config_membertype;
END;
$$;


--
-- Name: award_dot_layer(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dot_layer(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$

BEGIN

	insert into epmms_award_period(award_period_period,award_period_memberinfo_id

    ,award_period_type_id,award_period_currency,award_period_sum_type)

	select award_period,p.membermap_id,award_type,cfg.award_config_currency*pv(),award_sum_type

	from epmms_membermap as p,epmms_membermap as my,award.award_config_dot_layer as cfg

	where my.membermap_id=member_id

    and my.membermap_path like p.membermap_path || '/%'

    and my.membermap_layer-p.membermap_layer<@cfg.award_config_layer

		and p.membermap_membertype_level=cfg.award_config_membertype

    --and p.membermap_recommend_number<@cfg.award_config_recommend

    and p.membermap_is_active=1;

END;

$$;


--
-- Name: award_dot_layer2(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dot_layer2(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,epmms_get_cap_money(l.award_config_limit,cfg.award_config_currency,COALESCE(total.award_total_currency,0)),award_sum_type
    from epmms_parent_relation as pr,epmms_membermap as my,
    award.award_config_dot_layer2 as cfg,award.award_config_dot_limit as l ,epmms_membermap as p left join
    epmms_award_total as total on total.award_total_memberinfo_id=p.membermap_id and total.award_total_type_id=award_type
	where my.membermap_id=member_id
    and pr.parent_relation_member_id=member_id
    and p.membermap_id=pr.parent_relation_upper_id
    and my.membermap_layer-p.membermap_layer<@cfg.award_config_layer
    and p.membermap_recommend_number<@l.award_config_recommend;
END;
$$;


--
-- Name: award_dot_layer_150919(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dot_layer_150919(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,cfg.award_config_currency*pv(),award_sum_type
	from epmms_membermap as p,epmms_membermap as my,award.award_config_dot_layer_150919 as cfg
	where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer<@cfg.award_config_layer
    --and p.membermap_recommend_number<@cfg.award_config_recommend
    and p.membermap_is_active=1;
END;
$$;


--
-- Name: award_dot_layer_160601(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dot_layer_160601(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,cfg.award_config_currency*pv(),award_sum_type
    from epmms_membermap as p,epmms_membermap as my,award.award_config_dot_matrix2 as cfg,epmms_memberstatus as s
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer<@'[2,4)'::int4range
    and my.membermap_membertype_level=cfg.award_config_new_member
    and p.membermap_membertype_level=cfg.award_config_award_member
    and s.status_id=p.membermap_id
    and s.left_product_count=my.membermap_product_count
    and 1=get_loc(my.membermap_path,p.membermap_path);
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,cfg.award_config_currency*pv(),award_sum_type
    from epmms_membermap as p,epmms_membermap as my,award.award_config_dot_matrix2 as cfg,epmms_memberstatus as s
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer<@'[2,4)'::int4range
    and my.membermap_membertype_level=cfg.award_config_new_member
    and p.membermap_membertype_level=cfg.award_config_award_member
    and s.status_id=p.membermap_id
    and s.right_product_count=my.membermap_product_count
    and 2=get_loc(my.membermap_path,p.membermap_path);
END;
$$;


--
-- Name: award_dot_layer_big(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dot_layer_big(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,cfg.award_config_currency*pv(),award_sum_type
    from epmms_membermap as p,epmms_membermap as my,award.epmms_award_config_dot_matrix_left as cfg
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer<cfg.award_config_layer
    and my.membermap_membertype_level=cfg.award_config_new_member
    and p.membermap_membertype_level=cfg.award_config_award_member
    and get_order_under_product_count3(p.membermap_id,1)<>get_order_under_product_count3(p.membermap_id,2)
    and iif(get_order_under_product_count3(p.membermap_id,1)>get_order_under_product_count3(p.membermap_id,2),1,2)=get_loc(my.membermap_path,p.membermap_path);
END;
$$;


--
-- Name: award_dot_layer_big2(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dot_layer_big2(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money)*pv(),award_sum_type
    from epmms_membermap as p,epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer<=10
    and get_order_under_product_count3(p.membermap_id,1)<>get_order_under_product_count3(p.membermap_id,2)
    and iif(get_order_under_product_count3(p.membermap_id,1)>get_order_under_product_count3(p.membermap_id,2),1,2)=get_loc(my.membermap_path,p.membermap_path);
END;
$$;


--
-- Name: award_dot_layer_big3(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dot_layer_big3(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money)*pv(),award_sum_type
    from epmms_membermap as p,epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer in (3,5,7,9,11)
    and get_loc(my.membermap_path,p.membermap_path)=1
    and get_order_under_product_count3(p.membermap_id,1)>=get_order_under_product_count3(p.membermap_id,2);
    
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money)*pv(),award_sum_type
    from epmms_membermap as p,epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer in (3,5,7,9,11)
    and get_loc(my.membermap_path,p.membermap_path)=2
    and get_order_under_product_count3(p.membermap_id,1)<=get_order_under_product_count3(p.membermap_id,2);
END;
$$;


--
-- Name: award_dot_layer_little(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dot_layer_little(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,cfg.award_config_currency*pv(),award_sum_type
    from epmms_membermap as p,epmms_membermap as my,epmms_memberstatus as s,award.epmms_award_config_dot_matrix as cfg
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and p.membermap_membertype_level=cfg.award_config_award_member
    and my.membermap_membertype_level=award_config_new_member
    and s.status_id=p.membermap_id
    and iif(s.left_product_count<s.right_product_count,1,2)=get_loc(my.membermap_path,p.membermap_path)
    ;
END;
$$;


--
-- Name: award_dot_layer_little3(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dot_layer_little3(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money)*pv(),award_sum_type
    from epmms_membermap as p,epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer>1
    and right(get_suffix(my.membermap_path,p.membermap_path),(my.membermap_layer-p.membermap_layer-1)*2) not like '%2%'
    and get_loc(my.membermap_path,p.membermap_path)=1
    and get_order_under_product_count3(p.membermap_id,1)<get_order_under_product_count3(p.membermap_id,2);
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money)*pv(),award_sum_type
    from epmms_membermap as p,epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer>1
    and right(get_suffix(my.membermap_path,p.membermap_path),(my.membermap_layer-p.membermap_layer-1)*2) not like '%2%'
    and get_loc(my.membermap_path,p.membermap_path)=2
    and get_order_under_product_count3(p.membermap_id,1)>get_order_under_product_count3(p.membermap_id,2);
END;
$$;


--
-- Name: award_dot_layer_xingyun(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dot_layer_xingyun(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money)*pv(),award_sum_type
    from epmms_membermap as p,epmms_membermap as my,epmms_membermap as u,epmms_layer as l
    where my.membermap_id=member_id
    and my.membermap_path like u.membermap_path || '/%'
    and u.membermap_path like p.membermap_path || '/%'
    and my.membermap_id<>p.membermap_id
    and u.membermap_layer-p.membermap_layer<=10
    and u.membermap_id=l.layer_member_id
    and u.membermap_layer-p.membermap_layer=l.layer_layer
    and iif(get_loc(my.membermap_path,u.membermap_path)=1,l.layer_left_count,l.layer_right_count)>1
    and get_loc(my.membermap_path,u.membermap_path)=iif(get_order_under_product_count3(u.membermap_id,1)<get_order_under_product_count3(u.membermap_id,2),1,2);

    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money)*pv(),award_sum_type
    from epmms_membermap as p,epmms_membermap as my,epmms_membermap as u,epmms_layer as l
    where my.membermap_id=member_id
    and my.membermap_path like u.membermap_path || '/%'
    and p.membermap_path like u.membermap_path || '/%'
    and my.membermap_id<>p.membermap_id
    and p.membermap_layer-u.membermap_layer<=10
    and u.membermap_layer-p.membermap_layer=l.layer_layer
    and iif(get_loc(my.membermap_path,u.membermap_path)=1,l.layer_left_count,l.layer_right_count)>1
    and get_loc(my.membermap_path,u.membermap_path)=iif(get_order_under_product_count3(u.membermap_id,1)<get_order_under_product_count3(u.membermap_id,2),1,2);
END;
$$;


--
-- Name: award_dot_layer_xingyun2(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dot_layer_xingyun2(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    with round_member(b_id,period_id,period_currency) as (
    	select my.membermap_parent_id,period.award_period_memberinfo_id,period.award_period_currency
	from epmms_membermap as my,epmms_award_period as period
    where period.award_period_period=award_period
    and my.membermap_id=period.award_period_memberinfo_id
    and my.membermap_membertype_level=3
    and my.membermap_recommend_number=2
    union all
    	select p.membermap_id,period.award_period_memberinfo_id,period.award_period_currency
	from epmms_membermap as my,epmms_membermap as p,epmms_award_period as period
    where period.award_period_period=award_period
    and my.membermap_id=period.award_period_memberinfo_id
    and p.membermap_parent_id=my.membermap_id
    and p.membermap_membertype_level=3
    and p.membermap_recommend_number=2
    union all
    	select p.membermap_id,period.award_period_memberinfo_id,period.award_period_currency
	from epmms_membermap as my,epmms_membermap as p,epmms_award_period as period
    where period.award_period_period=award_period
    and my.membermap_id=period.award_period_memberinfo_id
    and p.membermap_parent_id=my.membermap_parent_id
    and p.membermap_id<>my.membermap_id
    and p.membermap_membertype_level=3
    and p.membermap_recommend_number=2
    )
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,b_id,award_type,period_currency*0.01*pv()/count(*)over (partition by period_id),award_sum_type from round_member;
    
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,period.award_period_currency*0.01*pv(),award_sum_type
	from epmms_membermap as my,epmms_membermap as p,epmms_award_period as period
    where period.award_period_period=award_period
    and my.membermap_id=period.award_period_memberinfo_id
    and my.membermap_path like p.membermap_path || '/%'
    and p.membermap_recommend_number>2;
END;
$$;


--
-- Name: award_dot_level(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dot_level(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,my.membermap_money*cfg.award_config_currency*pv(),award_sum_type
	from epmms_recommend_relation as pr,epmms_membermap as p,epmms_membermap as my,award.award_config_xingyun as cfg
	where pr.recommend_relation_member_id=member_id
    and p.membermap_id=pr.recommend_relation_upper_id
    and my.membermap_id=member_id
    and COALESCE(p.membermap_level,1)=cfg.award_config_membertype;
END;
$$;


--
-- Name: award_dot_matrix(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dot_matrix(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
    award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,c.award_config_currency,award_sum_type
	from epmms_membermap as my,epmms_membermap as p,award.epmms_award_config_dot_matrix as c
	where my.membermap_id=member_id and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_membertype_level=c.award_config_new_member
    and p.membermap_membertype_level=c.award_config_award_member
  	and my.membermap_layer-p.membermap_layer<=c.award_config_layer;
END;
$$;


--
-- Name: award_dot_matrix_left(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dot_matrix_left(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
    award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,c.award_config_currency,award_sum_type
	from epmms_membermap as my,epmms_membermap as p,epmms_membermap as l,award.epmms_award_config_dot_matrix as c
	where l.membermap_parent_id=p.membermap_id and l.membermap_order=1
    and my.membermap_id=member_id
    and my.membermap_path like l.membermap_path || '%'
    and my.membermap_membertype_level=c.award_config_new_member
    and p.membermap_membertype_level=c.award_config_award_member
  	and my.membermap_layer-p.membermap_layer<=c.award_config_layer;
    
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
    award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,c.award_config_currency,award_sum_type
	from epmms_membermap as my,epmms_membermap as p,epmms_membermap as l,award.epmms_award_config_dot_matrix_left as c
	where l.membermap_parent_id=p.membermap_id and l.membermap_order=2
    and my.membermap_id=member_id
    and my.membermap_path like l.membermap_path || '/%'
    and right(my.membermap_path,(my.membermap_layer-l.membermap_layer)*2) not like '%2%'
    and my.membermap_membertype_level=c.award_config_new_member
    and p.membermap_membertype_level=c.award_config_award_member;
END;
$$;


--
-- Name: award_dot_matrix_recommend(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dot_matrix_recommend(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
    award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,c.award_config_currency,award_sum_type
    from epmms_membermap as my,epmms_membermap as p,award.epmms_award_config_dot_matrix_recommend as c
    where my.membermap_id=member_id and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and my.membermap_membertype_level=c.award_config_new_member
    and p.membermap_membertype_level=c.award_config_award_member
    and my.membermap_recommend_layer-p.membermap_recommend_layer<=iif(award_calc_type=2,1,c.award_config_layer);
END;
$$;


--
-- Name: award_dot_matrix_recommend2(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dot_matrix_recommend2(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
    award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,c.award_config_currency,award_sum_type
    from epmms_membermap as my,epmms_membermap as p,award.epmms_award_config_dot_matrix_recommend_151204 as c
    where my.membermap_id=member_id and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and my.membermap_membertype_level=c.award_config_new_member
    and p.membermap_membertype_level=c.award_config_award_member
    and my.membermap_recommend_layer-p.membermap_recommend_layer<@c.award_config_layer;
END;
$$;


--
-- Name: award_dot_month(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dot_month(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,cfg.award_config_currency*pv(),award_sum_type
	from epmms_recommend_relation as pr,epmms_membermap as p,membermap_month as my,award.award_config_dot_layer as cfg
	where pr.recommend_relation_member_id=my.membermap_id
    and p.membermap_id=pr.recommend_relation_upper_id
    and my.membermap_layer-p.membermap_layer<@cfg.award_config_layer
    and p.membermap_membertype_level=cfg.award_config_membertype;
END;
$$;


--
-- Name: award_dot_month_level(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dot_month_level(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,my.membermap_money*cfg.award_config_currency*pv(),award_sum_type
	from epmms_recommend_relation as pr,epmms_membermap as p,membermap_month as my,award.award_config_xingyun as cfg
	where pr.recommend_relation_member_id=my.membermap_id
    and p.membermap_id=pr.recommend_relation_upper_id
    and COALESCE(p.membermap_level,1)=cfg.award_config_membertype;
END;
$$;


--
-- Name: award_dot_recommend(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dot_recommend(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,cfg.award_config_currency*my.membermap_money*pv(),award_sum_type
    from epmms_recommend_relation as pr,epmms_membermap as p,epmms_membermap as my,award.award_config_dot_layer as cfg
    where my.membermap_id=member_id
    and pr.recommend_relation_member_id=member_id
    and p.membermap_id=pr.recommend_relation_upper_id
    and my.membermap_recommend_layer-p.membermap_recommend_layer<@cfg.award_config_layer
    and p.membermap_membertype_level=cfg.award_config_membertype
    ;
END;
$$;


--
-- Name: award_dot_recommend_141203(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dot_recommend_141203(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money)*pv(),award_sum_type
	from epmms_membermap as p,epmms_membermap as my
	where my.membermap_id=member_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    --and my.membermap_layer-p.membermap_layer<=40
    and p.membermap_is_active=1
    and p.membermap_recommend_number>=4
    and p.membermap_membertype_level=4
    and my.membermap_membertype_level=4;
END;
$$;


--
-- Name: award_dot_recommend_180402(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dot_recommend_180402(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,cfg.award_config_currency*my.membermap_money*pv(),award_sum_type
    from epmms_recommend_relation as pr,epmms_membermap as p,epmms_membermap as my,award.award_config_dot_layer as cfg
    where my.membermap_id=member_id
    and pr.recommend_relation_member_id=member_id
    and p.membermap_id=pr.recommend_relation_upper_id
    and my.membermap_recommend_layer-p.membermap_recommend_layer<@cfg.award_config_layer
    --and p.membermap_membertype_level=cfg.award_config_membertype
    ;
END;
$$;


--
-- Name: award_down_up_recommand(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_down_up_recommand(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type
	,period.award_period_currency*cfg.award_config_currency/count(*) over (partition by my.membermap_id)
    ,award_sum_type
	from epmms_membermap as p,epmms_membermap as my,epmms_award_period as period,award.award_config_down_up as cfg
	where period.award_period_type_id=536
    and period.award_period_period=award_period
    and my.membermap_id=period.award_period_memberinfo_id
	and p.membermap_recommend_path like my.membermap_recommend_path || '/%'
    and p.membermap_recommend_layer-my.membermap_recommend_layer<=cfg.award_config_layer
    --and p.membermap_membertype_level=cfg.award_config_member
    and p.membermap_recommend_number<@cfg.award_config_recommend;
END;
$$;


--
-- Name: award_down_up_recommand_150919(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_down_up_recommand_150919(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type
	,period.award_period_currency*cfg.award_config_currency/count(*) over (partition by my.membermap_id)
    ,award_sum_type
	from epmms_membermap as p,epmms_membermap as my,epmms_award_period as period,award.award_config_down_up as cfg
	where period.award_period_type_id=560
    and period.award_period_period=award_period
    and my.membermap_id=period.award_period_memberinfo_id
	and p.membermap_recommend_path like my.membermap_recommend_path || '/%'
    and p.membermap_recommend_layer-my.membermap_recommend_layer=cfg.award_config_layer
    and p.membermap_membertype_level=cfg.award_config_member;
END;
$$;


--
-- Name: award_dup(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dup(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period,period.award_period_memberinfo_id,award_type
    ,get_config_award(award_type,sum(period.award_period_currency)),award_sum_type
	from epmms_award_period as period
    where period.award_period_period=award_period
    and period.award_period_sum_type=award_sum_type
    and period.award_period_currency>0
	group by period.award_period_memberinfo_id
    having sum(period.award_period_currency)>0;
END;
$$;


--
-- Name: award_dup_141203(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dup_141203(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period,period.award_period_memberinfo_id,award_type
    ,get_config_award(award_type,sum(period.award_period_currency)),award_sum_type
	from epmms_award_period as period
    where period.award_period_period=award_period
    and period.award_period_sum_type=award_sum_type
    and period.award_period_currency>0
	group by period.award_period_memberinfo_id
    having sum(period.award_period_currency)>0;
END;
$$;


--
-- Name: award_dup_150805(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dup_150805(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period,period.award_period_memberinfo_id,award_type
    ,get_config_award(award_type,sum(period.award_period_currency)),award_sum_type
	from epmms_award_period as period
    where period.award_period_period=award_period
    and period.award_period_type_id in (260,261,262)
    and period.award_period_sum_type=award_sum_type
    and period.award_period_currency>0
	group by period.award_period_memberinfo_id
    having sum(period.award_period_currency)>0;
END;
$$;


--
-- Name: award_dup_160601(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dup_160601(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period,period.award_period_memberinfo_id,award_type
    ,get_config_award(award_type,sum(period.award_period_currency)),award_sum_type
	from epmms_award_period as period
    where period.award_period_period=award_period
    and period.award_period_sum_type=award_sum_type
    and period.award_period_currency>0
    and period.award_period_type_id>400
	group by period.award_period_memberinfo_id
    having sum(period.award_period_currency)>0;
END;
$$;


--
-- Name: award_dup_170224(integer, integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dup_170224(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer, order_id integer DEFAULT NULL::integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period,period.award_period_memberinfo_id,award_type
    ,period.award_period_currency*cfg.award_config_award,award_sum_type
	from epmms_award_period as period,award.award_config_dup as cfg
    where period.award_period_period=award_period
    and period.award_period_sum_type=award_sum_type
    and period.award_period_currency>0
    and (select sum(award_total_currency) from epmms_award_total where award_total_memberinfo_id=period.award_period_memberinfo_id and award_total_currency>0)<@cfg.award_config_total;
END;
$$;


--
-- Name: award_dup_aixin(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dup_aixin(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period,period.award_period_memberinfo_id,award_type
    ,get_config_award(award_type,sum(period.award_period_currency)),award_sum_type
	from epmms_award_period as period
    where period.award_period_period=award_period
    and period.award_period_sum_type=award_sum_type
    and period.award_period_currency>0
    and (select sum(award_total_currency) from epmms_award_total where award_total_memberinfo_id=member_id and award_total_currency>0)>200000
	group by period.award_period_memberinfo_id
    having sum(period.award_period_currency)>0;
END;
$$;


--
-- Name: award_dup_no(integer, integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dup_no(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer, order_id integer DEFAULT NULL::integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period,period.award_period_memberinfo_id,award_type
    ,get_config_award(award_type,sum(period.award_period_currency)),award_sum_type
	from epmms_award_period as period
    where period.award_period_period=award_period
    and period.award_period_type_id not in (508,511)
    and period.award_period_sum_type=award_sum_type
    and period.award_period_currency>0
	group by period.award_period_memberinfo_id
    having sum(period.award_period_currency)>0;
END;
$$;


--
-- Name: award_dup_sum_type(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dup_sum_type(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  insert into epmms_award_period(award_period_period
  ,award_period_memberinfo_id,award_period_type_id
  ,award_period_currency,award_period_sum_type)
  select award_period,period.award_period_memberinfo_id,award_type
  ,get_config_award(award_type,sum(period.award_period_currency)),award_sum_type
  from epmms_award_period as period
  where period.award_period_period=award_period and period.award_period_currency>0
  and award_sum_type=period.award_period_sum_type
  group by period.award_period_memberinfo_id;

  insert into epmms_dup(dup_member_id
  ,dup_money,dup_is_verify,dup_add_date)
  select period.award_period_memberinfo_id
  ,abs(get_config_award(award_type,sum(period.award_period_currency))),
  0,now()
  from epmms_award_period as period
  where period.award_period_period=award_period and period.award_period_currency>0
  and award_sum_type=period.award_period_sum_type
  group by period.award_period_memberinfo_id;
END;
$$;


--
-- Name: award_dup_sum_type2(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dup_sum_type2(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  insert into epmms_award_period(award_period_period
  ,award_period_memberinfo_id,award_period_type_id
  ,award_period_currency,award_period_sum_type)
  select award_period,period.award_period_memberinfo_id,award_type
  ,get_config_award(award_type,sum(period.award_period_currency)),award_sum_type
  from epmms_award_period as period
  where period.award_period_period=award_period and period.award_period_currency>0
  and award_sum_type=period.award_period_sum_type
  group by period.award_period_memberinfo_id;

  insert into epmms_award_period(award_period_period
  ,award_period_memberinfo_id,award_period_type_id
  ,award_period_currency,award_period_sum_type)
  select award_period
  ,period.award_period_memberinfo_id,545
  ,abs(get_config_award(award_type,sum(period.award_period_currency))),3
  from epmms_award_period as period
  where period.award_period_period=award_period and period.award_period_currency>0
  and award_sum_type=period.award_period_sum_type
  group by period.award_period_memberinfo_id;
END;
$$;


--
-- Name: award_dup_sum_type_141203(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dup_sum_type_141203(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  insert into epmms_award_period(award_period_period
  ,award_period_memberinfo_id,award_period_type_id
  ,award_period_currency,award_period_sum_type)
  select award_period,period.award_period_memberinfo_id,award_type
  ,get_config_award(award_type,sum(period.award_period_currency)),award_sum_type
  from epmms_award_period as period
  where period.award_period_period=award_period and period.award_period_currency>0
  and award_sum_type=period.award_period_sum_type
  and period.award_period_type_id in (220,221,222)
  and (select sum(award_total_currency) from epmms_award_total where award_total_type_id in (220,221,222) and award_total_memberinfo_id=period.award_period_memberinfo_id)>=500000
  group by period.award_period_memberinfo_id;

  insert into epmms_award_period(award_period_period
  ,award_period_memberinfo_id,award_period_type_id
  ,award_period_currency,award_period_sum_type)
  select award_period
  ,period.award_period_memberinfo_id,225
  ,abs(get_config_award(award_type,sum(period.award_period_currency))),3
  from epmms_award_period as period
  where period.award_period_period=award_period and period.award_period_currency>0
  and award_sum_type=period.award_period_sum_type
  and period.award_period_type_id in (220,221,222)
  and (select sum(award_total_currency) from epmms_award_total where award_total_type_id in (220,221,222) and award_total_memberinfo_id=period.award_period_memberinfo_id)>=500000
  group by period.award_period_memberinfo_id;
END;
$$;


--
-- Name: award_dup_sum_type_160228(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dup_sum_type_160228(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  insert into epmms_award_period(award_period_period
  ,award_period_memberinfo_id,award_period_type_id
  ,award_period_currency,award_period_sum_type)
  select award_period,period.award_period_memberinfo_id,award_type
  ,get_config_award(award_type,sum(period.award_period_currency)/0.7)*cfg.award_config_currency,award_sum_type
  from epmms_award_period as period,award.epmms_award_config_pair_member as cfg,epmms_membermap as m
  where period.award_period_period=award_period
  and period.award_period_type_id=350
  and period.award_period_type2=1
  and period.award_period_memberinfo_id=m.membermap_id
  and m.membermap_membertype_level=cfg.award_config_membertype
  group by period.award_period_memberinfo_id,cfg.award_config_currency
  having get_config_award(award_type,sum(period.award_period_currency)/0.7)%1300=0;

  insert into epmms_award_period(award_period_period
  ,award_period_memberinfo_id,award_period_type_id
  ,award_period_currency,award_period_sum_type)
  select award_period
  ,period.award_period_memberinfo_id,357
  ,abs(get_config_award(award_type,sum(period.award_period_currency)/0.7)),2
  from epmms_award_period as period
  where period.award_period_period=award_period
  and period.award_period_type_id=350
  and period.award_period_type2=1
  group by period.award_period_memberinfo_id
  having get_config_award(award_type,sum(period.award_period_currency)/0.7)%1300<>0;
END;
$$;


--
-- Name: award_dup_sum_type_no(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_dup_sum_type_no(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  insert into epmms_award_period(award_period_period
  ,award_period_memberinfo_id,award_period_type_id
  ,award_period_currency,award_period_sum_type)
  select award_period,period.award_period_memberinfo_id,award_type
  ,get_config_award(award_type,sum(period.award_period_currency)),award_sum_type
  from epmms_award_period as period
  where period.award_period_period=award_period and period.award_period_currency>0
  and period.award_period_type_id not in (508,511)
  and award_sum_type=period.award_period_sum_type
  group by period.award_period_memberinfo_id;

  insert into epmms_award_period(award_period_period
  ,award_period_memberinfo_id,award_period_type_id
  ,award_period_currency,award_period_sum_type)
  select award_period
  ,period.award_period_memberinfo_id,516
  ,abs(get_config_award(award_type,sum(period.award_period_currency))),2
  from epmms_award_period as period
  where period.award_period_period=award_period and period.award_period_currency>0
  and period.award_period_type_id not in (508,511)
  and award_sum_type=period.award_period_sum_type
  group by period.award_period_memberinfo_id;
END;
$$;


--
-- Name: award_fanben(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_fanben(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,my.membermap_id,award_type,get_config_award(award_type,my.membermap_money),award_sum_type
	from epmms_membermap as my
	where my.membermap_id=member_id
    and now()>=my.membermap_verify_date+ '1 month'::interval
    and (select sum(award_period_currency) from epmms_award_period where award_period_memberinfo_id=my.membermap_id and award_period_type_id=178)<my.membermap_money;
END;
$$;


--
-- Name: award_fanben_1004(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_fanben_1004(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,my.membermap_id,award_type,get_config_award(award_type,my.membermap_money)*pv(),award_sum_type
	from epmms_membermap as my
	where my.membermap_is_active=1
    and my.membermap_is_verify=1;
END;
$$;


--
-- Name: award_fanli(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_fanli(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$

BEGIN

    if award_sum_type=1 then

      insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

        select award_period,my.membermap_id,award_type,iif(f.finance_award<20,f.finance_award/2,10),award_sum_type

        from epmms_membermap as my,epmms_finance as f,epmms_memberinfo as mm

        where finance_memberinfo_id=my.membermap_id

        and finance_type=3

        and mm.memberinfo_id=my.membermap_id

        and my.membermap_is_verify=1

        and mm.memberinfo_is_enable=1;

    else

      insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

        select award_period,my.membermap_id,award_type,iif(f.finance_award<20,f.finance_award/2,10),3

        from epmms_membermap as my,epmms_finance as f,epmms_memberinfo as mm

        where finance_memberinfo_id=my.membermap_id

        and finance_type=3

        and mm.memberinfo_id=my.membermap_id

        and my.membermap_is_verify=1

        and mm.memberinfo_is_enable=1;

    end if;

    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

    select award_period,my.membermap_id,617,iif(f.finance_award<20,-(f.finance_award/2),-10),2

    from epmms_membermap as my,epmms_finance as f,epmms_memberinfo as mm

    where finance_memberinfo_id=my.membermap_id

    	and finance_type=3

    	and my.membermap_is_verify=1

    	and mm.memberinfo_id=my.membermap_id

    	and my.membermap_is_verify=1

    	and mm.memberinfo_is_enable=1;

END;

$$;


--
-- Name: award_global(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_global(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,cfg.currency*my.membermap_money/count(*) over(),award_sum_type
    from epmms_membermap as p,epmms_membermap as my,award.award_config_global_fenhong as cfg
    where my.membermap_id=member_id
    and p.membermap_level=cfg.level;
END;
$$;


--
-- Name: award_global_160228(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_global_160228(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,get_award_value(award_type)*my.membermap_money/count(*) over(),award_sum_type
    from epmms_membermap as p,epmms_membermap as my
    where my.membermap_id=member_id
    and p.membermap_level=1;
END;
$$;


--
-- Name: award_global_180330(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_global_180330(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	total_money numeric(16,2);
BEGIN
	select sum(membermap_money) into total_money from membermap_day;
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,my.membermap_id,award_type,total_money*get_award_value(award_type)*my.membermap_product_count/sum(membermap_product_count) over(),award_sum_type
    from epmms_membermap as my
    where my.membermap_is_empty =1 and coalesce((select sum(s.award_total_currency) from epmms_award_total as s where award_total_memberinfo_id=my.membermap_id and award_total_currency>0),0)<my.membermap_money;
END;
$$;


--
-- Name: award_global_180402(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_global_180402(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	total_money numeric(16,2);
BEGIN
	select sum(membermap_money) into total_money from membermap_month;
    if total_money is not null then
      insert into epmms_award_period(award_period_period,award_period_memberinfo_id
      ,award_period_type_id,award_period_currency,award_period_sum_type)
      select award_period,my.membermap_id,award_type,get_config_award(award_type,total_money)*my.membermap_product_count/sum(membermap_product_count) over(),award_sum_type
      from epmms_membermap as my
      where my.membermap_is_empty =0 and coalesce((select sum(s.award_total_currency) from epmms_award_total as s where award_total_memberinfo_id=my.membermap_id and award_total_currency>0),0)<my.membermap_money;
    end if;
END;
$$;


--
-- Name: award_global_month_fenhong(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_global_month_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$

BEGIN

    insert into epmms_award_period(award_period_period,award_period_memberinfo_id

    ,award_period_type_id,award_period_currency,award_period_sum_type)

    select award_period,p.membermap_id,award_type,award.global_month_perf()*currency/sum(currency) over(),award_sum_type

    from epmms_membermap as p,award.award_config_global_fenhong as cfg

    where p.membermap_level=cfg.upgrade_level;

END;

$$;


--
-- Name: award_gongpai_141203(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_gongpai_141203(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    out_member record;
BEGIN
    for out_member in select p.membermap_id from epmms_membermap4 as my4,epmms_membermap4 as p4,epmms_membermap as p
    where my4.membermap_member_id=member_id
    and my4.membermap_path like p4.membermap_path || '/%'
    and my4.membermap_layer-p4.membermap_layer=2
    and p4.membermap_member_id=p.membermap_id
    and p.membermap_recommend_number>=3
    and p.membermap_membertype_level=4
    and p.membermap_is_active=1
    and (select count(*) from epmms_membermap4 where
    membermap_path like p4.membermap_path || '/%' and membermap_layer-p4.membermap_layer=2
    and membermap_is_verify=1)=9 loop
        --update epmms_membermap4 set membermap_is_active=0 where membermap_id=out_member.membermap_id;
        /*insert into epmms_membermap3(membermap_name,membermap_member_id)
        select membermap_name,membermap_member_id from epmms_membermap4 where membermap_id=out_member.membermap_id;*/
        perform award.add_group(out_member.membermap_id);
    end loop;
END;
$$;


--
-- Name: award_gongshifenhong_180402(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_gongshifenhong_180402(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	total_money numeric(16,2);
BEGIN
	select membermap_money into total_money from epmms_membermap;
    if total_money is not null then
      insert into epmms_award_period(award_period_period,award_period_memberinfo_id
      ,award_period_type_id,award_period_currency,award_period_sum_type)
      select award_period,my.membermap_id,award_type,get_config_award(award_type,total_money)*my.membermap_product_count/sum(membermap_product_count) over(),award_sum_type
      from epmms_membermap as my
      where my.membermap_level=5;
    end if;
END;
$$;


--
-- Name: award_guli_151214(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_guli_151214(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,my.membermap_recommend_id,award_type,iif(coalesce((select count(*) from epmms_membermap where membermap_recommend_id=my.membermap_recommend_id and date_trunc('week',membermap_verify_date)=date_trunc('week',now())),0)=2,get_config_award(award_type)*2,get_config_award(award_type)),award_sum_type
    from epmms_membermap as my
    where my.membermap_id=member_id and coalesce((select count(*) from epmms_membermap where membermap_recommend_id=my.membermap_recommend_id and date_trunc('week',membermap_verify_date)=date_trunc('week',now())),0)>=2
    ;
END;
$$;


--
-- Name: award_huiben_layer(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_huiben_layer(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,cfg.award_config_currency*pv(),award_sum_type
    from epmms_membermap as p,epmms_membermap as my,award.epmms_award_config_dot_matrix as cfg,epmms_layer as s
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer=1
    and my.membermap_membertype_level=cfg.award_config_new_member
    and p.membermap_membertype_level=cfg.award_config_award_member
    and s.layer_member_id=p.membermap_id
    and s.layer_left_count=1
    and 1=get_loc(my.membermap_path,p.membermap_path);

    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,cfg.award_config_currency*pv(),award_sum_type
    from epmms_membermap as p,epmms_membermap as my,award.epmms_award_config_dot_matrix_left as cfg,epmms_layer as s
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer=1
    and my.membermap_membertype_level=cfg.award_config_new_member
    and p.membermap_membertype_level=cfg.award_config_award_member
    and s.layer_member_id=p.membermap_id
    and s.layer_right_count=1
    and 2=get_loc(my.membermap_path,p.membermap_path);
END;
$$;


--
-- Name: award_huiben_layer2(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_huiben_layer2(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,cfg.award_config_currency*pv(),award_sum_type
    from epmms_membermap as p,epmms_membermap as my,award.epmms_award_config_dot_matrix as cfg,epmms_layer as s
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer>1
    and my.membermap_membertype_level=cfg.award_config_new_member
    and p.membermap_membertype_level=cfg.award_config_award_member
    and s.layer_member_id=p.membermap_id
    and s.layer_left_count=1
    and 1=get_loc(my.membermap_path,p.membermap_path);

    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,cfg.award_config_currency*pv(),award_sum_type
    from epmms_membermap as p,epmms_membermap as my,award.epmms_award_config_dot_matrix_left as cfg,epmms_layer as s
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer>1
    and my.membermap_membertype_level=cfg.award_config_new_member
    and p.membermap_membertype_level=cfg.award_config_award_member
    and s.layer_member_id=p.membermap_id
    and s.layer_right_count=1
    and 2=get_loc(my.membermap_path,p.membermap_path);
END;
$$;


--
-- Name: award_huzhu(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_huzhu(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    bid integer;
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_bond_id,award_type,cfg.award_config_currency*pv(),award_sum_type
	from epmms_membermap2 as p,epmms_membermap2 as my,award.award_config_huzhu as cfg
	where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer=cfg.award_config_layer
    and (select count(*) from epmms_membermap2 where membermap_path like p.membermap_path || '/%' and membermap_layer-p.membermap_layer=cfg.award_config_layer)=2^cfg.award_config_layer;
    --raise exception 'member_id:%',member_id;
    select award_period_memberinfo_id into bid from epmms_award_period where award_period_type_id=award_type and award_period_period=award_period and award_period_currency=2500;
    if bid is not null then
       perform award.intobmap(bid);
    end if;
END;
$$;


--
-- Name: award_huzhu_150805(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_huzhu_150805(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  insert into epmms_award_period(award_period_period
  ,award_period_memberinfo_id,award_period_type_id
  ,award_period_currency,award_period_sum_type)
  select award_period,aa.membermap_id,award_type
  ,get_config_award(award_type,award_period_currency)/count(*) over (partition by aa.award_period_memberinfo_id),award_sum_type
  from (select p.membermap_id,period.award_period_memberinfo_id,sum(period.award_period_currency) as award_period_currency,row_number() over(partition by period.award_period_memberinfo_id order by p.membermap_verify_seq desc) as pseq
  from epmms_award_period as period,epmms_membermap as my,epmms_membermap as p
  where period.award_period_period=award_period and period.award_period_currency>0
  and award_sum_type=period.award_period_sum_type
  and period.award_period_type_id in (260,261,262)
  and period.award_period_memberinfo_id=my.membermap_id
  and my.membermap_verify_seq-p.membermap_verify_seq>=1
  and p.membermap_is_empty=0
  and (select sum(award_total_currency) from epmms_award_total where award_total_type_id in (260,261,262,263) and award_total_memberinfo_id=period.award_period_memberinfo_id)<1980
  group by period.award_period_memberinfo_id,p.membermap_id) as aa
  where aa.pseq<=10;
END;
$$;


--
-- Name: award_huzhu_180330(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_huzhu_180330(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type
	,(finance_award::integer/700)*700*0.01/count(*) over (partition by p.membermap_layer)
    ,award_sum_type
	from epmms_membermap as p,epmms_membermap as my,epmms_finance as fin
	where my.membermap_id=fin.finance_memberinfo_id
	and p.membermap_path like my.membermap_path || '/%'
    and p.membermap_layer-my.membermap_layer<=10
    and fin.finance_award>=700 and fin.finance_type=3;
    
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type
	,(finance_award::integer/700)*700*0.01
    ,award_sum_type
	from epmms_membermap as p,epmms_membermap as my,epmms_finance as fin
	where my.membermap_id=fin.finance_memberinfo_id
	and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer<=15
    and fin.finance_award>=700 and fin.finance_type=3;
    
    update epmms_finance set finance_award=finance_award%700 where finance_award>=700 and finance_type=3;
END;
$$;


--
-- Name: award_in10out1(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_in10out1(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    dup_award record;
    username text;
    mseq integer;
    member_id_b integer;
BEGIN
    if award_calc_type=2 then
      select membermap_id into member_id_b from epmms_membermap3
      where membermap_is_active=1
      order by membermap_seq asc
      limit 1;
      insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
      award_period_type_id,award_period_currency,award_period_sum_type)
      select award_period,membermap_member_id,award_type
      ,get_award_value(award_type),award_sum_type
      from epmms_membermap3
      where membermap_id=member_id_b;
      update epmms_membermap3 set membermap_is_active=0 where membermap_id=member_id_b;
    else
      while (select count(*) from epmms_finance where finance_type=3 and finance_award>=12000)>0 loop
        for dup_award in select * from epmms_finance where finance_type=3 and finance_award>=12000 loop
            username:=genusername3();
            insert into epmms_membermap3(membermap_name,membermap_member_id) 
            values(username,dup_award.finance_memberinfo_id);
            update epmms_finance set finance_award=finance_award-12000 
            where finance_type=3 and finance_memberinfo_id=dup_award.finance_memberinfo_id;
            select membermap_seq into mseq from epmms_membermap3 where membermap_name=username;
            if mseq % 10 =0 then
                select membermap_id into member_id_b from epmms_membermap3
                where membermap_name=username;
                perform epmms_verify_award_group_b(member_id,nextval('award_period'),award_sum_type,1,2,member_id_b);
            end if;
        end loop;
      end loop;
   end if;
END;
$$;


--
-- Name: award_jackpot_fanxian(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_jackpot_fanxian(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
      insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
		  select award_period,jackpot_member_id,award_type,jackpot_money,award_sum_type
        from epmms_jackpot_win_record
        where jackpot_id = award_calc_type;
END;
$$;


--
-- Name: award_layer1_0920(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_layer1_0920(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,get_config_award(award_type)*my.membermap_product_count,award_sum_type
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id and p.membermap_id=my.membermap_parent_id;
END;
$$;


--
-- Name: award_layer_full_layer(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_layer_full_layer(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type
    ,cfg.award_config_currency,award_sum_type
	from epmms_membermap as p,epmms_membermap as my,award.epmms_award_config_layer_full_layer as cfg
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer=cfg.award_config_layer
    and 2^cfg.award_config_layer=(select count(*) from epmms_membermap
     where membermap_layer=my.membermap_layer and membermap_path like p.membermap_path || '/%');
END;
$$;


--
-- Name: award_layer_full_layer_141120(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_layer_full_layer_141120(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type
    ,cfg.award_config_currency,award_sum_type
    from epmms_membermap as p,epmms_membermap as my,award.epmms_award_config_layer_full_layer as cfg
    where my.membermap_id=member_id
    and my.membermap_layer-p.membermap_layer=cfg.award_config_layer
    and my.membermap_path like p.membermap_path || '/2%'
    and exists(select 1 from epmms_membermap where membermap_path like p.membermap_path || '/1%' and membermap_layer=p.membermap_layer+cfg.award_config_layer)
    and (select count(*) from epmms_award_period where award_period_memberinfo_id=p.membermap_id and award_period_type_id=award_type)<2;

    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type
    ,cfg.award_config_currency,award_sum_type
    from epmms_membermap as p,epmms_membermap as my,award.epmms_award_config_layer_full_layer as cfg
    where my.membermap_id=member_id
    and my.membermap_layer-p.membermap_layer=cfg.award_config_layer
    and my.membermap_path like p.membermap_path || '/1%'
    and exists(select 1 from epmms_membermap where membermap_path like p.membermap_path || '/2%' and membermap_layer=p.membermap_layer+cfg.award_config_layer)
    and (select count(*) from epmms_award_period where award_period_memberinfo_id=p.membermap_id and award_period_type_id=award_type)<2;
END;
$$;


--
-- Name: award_layer_pair_status(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_layer_pair_status(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
    select award_period,x.parent_relation_upper_id,award_type,
    (s.little_product_count-s.status_pair)*c.award_config_currency*pv()
    ,award_sum_type
    from epmms_parent_relation as x,epmms_memberstatus as s,award.epmms_award_config_pair_member as c,
    epmms_membermap as my,epmms_membermap as px
    where x.parent_relation_member_id=member_id
    and x.parent_relation_upper_id=s.status_id
    and s.little_product_count>s.status_pair
    and my.membermap_id=member_id
    and px.membermap_id=x.parent_relation_upper_id
    and (select count(*) from epmms_award_period where award_period_memberinfo_id=px.membermap_id and award_period_type_id=award_type)<my.membermap_layer-px.membermap_layer;
    --更新碰数
    /*
    update epmms_memberstatus as s set status_pair=s.little_product_count
    from epmms_parent_relation as x
    where x.parent_relation_member_id=member_id
    and x.parent_relation_upper_id=s.status_id
    and s.little_product_count>s.status_pair;*/
END;
$$;


--
-- Name: award_layer_pair_status_150919(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_layer_pair_status_150919(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
    select award_period,x.parent_relation_upper_id,award_type,
    (s.little_product_count-s.status_pair)*c.award_config_currency*pv()
    ,award_sum_type
    from epmms_parent_relation as x,epmms_memberstatus as s,award.epmms_award_config_pair_member_150919 as c,
    epmms_membermap as my,epmms_membermap as px
    where x.parent_relation_member_id=member_id
    and x.parent_relation_upper_id=s.status_id
    and s.little_product_count>s.status_pair
    and my.membermap_id=member_id
    and px.membermap_id=x.parent_relation_upper_id
    and (select count(*) from epmms_award_period where award_period_memberinfo_id=px.membermap_id and award_period_type_id=award_type)<my.membermap_layer-px.membermap_layer;
    --更新碰数
    
    update epmms_memberstatus as s set status_pair=s.little_product_count
    from epmms_parent_relation as x
    where x.parent_relation_member_id=member_id
    and x.parent_relation_upper_id=s.status_id
    and s.little_product_count>s.status_pair;
END;
$$;


--
-- Name: award_leader(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_leader(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,get_config_award(award_type,period.award_period_currency),award_sum_type
	from epmms_award_period as period,epmms_membermap as p,epmms_membermap as my
	where period.award_period_period=award_period
    and period.award_period_type_id=335
    and my.membermap_id=period.award_period_memberinfo_id
    and p.membermap_path like my.membermap_path || '/%'
    and p.membermap_layer-my.membermap_layer<=4;
END;
$$;


--
-- Name: award_leader_1004(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_leader_1004(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,get_config_award(award_type,period.award_period_currency)/count(*) over (partition by my.membermap_id),award_sum_type
	from epmms_award_period as period,epmms_membermap as p,epmms_membermap as my
	where period.award_period_period=award_period
    and period.award_period_type_id=191
    and my.membermap_id=period.award_period_memberinfo_id
    and p.membermap_path like my.membermap_path || '/%'
    and p.membermap_layer-my.membermap_layer<=3
    and p.membermap_is_active=1;

	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,get_config_award(award_type,period.award_period_currency),award_sum_type
	from epmms_award_period as period,epmms_membermap as p,epmms_membermap as my
	where period.award_period_period=award_period
    and period.award_period_type_id=191
    and my.membermap_id=period.award_period_memberinfo_id
    and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer<=5
    and p.membermap_is_active=1;
END;
$$;


--
-- Name: award_leader_141203(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_leader_141203(member_id integer, award_period integer, my_award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,cfg.award_type,cfg.award_money,award_sum_type
	from epmms_membermap as p,epmms_membermap as my,award.award_config_manage as cfg
	where my.membermap_id=member_id
    and my.membermap_membertype_level=4
    and my.membermap_recommend_path like  p.membermap_recommend_path || '/%'
    and my.membermap_recommend_layer-p.membermap_recommend_layer=cfg.award_layer
    and p.membermap_is_active=1;
END;
$$;


--
-- Name: award_leader_141203_agent(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_leader_141203_agent(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,270,award_sum_type
	from epmms_membermap as p,epmms_membermap as my
	where my.membermap_id=member_id
    and my.membermap_membertype_level=4
    and p.membermap_id=my.membermap_agent_id
    and p.membermap_is_active=1;
END;
$$;


--
-- Name: award_leader_fenhong(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_leader_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,cfg.currency,award_sum_type
	from epmms_membermap as p,epmms_membermap as my,award.award_config_leader_fenhong as cfg
	where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and p.membermap_level=cfg.level;
END;
$$;


--
-- Name: award_leader_little(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_leader_little(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,get_config_award(award_type,period.award_period_currency),award_sum_type
	from epmms_award_period as period,epmms_membermap as p,epmms_membermap as pl,epmms_membermap as my,epmms_memberstatus as ps
	where period.award_period_period=award_period
    and period.award_period_type_id=473
    and my.membermap_id=period.award_period_memberinfo_id
    and my.membermap_path like pl.membermap_path || '%'
    and p.membermap_id=pl.membermap_parent_id
    and p.membermap_id=ps.status_id
    and iif(ps.left_product_count<=ps.right_product_count,1,2)=pl.membermap_order;
END;
$$;


--
-- Name: award_leader_recommend(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_leader_recommend(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,cfg.award_config_money*period.award_period_currency,award_sum_type
	from epmms_membermap as p,epmms_membermap as my,award.award_config_leader_recommend as cfg,
    (select award_period_memberinfo_id,sum(award_period_currency) as award_period_currency from epmms_award_period
    where award_period_period=award_period
    and award_period_type_id=423
    group by award_period_memberinfo_id) as period
	where my.membermap_id=period.award_period_memberinfo_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and my.membermap_recommend_layer-p.membermap_recommend_layer=cfg.award_config_recommend_layer
    and p.membermap_membertype_level=cfg.award_config_membertype
    and p.membermap_is_active=1;
END;
$$;


--
-- Name: award_leader_recommend2(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_leader_recommend2(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,cfg.award_config_money*period.award_period_currency,award_sum_type
	from epmms_membermap as p,epmms_membermap as my,award.award_config_leader_recommend2 as cfg,
    epmms_award_period as period
	where period.award_period_period=award_period
    and period.award_period_type_id=383
    and my.membermap_id=period.award_period_memberinfo_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and my.membermap_recommend_layer-p.membermap_recommend_layer=cfg.award_config_recommend_layer
    and p.membermap_membertype_level=cfg.award_config_membertype
    and p.membermap_is_active=1;
END;
$$;


--
-- Name: award_leader_recommend_160106(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_leader_recommend_160106(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,cfg.award_config_money*period.award_period_currency,award_sum_type
	from epmms_membermap as p,epmms_membermap as my,award.award_config_leader_recommend2 as cfg,
    epmms_award_period as period
	where period.award_period_period=award_period
    and period.award_period_type_id=327
    and my.membermap_id=period.award_period_memberinfo_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and my.membermap_recommend_layer-p.membermap_recommend_layer=cfg.award_config_recommend_layer
    --and p.membermap_membertype_level=cfg.award_config_membertype
    and p.membermap_is_active=1;
END;
$$;


--
-- Name: award_level_first(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_level_first(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,iif(p.membermap_membertype_level=1,80,160),award_sum_type
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and p.membermap_level=1
    order by p.membermap_recommend_layer desc limit 1;
END;
$$;


--
-- Name: award_level_second(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_level_second(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,38,award_sum_type
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and p.membermap_level=1
    order by p.membermap_recommend_layer desc limit 1 offset 2;
END;
$$;


--
-- Name: award_lt_bonus(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_lt_bonus(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$

BEGIN

  if award_sum_type=1 then

      insert into epmms_award_period(award_period_period,award_period_memberinfo_id

      ,award_period_type_id,award_period_currency,award_period_sum_type)

      select award_period,p.membermap_id,award_type,(cfg.award_config_currency*my.membermap_money)/2,award_sum_type

      from epmms_membermap as p,epmms_membermap as my,public.epmms_award_config_bonus as cfg,epmms_memberinfo as pm,epmms_memberinfo as mm

      where my.membermap_path like p.membermap_path || '/%'

          and my.membermap_layer-p.membermap_layer<@cfg.award_config_recommend_layer

          and p.membermap_recommend_number<@cfg.award_config_recommend_count

          and my.membermap_id=mm.memberinfo_id

          and mm.memberinfo_is_enable=1

          and p.membermap_id=pm.memberinfo_id

          and pm.memberinfo_is_enable=1;

  else

      insert into epmms_award_period(award_period_period,award_period_memberinfo_id

      ,award_period_type_id,award_period_currency,award_period_sum_type)

      select award_period,p.membermap_id,award_type,(cfg.award_config_currency*my.membermap_money)/2,3

      from epmms_membermap as p,epmms_membermap as my,public.epmms_award_config_bonus as cfg,epmms_memberinfo as pm,epmms_memberinfo as mm

      where my.membermap_path like p.membermap_path || '/%'

          and my.membermap_layer-p.membermap_layer<@cfg.award_config_recommend_layer

          and p.membermap_recommend_number<@cfg.award_config_recommend_count

          and my.membermap_id=mm.memberinfo_id

          and mm.memberinfo_is_enable=1

          and p.membermap_id=pm.memberinfo_id

          and pm.memberinfo_is_enable=1;

  end if;

END;

$$;


--
-- Name: award_lt_recommend(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_lt_recommend(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$

BEGIN

      if award_sum_type=1 then

          insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

          select award_period,my.membermap_id,award_type,iif(my.membermap_recommend_number<9,iif(f.finance_award<my.membermap_recommend_number*10,f.finance_award/2,my.membermap_recommend_number*10/2),iif(f.finance_award<100,f.finance_award/2,50)),award_sum_type

          from epmms_membermap as my,epmms_finance as f,epmms_memberinfo as mm

          where finance_memberinfo_id=my.membermap_id

          and my.membermap_recommend_number>0

          and finance_type=3

          and mm.memberinfo_id=my.membermap_id

          and my.membermap_is_verify=1

          and mm.memberinfo_is_enable=1;

      else

          insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

          select award_period,my.membermap_id,award_type,iif(my.membermap_recommend_number<9,iif(f.finance_award<my.membermap_recommend_number*10,f.finance_award/2,my.membermap_recommend_number*10/2),iif(f.finance_award<100,f.finance_award/2,50)),3

          from epmms_membermap as my,epmms_finance as f,epmms_memberinfo as mm

          where finance_memberinfo_id=my.membermap_id

          and my.membermap_recommend_number>0

          and finance_type=3

          and mm.memberinfo_id=my.membermap_id

          and my.membermap_is_verify=1

          and mm.memberinfo_is_enable=1;

      end if;

      insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

      select award_period,my.membermap_id,617,iif(my.membermap_recommend_number<9,iif(f.finance_award<my.membermap_recommend_number*10,-(f.finance_award/2),-(my.membermap_recommend_number*10/2)),iif(f.finance_award<100,-(f.finance_award/2),-50)),2

      from epmms_membermap as my,epmms_finance as f,epmms_memberinfo as mm

      where finance_memberinfo_id=my.membermap_id

      and my.membermap_recommend_number>0

      and finance_type=3

      and mm.memberinfo_id=my.membermap_id

      and my.membermap_is_verify=1

      and mm.memberinfo_is_enable=1;

END;

$$;


--
-- Name: award_manage(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_manage(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
    award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period
    ,period.award_period_memberinfo_id
    ,award_type
    ,-sum(period.award_period_currency)
	,award_sum_type
    from epmms_award_period as period
    where period.award_period_period=award_period
    and period.award_period_sum_type=award_sum_type
	group by period.award_period_memberinfo_id;
END;
$$;


--
-- Name: award_market(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_market(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,cfg.currency*period.award_period_currency,award_sum_type
	from epmms_award_period as period,epmms_membermap as p,epmms_membermap as my,award.award_config_market as cfg
	where period.award_period_period=award_period
    and period.award_period_type_id=170
    and my.membermap_id=period.award_period_memberinfo_id
    and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer<@cfg.layer;
END;
$$;


--
-- Name: award_month_fenhong(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_month_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
    month_money numeric(16,4);
BEGIN
    select coalesce(sum(membermap_money),0) into month_money from membermap_month;
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period
	,p.membermap_id
	,award_type
	,cfg.award_currency*month_money/count(*) over (partition by p.membermap_level)
    ,award_sum_type
	from epmms_membermap as p,award.epmms_award_config_month_fenhong as cfg
	where p.membermap_is_verify=1
    and p.membermap_level=cfg.award_membertype
    and coalesce((select sum(s.award_total_currency) from epmms_award_total as s where award_total_memberinfo_id=p.membermap_id and award_total_type_id=447),0)>=cfg.award_config_limit;
END;
$$;


--
-- Name: FUNCTION award_month_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer); Type: COMMENT; Schema: award; Owner: -
--

COMMENT ON FUNCTION award.award_month_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) IS '公司上周业绩周分红';


--
-- Name: award_month_fenhong_181111(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_month_fenhong_181111(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$

declare

    day_money numeric(16,4);

BEGIN

	insert into epmms_award_period(award_period_period

    ,award_period_memberinfo_id,award_period_type_id

    ,award_period_currency,award_period_sum_type)

	select award_period

	,p.membermap_id

	,award_type

	,award_config_currency

    ,award_sum_type

	from epmms_membermap as p,award.award_config_fenhong_level as cfg

	where p.membermap_is_verify=1

    and p.membermap_level=cfg.award_config_level

    and public.get_l_under_product_count_date2(p.membermap_id)>=cfg.award_config_month_money;

    update epmms_memberstatus set left_product_count3=0,right_product_count3=0,count3_date=current_date;

END;

$$;


--
-- Name: award_order(integer, integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_order(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer, order_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,get_config_award(award_type,o.orders_currency)*pv(),award_sum_type
	from epmms_membermap as p,epmms_membermap as my,epmms_orders as o
	where my.membermap_id=member_id
    and o.orders_id=order_id
    and my.membermap_recommend_id=p.membermap_id
    and p.membermap_is_active=1;
END;
$$;


--
-- Name: award_order_2(integer, integer, integer, integer, integer, numeric); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_order_2(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer, order_money numeric) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,m.membermap_member_id,award_type,order_money*0.03*pv(),award_sum_type
	from epmms_membermap4 as my,epmms_membermap4 as m,epmms_membermap as mp
	where my.membermap_member_id=member_id
    and my.membermap_path like m.membermap_path || '/%'
    and m.membermap_member_id=mp.membermap_id
    and mp.membermap_is_active=1
    and my.membermap_layer-m.membermap_layer<=2;
END;
$$;


--
-- Name: award_order_3(integer, integer, integer, integer, integer, numeric); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_order_3(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer, order_money numeric) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,my.membermap_agent_id,award_type,order_money*0.07*pv(),award_sum_type
	from epmms_membermap as my
	where my.membermap_id=member_id;
END;
$$;


--
-- Name: award_order_anxin(integer, integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_order_anxin(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer, order_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,pn.pid,award_type,get_config_award(award_type,o.orders_currency),award_sum_type
	from (  select row_number() over(order by p.membermap_recommend_layer desc) as rno,p.membermap_id as pid
    from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and p.membermap_membertype_level=1 and my.membermap_membertype_level<>1) as pn ,epmms_orders as o
    where pn.rno=2
    and o.orders_id=order_id;
END;
$$;


--
-- Name: award_order_anxin_jc(integer, integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_order_anxin_jc(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer, order_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    a_no integer;
BEGIN
    select count(*) into a_no
    from epmms_membermap as my,epmms_membermap as p
    where my.membermap_id=member_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and p.membermap_membertype_level=1;
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,pn.pid,award_type,iif(a_no>=2,get_config_award(487,o.orders_currency),get_config_award(award_type,o.orders_currency)),award_sum_type
	from (  select row_number() over(order by p.membermap_recommend_layer desc) as rno,p.membermap_id as pid
    from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and p.membermap_membertype_level=1    and my.membermap_membertype_level<>1) as pn ,epmms_orders as o
    where pn.rno=1
    and o.orders_id=order_id;
END;
$$;


--
-- Name: award_order_buy(integer, integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_order_buy(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer, order_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,my.membermap_id,award_type,o.orders_price,award_sum_type
    from epmms_orders as o,epmms_membermap as my
    where my.membermap_id=member_id
    and o.orders_id=order_id;
END;
$$;


--
-- Name: award_order_fanli(integer, integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_order_fanli(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer, order_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,my.membermap_id,award_type,cfg.award_config_currency*o.orders_currency,award_sum_type
	from epmms_membermap as my,epmms_orders as o,award.award_config_fanli as cfg
	where my.membermap_id=member_id
    and cfg.award_config_membertype=my.membermap_membertype_level
    and o.orders_id=order_id;
END;
$$;


--
-- Name: award_pair(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_pair(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
    select award_period,x.membermap_id,award_type,
    (get_l_under_product_count(x.membermap_id)-s.status_pair)*get_bill_money()*c.award_config_currency*pv()
    ,award_sum_type
    from epmms_membermap as my,epmms_membermap as x,epmms_memberstatus as s,award.epmms_award_config_pair_member as c
    where my.membermap_id=member_id
    and my.membermap_path like x.membermap_path || '/%'
    and x.membermap_id=s.status_id
    and get_l_under_product_count(x.membermap_id::integer)-s.status_pair>0
    and c.award_config_membertype=x.membermap_membertype_level
    and x.membermap_is_active=1;

    --更新碰数
    
    update epmms_memberstatus as s set status_pair=get_l_under_product_count(x.membermap_id) 
    from epmms_membermap as my,epmms_membermap as x
    where my.membermap_id=member_id
    and my.membermap_path like x.membermap_path || '/%'
    and x.membermap_id=s.status_id
    and get_l_under_product_count(x.membermap_id)-s.status_pair>0;
END;
$$;


--
-- Name: award_pair_150210(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_pair_150210(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
    select award_period,x.membermap_id,award_type,
    (award.get_l_under_product_count_150210(x.membermap_id)-s.status_pair)*get_bill_money()*c.award_config_currency*pv()
    ,award_sum_type
    from epmms_membermap as my,epmms_membermap as x,epmms_memberstatus as s,award.epmms_award_config_pair_member as c
    where my.membermap_id=member_id
    and my.membermap_path like x.membermap_path || '/%'
    and x.membermap_id=s.status_id
    and award.get_l_under_product_count_150210(x.membermap_id::integer)-s.status_pair>0
    and c.award_config_membertype=x.membermap_membertype_level
    and x.membermap_is_active=1;

    --更新碰数
    update epmms_memberstatus as s set status_pair=award.get_l_under_product_count_150210(x.membermap_id) 
    from epmms_membermap as my,epmms_membermap as x
    where my.membermap_id=member_id
    and my.membermap_path like x.membermap_path || '/%'
    and x.membermap_id=s.status_id
    and award.get_l_under_product_count_150210(x.membermap_id)-s.status_pair>0;
END;
$$;


--
-- Name: award_pair_170224(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_pair_170224(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	perform award.award_pair_status33(member_id,award_period,award_type,award_sum_type,award_calc_type);
    perform award.award_pair_status22(member_id,award_period,award_type,award_sum_type,award_calc_type);
    perform award.award_pair_status11(member_id,award_period,award_type,award_sum_type,award_calc_type);
END;
$$;


--
-- Name: award_pair_2(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_pair_2(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
    select award_period,x.membermap_bond_id,award_type,
    (get_l_under_product_count2(x.membermap_id)-s.status_pair)*c.award_config_currency*pv()
    ,award_sum_type
    from epmms_membermap2 as my,epmms_membermap2 as x,epmms_memberstatus as s,award.epmms_award_config_pair_member as c
    where my.membermap_bond_id=member_id
    and my.membermap_path like x.membermap_path || '/%'
    and x.membermap_id=s.status_id
    and get_l_under_product_count2(x.membermap_id::integer)-s.status_pair>0
    and c.award_config_membertype=x.membermap_membertype
    and x.membermap_is_active=1;

    --更新碰数
    update epmms_memberstatus as s set status_pair=get_l_under_product_count2(x.membermap_id) 
    from epmms_membermap2 as my,epmms_membermap2 as x
    where my.membermap_bond_id=member_id
    and my.membermap_path like x.membermap_path || '/%'
    and x.membermap_id=s.status_id
    and get_l_under_product_count2(x.membermap_id)-s.status_pair>0;
END;
$$;


--
-- Name: award_pair_layer(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_pair_layer(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type,award_period_type2)
    select award_period,s.layer_member_id,award_type,
    (s.layer_little-s.layer_pair)*c.award_config_currency*get_bill_money()
    ,award_sum_type,iif(s.layer_layer=1,1,null)
    from epmms_layer as s,award.award_config_layer_pair_member as c,
    epmms_membermap as px
    where s.layer_little>s.layer_pair
    and px.membermap_id=s.layer_member_id
    --and s.layer_layer<@c.award_config_layer
    and px.membermap_membertype_level=c.award_config_membertype;
    --更新碰数

    update epmms_layer as l set layer_pair=l.layer_little
    where l.layer_little>layer_pair;
END;
$$;


--
-- Name: award_pair_layer_150210(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_pair_layer_150210(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
    select award_period,x.membermap_id,iif(my.membermap_layer-x.membermap_layer=1,350,351),
    award.get_layer_money(x.membermap_id,my.membermap_layer-x.membermap_layer)*iif(my.membermap_layer-x.membermap_layer=1,1,0.5)
    ,award_sum_type
    from epmms_membermap as my,epmms_membermap as x
    where my.membermap_id=member_id
    and my.membermap_path like x.membermap_path || '/%'
    and award.is_layer_pair(x.membermap_id,my.membermap_layer-x.membermap_layer)=1
    and my.membermap_layer-x.membermap_layer<=2
    and (select count(*) from epmms_award_period where award_period_memberinfo_id=x.membermap_id
    and award_period_type_id=award_type)<my.membermap_layer-x.membermap_layer
    and x.membermap_is_active=1;

    --更新碰数
    update epmms_memberstatus as s set status_pair=status_pair+period.award_period_currency/get_award_value(award_type)*100/get_bill_money()
    from epmms_award_period as period
    where period.award_period_period=award_period
    and period.award_period_type_id in (350,351)
    and period.award_period_currency>0
    and s.status_id=period.award_period_memberinfo_id;
END;
$$;


--
-- Name: award_pair_layer_status(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_pair_layer_status(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type,award_period_type2)
    select award_period,s.layer_member_id,award_type,
    (s.layer_little-s.layer_pair)*c.award_config_currency*get_bill_money()
    ,award_sum_type,iif(s.layer_layer=1,1,null)
    from epmms_layer as s,award.award_config_layer_pair_member as c,
    epmms_membermap as px
    where s.layer_little>0
    and s.layer_pair=0
    and px.membermap_id=s.layer_member_id
    and s.layer_layer<@c.award_config_layer
    --and px.membermap_membertype_level=c.award_config_membertype
    ;
    --更新碰数

    update epmms_memberstatus as s set left_product_count=s.left_product_count+iif(l.layer_first_order=1,m.membermap_product_count,0)
    ,right_product_count=s.right_product_count+iif(l.layer_first_order=2,m.membermap_product_count,0)
    ,little_product_count=iif(s.left_product_count+iif(l.layer_first_order=1,m.membermap_product_count,0)<s.right_product_count+iif(l.layer_first_order=2,m.membermap_product_count,0),s.left_product_count+iif(l.layer_first_order=1,m.membermap_product_count,0),s.right_product_count+iif(l.layer_first_order=2,m.membermap_product_count,0))
    from epmms_layer as l,epmms_membermap as m
    where l.layer_little>0
    and l.layer_pair=0
    and l.layer_first_member=m.membermap_id
    and s.status_id=l.layer_member_id;

    update epmms_memberstatus as s set status_pair=status_pair+l.layer_little
    from epmms_layer as l
    where l.layer_little>0
    and l.layer_pair=0
    and l.layer_member_id=s.status_id;
    
    update epmms_layer as s set layer_pair=s.layer_little
    where s.layer_little>0
    and s.layer_pair=0;
END;
$$;


--
-- Name: award_pair_layer_status_160601(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_pair_layer_status_160601(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type,award_period_type2)
    select award_period,s.layer_member_id,award_type,
    (s.layer_little-s.layer_pair)*c.award_config_currency*get_bill_money()
    ,award_sum_type,iif(s.layer_layer=1,1,null)
    from epmms_layer as s,award.award_config_layer_pair_member as c,
    epmms_membermap as px
    where s.layer_little>0
    and s.layer_pair=0
    and px.membermap_id=s.layer_member_id
    and s.layer_layer>=4
    and px.membermap_membertype_level=c.award_config_membertype;
    --更新碰数
/*
    update epmms_memberstatus as s set left_product_count=s.left_product_count+iif(l.layer_first_order=1,m.membermap_product_count,0)
    ,right_product_count=s.right_product_count+iif(l.layer_first_order=2,m.membermap_product_count,0)
    ,little_product_count=iif(s.left_product_count+iif(l.layer_first_order=1,m.membermap_product_count,0)<s.right_product_count+iif(l.layer_first_order=2,m.membermap_product_count,0),s.left_product_count+iif(l.layer_first_order=1,m.membermap_product_count,0),s.right_product_count+iif(l.layer_first_order=2,m.membermap_product_count,0))
    from epmms_layer as l,epmms_membermap as m
    where l.layer_little>0
    and l.layer_pair=0
    and l.layer_first_member=m.membermap_id
    and s.status_id=l.layer_member_id;

    update epmms_memberstatus as s set status_pair=status_pair+l.layer_little
    from epmms_layer as l
    where l.layer_little>0
    and l.layer_pair=0
    and l.layer_member_id=s.status_id;*/
    
    update epmms_layer as s set layer_pair=s.layer_little
    where s.layer_little>0
    and s.layer_pair=0;
END;
$$;


--
-- Name: award_pair_layer_status_dup(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_pair_layer_status_dup(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type,award_period_type2)
    select award_period,s.layer_member_id,award_type,
    (s.layer_little-s.layer_pair)*c.award_config_currency*get_bill_money()
    ,award_sum_type,iif(s.layer_layer=1,1,null)
    from epmms_layer as s,award.award_config_layer_pair_member as c,
    epmms_membermap as px
    where s.layer_little>0
    and s.layer_pair=0
    and px.membermap_id=s.layer_member_id
    and px.membermap_membertype_level=c.award_config_membertype
    and s.layer_layer<@c.award_config_layer;
    --更新碰数
    
    update epmms_layer as s set layer_pair=s.layer_little
    where s.layer_little>0
    and s.layer_pair=0;
END;
$$;


--
-- Name: award_pair_layer_status_recommend(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_pair_layer_status_recommend(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type,award_period_type2)
    select award_period,s.layer_member_id,award_type,
    (s.layer_little-s.layer_pair)*c.award_config_currency*get_bill_money()
    ,award_sum_type,iif(s.layer_layer=1,1,null)
    from epmms_layer as s,award.award_config_layer_pair_member as c,
    epmms_membermap as px
    where s.layer_little>0
    and s.layer_pair=0
    and px.membermap_id=s.layer_member_id
    and s.layer_layer<@c.award_config_layer
    and px.membermap_recommend_number<@c.award_config_recommend
    and px.membermap_membertype_level=c.award_config_membertype;
    --更新碰数

    update epmms_memberstatus as s set left_product_count=s.left_product_count+iif(l.layer_first_order=1,m.membermap_product_count,0)
    ,right_product_count=s.right_product_count+iif(l.layer_first_order=2,m.membermap_product_count,0)
    ,little_product_count=iif(s.left_product_count+iif(l.layer_first_order=1,m.membermap_product_count,0)<s.right_product_count+iif(l.layer_first_order=2,m.membermap_product_count,0),s.left_product_count+iif(l.layer_first_order=1,m.membermap_product_count,0),s.right_product_count+iif(l.layer_first_order=2,m.membermap_product_count,0))
    from epmms_layer as l,epmms_membermap as m
    where l.layer_little>0
    and l.layer_pair=0
    and l.layer_first_member=m.membermap_id
    and s.status_id=l.layer_member_id;

    update epmms_memberstatus as s set status_pair=status_pair+l.layer_little
    from epmms_layer as l
    where l.layer_little>0
    and l.layer_pair=0
    and l.layer_member_id=s.status_id;
    
    update epmms_layer as s set layer_pair=s.layer_little
    where s.layer_little>0
    and s.layer_pair=0;
END;
$$;


--
-- Name: award_pair_status(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_pair_status(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$

BEGIN

    insert into epmms_award_period(award_period_period

    ,award_period_memberinfo_id,award_period_type_id

    ,award_period_currency,award_period_sum_type)

    select award_period,x.parent_relation_upper_id,award_type,

    (s.little_product_count-s.status_pair)*c.award_config_currency*pv()

    ,award_sum_type

    from epmms_parent_relation as x,epmms_memberstatus as s,award.epmms_award_config_pair_member as c,epmms_membermap as xm

    where x.parent_relation_member_id=member_id

    and x.parent_relation_upper_id=s.status_id

    and xm.membermap_id=x.parent_relation_upper_id

    and xm.membermap_membertype_level=c.award_config_membertype

    and s.little_product_count>s.status_pair;

    --更新碰数

    update epmms_memberstatus as s set status_pair=s.little_product_count

    from epmms_parent_relation as x

    where x.parent_relation_member_id=member_id

    and x.parent_relation_upper_id=s.status_id

    and s.little_product_count>s.status_pair;

END;

$$;


--
-- Name: award_pair_status11(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_pair_status11(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	cfg numeric(8,4)[3]:=array[0.16,0.32,0.64];
BEGIN
	loop
      insert into epmms_award_period(award_period_period
      ,award_period_memberinfo_id,award_period_type_id
      ,award_period_currency,award_period_sum_type)
      select award_period,x.parent_relation_upper_id,award_type,
      get_pairs_one(s.status_pair,s.left_product_count,s.status_pair2,s.right_product_count,1)*cfg[xm.membermap_membertype_level]*get_bill_money()
      ,award_sum_type
      from epmms_parent_relation as x,epmms_memberstatus as s,epmms_membermap as xm
      where x.parent_relation_member_id=member_id
      and x.parent_relation_upper_id=s.status_id
      and xm.membermap_id=x.parent_relation_upper_id
      and get_pairs_one(s.status_pair,s.left_product_count,s.status_pair2,s.right_product_count,1)>0
      order by xm.membermap_layer DESC limit 1;
      --更新碰数
      update epmms_memberstatus as s set status_pair=status_pair+get_pairs_bill_one(s.status_pair,s.left_product_count,s.status_pair2,s.right_product_count,1,0),
      status_pair2=status_pair2+get_pairs_bill_one(s.status_pair,s.left_product_count,s.status_pair2,s.right_product_count,1,1)
      from epmms_parent_relation as x
      where x.parent_relation_member_id=member_id
      and x.parent_relation_upper_id=s.status_id
      and get_pairs_one(s.status_pair,s.left_product_count,s.status_pair2,s.right_product_count,1)>0;
      if not found then
      	exit;
      end if;
    end loop;  
END;
$$;


--
-- Name: award_pair_status22(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_pair_status22(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	cfg numeric(8,4)[3]:=array[0.24,0.48,0.96];
BEGIN
	loop
      insert into epmms_award_period(award_period_period
      ,award_period_memberinfo_id,award_period_type_id
      ,award_period_currency,award_period_sum_type)
      select award_period,x.parent_relation_upper_id,award_type,
      get_pairs_one(s.status_pair,s.left_product_count,s.status_pair2,s.right_product_count,2)*cfg[xm.membermap_membertype_level]*get_bill_money()
      ,award_sum_type
      from epmms_parent_relation as x,epmms_memberstatus as s,epmms_membermap as xm
      where x.parent_relation_member_id=member_id
      and x.parent_relation_upper_id=s.status_id
      and xm.membermap_id=x.parent_relation_upper_id
      and get_pairs_one(s.status_pair,s.left_product_count,s.status_pair2,s.right_product_count,2)>0
      order by xm.membermap_layer DESC limit 1;
      --更新碰数
      update epmms_memberstatus as s set status_pair=status_pair+get_pairs_bill_one(s.status_pair,s.left_product_count,s.status_pair2,s.right_product_count,2,0),
      status_pair2=status_pair2+get_pairs_bill_one(s.status_pair,s.left_product_count,s.status_pair2,s.right_product_count,2,1)
      from epmms_parent_relation as x
      where x.parent_relation_member_id=member_id
      and x.parent_relation_upper_id=s.status_id
      and get_pairs_one(s.status_pair,s.left_product_count,s.status_pair2,s.right_product_count,2)>0;
      if not found then
      	exit;
      end if;
    end loop;
END;
$$;


--
-- Name: award_pair_status22_171128(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_pair_status22_171128(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	cfg numeric(8,4)[3]:=array[0.24,0.48,0.96];
BEGIN
	loop
      insert into epmms_award_period(award_period_period
      ,award_period_memberinfo_id,award_period_type_id
      ,award_period_currency,award_period_sum_type)
      select award_period,x.parent_relation_upper_id,award_type,
      get_pairs_one(s.status_pair,s.left_product_count,s.status_pair2,s.right_product_count,2)*150
      ,award_sum_type
      from epmms_parent_relation as x,epmms_memberstatus as s,epmms_membermap as xm
      where x.parent_relation_member_id=member_id
      and x.parent_relation_upper_id=s.status_id
      and xm.membermap_id=x.parent_relation_upper_id
      and get_pairs_one(s.status_pair,s.left_product_count,s.status_pair2,s.right_product_count,2)>0
      order by xm.membermap_layer DESC limit 1;
      --更新碰数
      update epmms_memberstatus as s set status_pair=status_pair+get_pairs_bill_one(s.status_pair,s.left_product_count,s.status_pair2,s.right_product_count,2,0),
      status_pair2=status_pair2+get_pairs_bill_one(s.status_pair,s.left_product_count,s.status_pair2,s.right_product_count,2,1)
      from epmms_parent_relation as x
      where x.parent_relation_member_id=member_id
      and x.parent_relation_upper_id=s.status_id
      and get_pairs_one(s.status_pair,s.left_product_count,s.status_pair2,s.right_product_count,2)>0;
      if not found then
      	exit;
      end if;
    end loop;
END;
$$;


--
-- Name: award_pair_status33(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_pair_status33(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	cfg numeric(8,4)[3]:=array[0.32,0.64,1.28];
BEGIN
	loop
      insert into epmms_award_period(award_period_period
      ,award_period_memberinfo_id,award_period_type_id
      ,award_period_currency,award_period_sum_type)
      select award_period,x.parent_relation_upper_id,award_type,
      get_pairs_one(s.status_pair,s.left_product_count,s.status_pair2,s.right_product_count,3)*cfg[xm.membermap_membertype_level]*get_bill_money()
      ,award_sum_type
      from epmms_parent_relation as x,epmms_memberstatus as s,epmms_membermap as xm
      where x.parent_relation_member_id=member_id
      and x.parent_relation_upper_id=s.status_id
      and xm.membermap_id=x.parent_relation_upper_id
      and get_pairs_one(s.status_pair,s.left_product_count,s.status_pair2,s.right_product_count,3)>0
      order by xm.membermap_layer DESC limit 1;
      --更新碰数
      update epmms_memberstatus as s set status_pair=status_pair+get_pairs_bill_one(s.status_pair,s.left_product_count,s.status_pair2,s.right_product_count,3,0),
      status_pair2=status_pair2+get_pairs_bill_one(s.status_pair,s.left_product_count,s.status_pair2,s.right_product_count,3,1)
      from epmms_parent_relation as x
      where x.parent_relation_member_id=member_id
      and x.parent_relation_upper_id=s.status_id
      and get_pairs_one(s.status_pair,s.left_product_count,s.status_pair2,s.right_product_count,3)>0;
      if not found then
      	exit;
      end if;
    end loop;
END;
$$;


--
-- Name: award_pair_status_150805(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_pair_status_150805(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
    select award_period,x.parent_relation_upper_id,iif((select count(*) from epmms_award_period where award_period_memberinfo_id=p.membermap_id and award_period_type_id=260)>=
    my.membermap_layer-p.membermap_layer,award_type,award_type-1),
    (s.little_product_count-s.status_pair)*iif((select count(*) from epmms_award_period where award_period_memberinfo_id=p.membermap_id and award_period_type_id=260)>=
    my.membermap_layer-p.membermap_layer,c.award_config_currency,get_award_value(award_type-1))*pv()
    ,award_sum_type
    from epmms_parent_relation as x,epmms_memberstatus as s,award.epmms_award_config_pair_member as c,
    epmms_membermap as my,epmms_membermap as p
    where x.parent_relation_member_id=member_id
    and x.parent_relation_upper_id=s.status_id
    and s.little_product_count>s.status_pair
    and my.membermap_id=member_id
    and p.membermap_id=x.parent_relation_upper_id;

    --更新碰数
    update epmms_memberstatus as s set status_pair=s.little_product_count
    from epmms_parent_relation as x
    where x.parent_relation_member_id=member_id
    and x.parent_relation_upper_id=s.status_id
    and s.little_product_count>s.status_pair;
END;
$$;


--
-- Name: award_pair_status_limit_layer(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_pair_status_limit_layer(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
    select award_period,x.parent_relation_upper_id,award_type,
    (s.little_product_count-s.status_pair)*c.award_config_currency*get_bill_money()
    ,award_sum_type
    from epmms_parent_relation as x,epmms_memberstatus as s,award.epmms_award_config_pair_member as c,epmms_membermap as xm
    ,epmms_membermap as my
    where x.parent_relation_member_id=member_id
    and my.membermap_id=member_id
    and x.parent_relation_upper_id=s.status_id
    and xm.membermap_id=x.parent_relation_upper_id
    and xm.membermap_membertype_level=c.award_config_membertype
    and s.little_product_count>s.status_pair
    and my.membermap_layer-xm.membermap_layer>5;
    --更新碰数
    update epmms_memberstatus as s set status_pair=s.little_product_count
    from epmms_parent_relation as x
    where x.parent_relation_member_id=member_id
    and x.parent_relation_upper_id=s.status_id
    and s.little_product_count>s.status_pair;
END;
$$;


--
-- Name: award_pair_status_with_layer(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_pair_status_with_layer(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
    select award_period,x.parent_relation_upper_id,award_type,
    (s.little_product_count-s.status_pair)*c.award_config_currency*get_bill_money()
    ,award_sum_type
    from epmms_parent_relation as x,epmms_memberstatus as s,
    award.epmms_award_config_pair_member as c,epmms_membermap as xm,
    epmms_layer as l,epmms_membermap as my
    where x.parent_relation_member_id=member_id
    and x.parent_relation_upper_id=s.status_id
    and xm.membermap_id=x.parent_relation_upper_id
    and xm.membermap_membertype_level=c.award_config_membertype
    and s.little_product_count>s.status_pair
    and my.membermap_id=member_id
    and l.layer_member_id=x.parent_relation_upper_id
    and l.layer_layer=my.membermap_layer-xm.membermap_layer
    and l.layer_pair>0;
    --更新碰数
    update epmms_memberstatus as s set status_pair=s.little_product_count
    from epmms_parent_relation as x,epmms_membermap as xm,
    epmms_layer as l,epmms_membermap as my
    where x.parent_relation_member_id=member_id
    and x.parent_relation_upper_id=s.status_id
    and s.little_product_count>s.status_pair
    and xm.membermap_id=x.parent_relation_upper_id
    and my.membermap_id=member_id
    and l.layer_member_id=x.parent_relation_upper_id
    and l.layer_layer=my.membermap_layer-xm.membermap_layer
    and l.layer_pair>0;
END;
$$;


--
-- Name: award_parent(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_parent(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money),award_sum_type
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id and p.membermap_id=my.membermap_parent_id;
END;
$$;


--
-- Name: award_prize(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_prize(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_prize(prize_info,prize_member_id,prize_id_id)
	select cfg.award_config_name,award_period_sum_memberinfo_id,cfg.award_config_id
	from epmms_award_total_sum as p,award.epmms_award_config_prize as cfg,epmms_award_period_sum as my
	where my.award_period_sum_period=award_period
    and my.award_period_sum_memberinfo_id=award_total_sum_memberinfo_id
    and award_total_sum_currency>=award_config_total
    and not exists(select 1 from epmms_prize where prize_id_id=cfg.award_config_id and prize_member_id=award_period_sum_memberinfo_id);
END;
$$;


--
-- Name: award_recommend(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_recommend(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money)*pv(),award_sum_type
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id 
    and p.membermap_id=my.membermap_recommend_id;
END;
$$;


--
-- Name: award_recommend2(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_recommend2(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money),award_sum_type
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id and p.membermap_id=my.membermap_recommend_id
    and p.membermap_recommend_number%2=1;
END;
$$;


--
-- Name: award_recommend_0920(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_recommend_0920(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money)*my.membermap_product_count,award_sum_type
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id and p.membermap_id=my.membermap_recommend_id;
END;
$$;


--
-- Name: award_recommend_3070(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_recommend_3070(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,award.get50(my.membermap_money,p.membermap_money,
    (
    select sum(membermap_money) from epmms_membermap where membermap_recommend_id=p.membermap_id and membermap_is_active=1
    )),award_sum_type
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id and p.membermap_id=my.membermap_recommend_id
    and p.membermap_is_verify=1;
END;
$$;


--
-- Name: award_recommend_b(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_recommend_b(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money),award_sum_type
	from epmms_membermap2 as my,epmms_membermap2 as p
	where my.membermap_id=member_id and p.membermap_id=my.membermap_recommend_id;
END;
$$;


--
-- Name: award_recommend_l2(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_recommend_l2(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money),award_sum_type
    from epmms_recommend_relation as pr,epmms_membermap as p,epmms_membermap as my
    where my.membermap_id=member_id
    and pr.recommend_relation_member_id=member_id
    and p.membermap_id=pr.recommend_relation_upper_id
    and my.membermap_recommend_layer-p.membermap_recommend_layer=2;
END;
$$;


--
-- Name: award_recommend_level(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_recommend_level(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,cfg.award_config_currency*pv(),award_sum_type
	from epmms_membermap as my,epmms_membermap as p,award.epmms_award_config_recommend as cfg
	where my.membermap_id=member_id and p.membermap_id=my.membermap_recommend_id
    and p.membermap_level=cfg.award_config_membertype
    and p.membermap_is_active=1;
END;
$$;


--
-- Name: award_recommend_matrix(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_recommend_matrix(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$

BEGIN

	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

	select award_period,p.membermap_id,award_type,cfg.award_config_award*iif(cfg.award_config_award>1,1,my.membermap_money)*pv(),award_sum_type

	from epmms_membermap as my,epmms_membermap as p,award.award_recommend_matrix as cfg

	where my.membermap_id=member_id and p.membermap_id=my.membermap_recommend_id

    and p.membermap_membertype_level=cfg.award_config_award_membertype

    and my.membermap_membertype_level=cfg.award_config_new_membertype

    and p.membermap_is_active=1;

END;

$$;


--
-- Name: award_recommend_matrix_agent(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_recommend_matrix_agent(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$

BEGIN

	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)

	select award_period,p.membermap_id,award_type,cfg.award_config_award*iif(cfg.award_config_award>1,1,my.membermap_money)*pv(),award_sum_type

	from epmms_membermap as my,epmms_membermap as p,award.award_recommend_matrix as cfg

	where my.membermap_id=member_id and p.membermap_id=my.membermap_recommend_id

    and p.membermap_membertype_level=cfg.award_config_award_membertype

    and my.membermap_membertype_level=cfg.award_config_new_membertype

    and my.membermap_membertype_level_old=1

    and my.membermap_membertype_level>1

    and p.membermap_is_active=1;

END;

$$;


--
-- Name: award_recommend_membertype(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_recommend_membertype(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,cfg.award_config_currency*my.membermap_money*pv(),award_sum_type
	from epmms_membermap as my,epmms_membermap as p,award.epmms_award_config_recommend as cfg
	where my.membermap_id=member_id and p.membermap_id=my.membermap_recommend_id
    and p.membermap_membertype_level=cfg.award_config_membertype
    and p.membermap_is_active=1;
END;
$$;


--
-- Name: award_recommend_membertype2(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_recommend_membertype2(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,cfg.award_config_currency,award_sum_type
	from epmms_membermap as my,epmms_membermap as p,award.award_config_recommend_type2 as cfg
	where my.membermap_id=member_id and p.membermap_id=my.membermap_recommend_id
    and my.membermap_membertype_level=cfg.award_config_membertype
    and p.membermap_is_active=1;
END;
$$;


--
-- Name: award_recommend_membertype3(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_recommend_membertype3(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,cfg.award_config_currency,award_sum_type
	from epmms_membermap as my,epmms_membermap as p,award.epmms_award_config_recommend3 as cfg
	where my.membermap_id=member_id and p.membermap_id=my.membermap_recommend_id
    and my.membermap_membertype_level=cfg.award_config_membertype
    and p.membermap_is_active=1;
END;
$$;


--
-- Name: award_recommend_membertype_141203(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_recommend_membertype_141203(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,cfg.award_config_currency*pv(),award_sum_type
	from epmms_membermap as my,epmms_membermap as p,award.epmms_award_config_recommend as cfg
	where my.membermap_id=member_id and p.membermap_id=my.membermap_recommend_id
    and p.membermap_membertype_level=cfg.award_config_membertype
    and my.membermap_membertype_level=4
    and p.membermap_is_active=1;
END;
$$;


--
-- Name: award_recommend_parent_period(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_recommend_parent_period(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,get_config_award(award_type,period.award_period_currency)/count(*) over (partition by my.membermap_id),award_sum_type
	from epmms_membermap as my,epmms_membermap as p,epmms_award_period as period
	where period.award_period_type_id=423 and period.award_period_period=award_period
    and my.membermap_id=period.award_period_memberinfo_id
    and p.membermap_recommend_id=my.membermap_id;
END;
$$;


--
-- Name: award_recommend_week(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_recommend_week(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money),award_sum_type
	from membermap_week as my,epmms_membermap as p
	where p.membermap_id=my.membermap_recommend_id;
END;
$$;


--
-- Name: award_recommend_zhengka(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_recommend_zhengka(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,cfg.award_config_currency*pv(),award_sum_type
	from epmms_membermap as my,epmms_membermap as p,award.award_config_zhengka as cfg
	where my.membermap_id=member_id and p.membermap_id=my.membermap_recommend_id
    and my.membermap_membertype_level=cfg.award_config_membertype_new
    and p.membermap_membertype_level=cfg.award_config_membertype
    and (select coalesce(sum(award_total_currency),0) from epmms_award_total where award_total_memberinfo_id=p.membermap_id and award_total_type_id=450)>=p.membermap_money;
END;
$$;


--
-- Name: award_rich(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_rich(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money),award_sum_type
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id 
  and my.membermap_path like p.membermap_path || '/2%'
  and get_suffix(my.membermap_path,p.membermap_path || '/2') not like '%2%';
END;
$$;


--
-- Name: award_rich_dot(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_rich_dot(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money),award_sum_type
    from epmms_membermap as my,epmms_membermap as p
    where my.membermap_id=member_id 
    and my.membermap_path like p.membermap_path || '/1%'
    and my.membermap_layer-p.membermap_layer<=10;
END;
$$;


--
-- Name: award_self_150919(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_self_150919(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,my.membermap_id,award_type,get_config_award(award_type,my.membermap_money)*pv(),award_sum_type
	from epmms_membermap as my
	where my.membermap_id=member_id ;
END;
$$;


--
-- Name: award_signing(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_signing(member_id integer, award_period integer, my_award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    out_member record;
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,s.signing_member_id,cfg.award_type,cfg.config_currency,award_sum_type
    from epmms_signing as s,award.award_config_signing as cfg
    where s.signing_is_award=0
    and current_date-s.signing_date>40
    and s.signing_is_verify=cfg.signing_refuse
    and s.signing_type=cfg.signing_type;
    /*
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,cfg.award_type,cfg.award_money,award_sum_type
	from epmms_membermap as p,epmms_membermap as my,award.award_config_manage as cfg,epmms_signing as s
	where my.membermap_id=s.signing_member_id
    and s.signing_is_verify=1
    and s.signing_type=1
    and current_date-s.signing_date>40
    and signing_is_award=0
    and my.membermap_recommend_path like  p.membermap_recommend_path || '/%'
    and my.membermap_recommend_layer-p.membermap_recommend_layer=cfg.award_layer
    and p.membermap_is_active=1;*/
    
    update epmms_signing set signing_is_award=1
    where current_date-signing_date>40 and signing_is_verify in (1,2) and signing_is_award=0;
END;
$$;


--
-- Name: award_static_fenhong(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_static_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period
    ,my.membermap_id
    ,award_type
    ,my.membermap_money*cfg.award_config_money/12
    ,award_sum_type
    from epmms_membermap as my,award.award_config_static_fenhong as cfg
    where cfg.award_config_membertype=my.membermap_membertype_level
    --and coalesce((select sum(s.award_total_currency) from epmms_award_total as s where award_total_memberinfo_id=my.membermap_id and award_total_currency>0),0)<cfg.award_config_limit
    ;
END;
$$;


--
-- Name: award_static_fenhong_425(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_static_fenhong_425(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period
    ,my.membermap_id
    ,award_type
    ,cfg.award_config_money*my.membermap_money
    ,award_sum_type
    from epmms_membermap as my,award.award_config_static_fenhong as cfg
    where cfg.award_config_membertype=my.membermap_membertype_level
    and current_date-my.membermap_verify_date::date % 15=0
    and current_date-my.membermap_verify_date::date>0
    and (select count(*) from epmms_award_period where award_period_memberinfo_id=my.membermap_id and award_period_type_id=award_type)<4
    and my.membermap_is_verify=1;
END;
$$;


--
-- Name: award_static_fenhong_617(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_static_fenhong_617(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period
    ,my.membermap_id
    ,award_type
    ,cfg.award_config_money
    ,award_sum_type
    from epmms_membermap as my,award.award_config_static_fenhong as cfg
    where cfg.award_config_membertype=my.membermap_membertype_level_old
    --and coalesce((select sum(s.award_total_currency) from epmms_award_total as s where award_total_memberinfo_id=my.membermap_id and award_total_currency>0),0)<cfg.award_config_limit
    ;
END;
$$;


--
-- Name: award_static_fenhong_624(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_static_fenhong_624(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period
    ,my.membermap_id
    ,award_type
    ,get_topped(cfg.award_config_money*my.membermap_money,cfg.award_config_limit*my.membermap_money,coalesce((select sum(s.award_total_currency) from epmms_award_total as s where award_total_memberinfo_id=my.membermap_id and award_total_type_id=award_type),0))
    ,award_sum_type
    from epmms_membermap as my,award.award_config_static_fenhong as cfg
    where cfg.award_config_membertype=my.membermap_level;
END;
$$;


--
-- Name: award_static_fenhong_day(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_static_fenhong_day(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period
    ,my.membermap_id
    ,award_type
    ,get_config_award(award_type,my.membermap_buyall)
    ,award_sum_type
    from epmms_membermap as my
    where  my.membermap_is_verify=1
    and my.membermap_is_active=1
    and my.membermap_is_empty=0
    --and coalesce((select sum(s.award_total_currency) from epmms_award_total as s where award_total_memberinfo_id=my.membermap_id and award_total_currency>0),0)<cfg.award_config_limit
    ;
END;
$$;


--
-- Name: award_static_fenhong_day2(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_static_fenhong_day2(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period
    ,my.membermap_id
    ,award_type
    ,get_config_award(award_type,my.membermap_buyall)
    ,award_sum_type
    from epmms_membermap as my
    where  my.membermap_is_verify=1
    and my.membermap_is_active=1
    and my.membermap_is_empty=0
    and coalesce((select sum(s.award_total_currency) from epmms_award_total as s where award_total_memberinfo_id=my.membermap_id and award_total_currency>0),0)<my.membermap_buyall
    ;
END;
$$;


--
-- Name: award_static_fenhong_recommend(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_static_fenhong_recommend(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period
    ,my.membermap_id
    ,award_type
    ,epmms_get_cap_money(cfg.award_config_limit,cfg.award_config_currency*my.membermap_money,coalesce((select sum(s.award_total_currency) from epmms_award_total as s where award_total_memberinfo_id=my.membermap_id and award_total_type_id=award_type),0))
    ,award_sum_type
    from epmms_membermap as my,award.award_config_static_fenghong_recommend as cfg
    where my.membermap_recommend_number<@cfg.award_config_recommend
    and coalesce((select sum(s.award_total_currency) from epmms_award_total as s where award_total_memberinfo_id=my.membermap_id and award_total_type_id=award_type),0)<cfg.award_config_limit;
END;
$$;


--
-- Name: award_team(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_team(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$

 DECLARE

   my_team INTEGER;

BEGIN

    select sum(award_period_currency) as total into my_team

	from epmms_award_period 

	where award_period_period=award_period

    and award_period_memberinfo_id=member_id

    and award_period_type_id=award_type

		and award_period_sum_type=award_sum_type;

		RETURN my_team;

END;

$$;


--
-- Name: award_tuiguang(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_tuiguang(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,r.membermap_id,award_type,400,award_sum_type
    from epmms_membermap as my,epmms_membermap as r
    where my.membermap_id=member_id
    and r.membermap_id=my.membermap_recommend_id
    and my.membermap_membertype_level=2;
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,r.membermap_id,award_type,1300,award_sum_type
    from epmms_membermap as my,epmms_membermap as r
    where my.membermap_id=member_id
    and my.membermap_membertype_level =1
    and r.membermap_id=my.membermap_recommend_id
    and r.membermap_membertype_level in (2,3);
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,r.membermap_id,award_type,3800,award_sum_type
    from epmms_membermap as my,epmms_membermap as r
    where my.membermap_id=member_id
    and r.membermap_id=my.membermap_recommend_id
    and my.membermap_membertype_level=1
    and r.membermap_membertype_level=1;
END;
$$;


--
-- Name: award_up_down_recommend(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_up_down_recommend(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type
    ,cfg.award_config_currency*period.award_period_currency
    ,award_sum_type
    from epmms_membermap as p,epmms_membermap as my,award.award_config_org_up_down as cfg,epmms_award_period as period
    where period.award_period_type_id=523
    and period.award_period_period=award_period
    and my.membermap_id=period.award_period_memberinfo_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and p.membermap_membertype_level=cfg.award_config_membertype
    and my.membermap_recommend_layer-p.membermap_recommend_layer<=cfg.award_config_layer;
END;
$$;


--
-- Name: award_up_down_recommend_150919(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_up_down_recommend_150919(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type
    ,cfg.award_config_currency*period.award_period_currency
    ,award_sum_type
    from epmms_membermap as p,epmms_membermap as my,award.award_config_org_up_down as cfg,epmms_award_period as period
    where period.award_period_type_id=281
    and period.award_period_period=award_period
    and my.membermap_id=period.award_period_memberinfo_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and p.membermap_membertype_level=cfg.award_config_membertype
    and my.membermap_recommend_layer-p.membermap_recommend_layer=cfg.award_config_layer;
END;
$$;


--
-- Name: award_up_down_recommend_160425(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_up_down_recommend_160425(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type
    ,cfg.award_config_currency*period.award_period_currency
    ,award_sum_type
    from epmms_membermap as p,epmms_membermap as my,award.award_config_up_down_425 as cfg,epmms_award_period as period
    where period.award_period_type_id=536
    and period.award_period_period=award_period
    and my.membermap_id=period.award_period_memberinfo_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and p.membermap_recommend_number<@cfg.award_config_recommend
    and my.membermap_recommend_layer-p.membermap_recommend_layer=cfg.award_config_layer;
END;
$$;


--
-- Name: award_xingyun_dianbu(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_xingyun_dianbu(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,cfg.award_config_money,award_sum_type
    from epmms_membermap as p,epmms_membermap as my,award.award_config_xingyu_futou as cfg
    where my.membermap_id=member_id
    and (my.membermap_verify_seq2-p.membermap_verify_seq2)%10=ANY(cfg.award_config_seqs)
    and my.membermap_verify_seq2-p.membermap_verify_seq2>0
    and award.get_recommend_jin_number(p.membermap_id)<@cfg.award_config_recommend_jin_number
    and p.membermap_is_active=1;
END;
$$;


--
-- Name: award_xingyunfenhong(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_xingyunfenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,cfg.award_config_currency*period.award_period_currency,award_sum_type
    from epmms_membermap as p,epmms_membermap as my,award.award_config_xingyun as cfg,
    epmms_award_period as period
    where period.award_period_period=award_period
    and period.award_period_type_id=383
    and my.membermap_id=period.award_period_memberinfo_id
    and p.membermap_verify_seq-my.membermap_verify_seq<=50
    and p.membermap_verify_seq-my.membermap_verify_seq>0
    and p.membermap_membertype_level=cfg.award_config_membertype
    and p.membermap_is_active=1;
END;
$$;


--
-- Name: award_zz_fenhong(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.award_zz_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,cfg.currency*my.membermap_money/count(*) over (),award_sum_type
    from epmms_membermap as p,epmms_membermap as my
    where my.membermap_id=member_id
    and p.membermap_membertype_level=4;
END;
$$;


--
-- Name: day_calc(); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.day_calc() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	perform epmms_verify_award_group(null,nextval('award_period'),2);
    perform epmms_verify_award_group_b(null,nextval('award_period'),4);
END;
$$;


--
-- Name: dynamic_fenhong(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.dynamic_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,up.membermap_id,award_type,per.award_currency*period.award_period_currency,award_sum_type
	from epmms_membermap as up,epmms_membermap as my,epmms_recommend_relation as rela,
    epmms_award_period as period,award.dynamic_fenhong as cfg,award.dynmmic_fenhong_percent as per
	where period.award_period_type_id=255 and period.award_period_period=award_period
    and period.award_period_memberinfo_id=rela.recommend_relation_member_id
    and rela.recommend_relation_upper_id=up.membermap_id
    and my.membermap_id=period.award_period_memberinfo_id
    and up.membermap_membertype_level=cfg.membertype
    and up.membermap_recommend_number<@cfg.billcount
    and my.membermap_recommend_layer-up.membermap_recommend_layer<=cfg.layers
    and my.membermap_recommend_layer-up.membermap_recommend_layer<@per.layers;
END;
$$;


--
-- Name: get50(numeric, numeric, numeric); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.get50(my_money numeric, r_money numeric, all_r_money numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
BEGIN
  if all_r_money-r_money>r_money*2 then
     return 0;
  end if;
  if all_r_money>r_money*2 then
     return (my_money-(all_r_money-r_money*2))*0.5;
  end if;
  return my_money*0.5;
END;
$$;


--
-- Name: get_cap_number(integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.get_cap_number(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
    cap_num integer;
BEGIN
    select iif(membermap_recommend_number>=2,2,1) into cap_num from epmms_membermap where membermap_id=member_id;
    return cap_num;
END;
$$;


--
-- Name: get_l_under_product_count_150210(integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.get_l_under_product_count_150210(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
  left_bill_count integer default 0;
  right_bill_count integer default 0;
BEGIN
  select sum(award.get_product_count_layer(member_id,c.membermap_id,c.membermap_layer-my.membermap_layer,c.membermap_product_count)) into left_bill_count from epmms_membermap as my,epmms_membermap as c where my.membermap_id=member_id
  and c.membermap_path like my.membermap_path || '/1%';
  select sum(award.get_product_count_layer(member_id,c.membermap_id,c.membermap_layer-my.membermap_layer,c.membermap_product_count)) into right_bill_count from epmms_membermap as my,epmms_membermap as c where my.membermap_id=member_id
  and c.membermap_path like my.membermap_path || '/2%';
  left_bill_count:=coalesce(left_bill_count,0);
  right_bill_count:=coalesce(right_bill_count,0);
  if left_bill_count<right_bill_count then
     return left_bill_count;
  else
     return right_bill_count;
  end if;
END;
$$;


--
-- Name: get_layer_money(integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.get_layer_money(member_id integer, member_layer integer) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
    left_money numeric(16,2) default 0;
    right_money numeric(16,2) default 0;
BEGIN
    select c.membermap_money into left_money
    from epmms_membermap as my,epmms_membermap as c
    where my.membermap_id=member_id and c.membermap_path like my.membermap_path || '/1%' 
    and c.membermap_layer-my.membermap_layer=member_layer
    order by c.membermap_verify_seq asc limit 1;
    select c.membermap_money into right_money
    from epmms_membermap as my,epmms_membermap as c 
    where my.membermap_id=member_id and c.membermap_path like my.membermap_path || '/2%' 
    and c.membermap_layer-my.membermap_layer=member_layer
    order by c.membermap_verify_seq asc limit 1;
    left_money:=coalesce(left_money,0);
    right_money:=coalesce(right_money,0);
    if left_money<right_money then
       return left_money;
    else
       return right_money;
    end if;
END;
$$;


--
-- Name: get_level_count(integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.get_level_count(member_id integer, member_order integer, member_level integer) RETURNS integer
    LANGUAGE plpgsql STABLE
    AS $$

 DECLARE

	cnt INTEGER;

BEGIN

	SELECT COUNT

		( * ) INTO cnt 

	FROM

		epmms_membermap AS my,

		epmms_membermap AS C 

	WHERE

		my.membermap_parent_id = member_id 

		AND my.membermap_order = member_order 

		AND C.membermap_path LIKE my.membermap_path || '%' 

		AND C.membermap_level >= member_level;

	RETURN cnt;

	

END;

$$;


SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: epmms_membermap; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_membermap (
    membermap_id integer NOT NULL,
    membermap_seq integer,
    membermap_parent_id integer,
    membermap_recommend_id integer,
    membermap_membertype_level integer,
    membermap_layer integer,
    membermap_order integer,
    membermap_path character varying(10000),
    membermap_recommend_path character varying(10000),
    membermap_recommend_number integer DEFAULT 0,
    membermap_recommend_under_number integer DEFAULT 0 NOT NULL,
    membermap_child_number integer DEFAULT 0,
    membermap_sub_number integer DEFAULT 0 NOT NULL,
    membermap_sub_product_count integer DEFAULT 0,
    membermap_recommend_under_product_count integer DEFAULT 0 NOT NULL,
    membermap_product_count integer DEFAULT 1 NOT NULL,
    membermap_agent_id bigint,
    membermap_is_verify smallint DEFAULT 0 NOT NULL,
    membermap_verify_seq integer,
    membermap_is_agent smallint DEFAULT 0 NOT NULL,
    membermap_verify_date timestamp(0) without time zone,
    membermap_verify_member_id bigint,
    membermap_add_date timestamp(0) without time zone,
    membermap_is_empty smallint DEFAULT 0 NOT NULL,
    membermap_money numeric(16,2),
    membermap_bond_id integer,
    membermap_level integer,
    membermap_recommend_layer integer,
    membermap_period integer,
    membermap_membertype_level_old integer,
    membermap_is_active smallint DEFAULT 1 NOT NULL,
    membermap_is_delete smallint DEFAULT 0 NOT NULL,
    membermap_under_product_count integer DEFAULT 0 NOT NULL,
    membermap_under_number integer DEFAULT 0 NOT NULL,
    membermap_agent_number integer DEFAULT 0 NOT NULL,
    membermap_agent_product_count integer DEFAULT 0 NOT NULL,
    membermap_recommend_product_count integer DEFAULT 0 NOT NULL,
    membermap_agent_type integer,
    membermap_layer_order numeric(50,0),
    membermap_reg_member_id integer,
    membermap_percent1 numeric(4,0) DEFAULT 50,
    membermap_percent2 numeric(4,0) DEFAULT 50,
    membermap_no character varying(20),
    membermap_buyall numeric(16,2) DEFAULT 0 NOT NULL,
    membermap_buy_date timestamp(0) without time zone,
    membermap_is_goods smallint,
    membermap_day_count integer DEFAULT 0,
    membermap_day_level integer DEFAULT 0,
    membermap_futou_date date,
    membermap_verify_seq2 integer,
    membermap_jifen numeric(16,2)
);


--
-- Name: COLUMN epmms_membermap.membermap_seq; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_seq IS '会员注册的序列';


--
-- Name: COLUMN epmms_membermap.membermap_parent_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_parent_id IS '父节点人id';


--
-- Name: COLUMN epmms_membermap.membermap_recommend_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_recommend_id IS '推荐会员id';


--
-- Name: COLUMN epmms_membermap.membermap_membertype_level; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_membertype_level IS '会员类型';


--
-- Name: COLUMN epmms_membermap.membermap_layer; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_layer IS '网络图上的层数';


--
-- Name: COLUMN epmms_membermap.membermap_order; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_order IS '网络图上的位置次序';


--
-- Name: COLUMN epmms_membermap.membermap_path; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_path IS '网络图路径';


--
-- Name: COLUMN epmms_membermap.membermap_recommend_path; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_recommend_path IS '推荐关系路径';


--
-- Name: COLUMN epmms_membermap.membermap_recommend_number; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_recommend_number IS '直推人数';


--
-- Name: COLUMN epmms_membermap.membermap_recommend_under_number; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_recommend_under_number IS '推荐树下的点数，包括直接推荐的';


--
-- Name: COLUMN epmms_membermap.membermap_child_number; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_child_number IS '子节点个数';


--
-- Name: COLUMN epmms_membermap.membermap_sub_number; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_sub_number IS '节点树下的人数';


--
-- Name: COLUMN epmms_membermap.membermap_sub_product_count; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_sub_product_count IS '本分支下包括本人购买单数总计';


--
-- Name: COLUMN epmms_membermap.membermap_recommend_under_product_count; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_recommend_under_product_count IS '推荐树下单数总计，包括本人购买的';


--
-- Name: COLUMN epmms_membermap.membermap_product_count; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_product_count IS '购买单数';


--
-- Name: COLUMN epmms_membermap.membermap_agent_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_agent_id IS '代理中心id';


--
-- Name: COLUMN epmms_membermap.membermap_is_verify; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_is_verify IS '是否已审核';


--
-- Name: COLUMN epmms_membermap.membermap_verify_seq; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_verify_seq IS '审核顺序';


--
-- Name: COLUMN epmms_membermap.membermap_is_agent; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_is_agent IS '是否为代理中心';


--
-- Name: COLUMN epmms_membermap.membermap_verify_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_verify_date IS '审核时间';


--
-- Name: COLUMN epmms_membermap.membermap_verify_member_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_verify_member_id IS '审核会员id，null表示公司审核';


--
-- Name: COLUMN epmms_membermap.membermap_is_empty; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_is_empty IS '是否空单';


--
-- Name: COLUMN epmms_membermap.membermap_money; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_money IS '加盟金额';


--
-- Name: COLUMN epmms_membermap.membermap_bond_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_bond_id IS '绑定的会员';


--
-- Name: COLUMN epmms_membermap.membermap_level; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_level IS '会员级别';


--
-- Name: COLUMN epmms_membermap.membermap_recommend_layer; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_recommend_layer IS '推荐代数';


--
-- Name: COLUMN epmms_membermap.membermap_period; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_period IS '结算期次';


--
-- Name: COLUMN epmms_membermap.membermap_membertype_level_old; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_membertype_level_old IS '注册时的类型';


--
-- Name: COLUMN epmms_membermap.membermap_is_active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_is_active IS '会员活动状态';


--
-- Name: COLUMN epmms_membermap.membermap_is_delete; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_is_delete IS '网络图是否已删除';


--
-- Name: COLUMN epmms_membermap.membermap_under_product_count; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_under_product_count IS '接点人下单数';


--
-- Name: COLUMN epmms_membermap.membermap_under_number; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_under_number IS '接点下人数';


--
-- Name: COLUMN epmms_membermap.membermap_agent_number; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_agent_number IS '报单人数';


--
-- Name: COLUMN epmms_membermap.membermap_agent_product_count; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_agent_product_count IS '报单单数';


--
-- Name: COLUMN epmms_membermap.membermap_recommend_product_count; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_recommend_product_count IS '推荐单数';


--
-- Name: COLUMN epmms_membermap.membermap_agent_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_agent_type IS '代理中心类型';


--
-- Name: COLUMN epmms_membermap.membermap_reg_member_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_reg_member_id IS '注册者';


--
-- Name: COLUMN epmms_membermap.membermap_no; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_no IS '网络图编号';


--
-- Name: COLUMN epmms_membermap.membermap_buy_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_buy_date IS '购物时间';


--
-- Name: COLUMN epmms_membermap.membermap_is_goods; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_is_goods IS '提货方式,0自己提货,1报单中心提货';


--
-- Name: COLUMN epmms_membermap.membermap_day_count; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_day_count IS '日薪天数';


--
-- Name: COLUMN epmms_membermap.membermap_day_level; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_day_level IS '日薪级别';


--
-- Name: COLUMN epmms_membermap.membermap_futou_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_futou_date IS '最后复投日期';


--
-- Name: COLUMN epmms_membermap.membermap_verify_seq2; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap.membermap_verify_seq2 IS '金卡审核顺序';


--
-- Name: get_level_leaf(); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.get_level_leaf() RETURNS SETOF public.epmms_membermap
    LANGUAGE plpgsql
    AS $$
BEGIN
  return query
  select * from epmms_membermap as leaf
  where leaf.membermap_level=5 and not exists(select 1 from epmms_membermap as child
        where child.membermap_level=5 and child.membermap_recommend_path like leaf.membermap_recommend_path || '/%');
END;
$$;


--
-- Name: get_little_count(integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.get_little_count(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
    little_count integer;
BEGIN
     select least(left_count,right_count) into little_count from epmms_memberstatus where status_id=member_id;
     return coalesce(little_count,0);
END;
$$;


--
-- Name: get_little_loc(integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.get_little_loc(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
    pid integer;
    member_status record;
    porder integer;
    left_product_count integer;
    right_product_count integer;
    little_product_count integer;
BEGIN
    left_product_count:=get_order_under_product_count3(member_id,1);
    right_product_count:=get_order_under_product_count3(member_id,2);
    little_product_count:=least(left_product_count,right_product_count);
  if little_product_count=0 then
     pid=member_id;
     if left_product_count=0 then
        porder:=1;
     else
        porder:=2;
     end if;
   ELSE
     if left_product_count<=right_product_count then
        select membermap_id into pid from epmms_membermap where membermap_parent_id=member_id and membermap_order=1;
     else
        select membermap_id into pid from epmms_membermap where membermap_parent_id=member_id and membermap_order=2;
     end if;
     porder:=1;
   end if;
   return pid;
END;
$$;


--
-- Name: get_little_product_count(integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.get_little_product_count(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
    little_bill integer;
BEGIN
     select little_product_count into little_bill from epmms_memberstatus where status_id=member_id;
     return coalesce(little_bill,0)*get_bill_money();
END;
$$;


--
-- Name: get_little_product_count_170621(integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.get_little_product_count_170621(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
    little_bill integer;
BEGIN
     select little_product_count into little_bill from epmms_memberstatus where status_id=member_id;
     return coalesce(little_bill,0)*get_bill_money();
END;
$$;


--
-- Name: get_money_number(integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.get_money_number(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
    cap_num integer;
BEGIN
    select iif(membermap_recommend_number>=2,2,1) into cap_num from epmms_membermap where membermap_id=member_id;
    return cap_num;
END;
$$;


--
-- Name: get_month_perf(character varying, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.get_month_perf(city character varying, atype integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$

DECLARE

	agent_root integer;

    mperf integer;

BEGIN

	if atype=1 then

    	select membermap_id into agent_root from epmms_agent,epmms_membermap

        where agent_type=1

        and agent_province=city

        and agent_memberinfo_id=membermap_id

        order by membermap_recommend_layer desc

        limit 1;

        if agent_root is not null then

			select count(1) into mperf from epmms_membermap as my,epmms_membermap as child

            where my.membermap_id=agent_root

            and child.membermap_recommend_path like my.membermap_recommend_path || '/%'

            and date_trunc('month',child.membermap_buy_date)=date_trunc('month',CURRENT_DATE-CURRENT_DATE-interval '1 month');

            return COALESCE(mperf,0);

        end if;

    end if;

	if atype=2 then

    	select membermap_id into agent_root from epmms_agent,epmms_membermap

        where agent_type=2

        and agent_area=city

        and agent_memberinfo_id=membermap_id

        order by membermap_recommend_layer desc

        limit 1;

        if agent_root is not null then

			select count(1) into mperf from epmms_membermap as my,epmms_membermap as child

            where my.membermap_id=agent_root

            and child.membermap_recommend_path like my.membermap_recommend_path || '/%'

            and date_trunc('month',child.membermap_buy_date)=date_trunc('month',CURRENT_DATE-CURRENT_DATE-interval '1 month');

            return COALESCE(mperf,0);

        end if;

    end if;

	if atype=3 then

    	select membermap_id into agent_root from epmms_agent,epmms_membermap

        where agent_type=3

        and agent_county=city

        and agent_memberinfo_id=membermap_id

        order by membermap_recommend_layer desc

        limit 1;

        if agent_root is not null then

			select count(1) into mperf from epmms_membermap as my,epmms_membermap as child

            where my.membermap_id=agent_root

            and child.membermap_recommend_path like my.membermap_recommend_path || '/%'

            and date_trunc('month',child.membermap_buy_date)=date_trunc('month',CURRENT_DATE-CURRENT_DATE-interval '1 month');

            return COALESCE(mperf,0);

        end if;

    end if;

END;

$$;


--
-- Name: get_product_count_layer(integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.get_product_count_layer(member_id integer, my_id integer, member_layer integer, product_count integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
BEGIN
  if (select count(*) from epmms_award_period where award_period_type_id=251 and award_period_memberinfo_id=member_id)<member_layer and member_layer<=2 then
     return 0;
  end if;
  return product_count;
END;
$$;


--
-- Name: get_recommend_jin_number(integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.get_recommend_jin_number(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
BEGIN
  return (select count(*) from epmms_membermap where membermap_recommend_id=member_id and membermap_membertype_level=2);
END;
$$;


--
-- Name: global_month_perf(); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.global_month_perf() RETURNS integer
    LANGUAGE plpgsql
    AS $$

DECLARE

	mperf integer;

BEGIN

    select count(1) into mperf from epmms_membermap as my

    where date_trunc('month',my.membermap_buy_date)=date_trunc('month',CURRENT_DATE-CURRENT_DATE-interval '1 month')

    and membermap_membertype_level>1;

    return mperf;

END;

$$;


--
-- Name: group_award(integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.group_award(member_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    group_out record;
    my_award numeric(16,2);
    total_award numeric(16,2);
    p_period bigint;
BEGIN
    p_period:=nextval('award_period');
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
    values (p_period,member_id,228,get_config_award(228),1);
    perform epmms_award_sum(NULL,p_period);
    select sum(membermap_money) into total_award from epmms_membermap where membermap_membertype_level=4;
    total_award:=COALESCE(total_award,0);
    select award_total_currency into my_award from epmms_award_total where award_total_memberinfo_id=member_id and award_total_type_id=228;

    if my_award/total_award>=0.4 then
       perform award.groupmap_del(member_id);
    end if;
END;
$$;


--
-- Name: group_prize(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.group_prize(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    pid integer:=NULL;
BEGIN
    select p.prize_id into pid from epmms_prize as p,epmms_memberinfo as a,epmms_memberinfo as my,epmms_membermap as amap
    where my.memberinfo_id=member_id and my.memberinfo_email=a.memberinfo_email
    and amap.membermap_is_active=0 and p.prize_member_id=a.memberinfo_id;
    if pid is not null then
       update epmms_prize set prize_member_id=member_id where prize_id=pid;
    end if;
END;
$$;


--
-- Name: groupmap_del(integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.groupmap_del(member_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    p_group_id integer;
BEGIN
    p_group_id:=(select groupmap_group_id from epmms_groupmap where groupmap_member_id=member_id);
    delete from epmms_groupmap where groupmap_member_id=member_id;
    update epmms_group set group_count=group_count-1 where group_id=p_group_id;
END;
$$;


--
-- Name: groupmap_upgrade(integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.groupmap_upgrade(p_group_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
    new_group_id integer;
    new_group_count integer;
    out_member integer;
BEGIN
    new_group_id:=award.next_group(p_group_id);
    if new_group_id is null then
       raise EXCEPTION 'new group is null';
    end if;
    new_group_count:=(select group_count from epmms_group where group_id=new_group_id);
    --raise notice 'new_group_id:%',new_group_id;
    select groupmap_member_id into out_member from epmms_groupmap where groupmap_order=1 and groupmap_group_id=p_group_id;
    if out_member is null then
       raise EXCEPTION 'out_member is null';
    end if;
    update epmms_groupmap set groupmap_group_id=new_group_id,groupmap_group_date=now(),groupmap_order=new_group_count+1 where groupmap_member_id=out_member;
    update epmms_groupmap set groupmap_order=groupmap_order-1 where groupmap_group_id=p_group_id;
    update epmms_group set group_count=group_count+1 where group_id=new_group_id;
    update epmms_group set group_count=group_count-1 where group_id=p_group_id;
    perform award.group_award(out_member);
    if (select group_count from epmms_group where group_id=new_group_id)>=17 then
       perform award.groupmap_upgrade(new_group_id);
    end if;
    return new_group_id;
END;
$$;


--
-- Name: insert_status(); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.insert_status() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  update epmms_memberstatus set status_pair=0,status_pair2=0,left_product_count=0,right_product_count=0,little_product_count=0;
  insert into epmms_memberstatus(status_id)
  select membermap_id from epmms_membermap where membermap_id!=1 and membermap_is_verify=1;
END;
$$;


--
-- Name: intob(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.intob(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    out_member record;
BEGIN
    for out_member in select award_total_memberinfo_id from epmms_award_total where award_total_type_id=386 and abs(award_total_currency)>=700 and not exists(select * from epmms_membermap2 where membermap_bond_id=award_total_memberinfo_id)
    loop
        perform award.intobmap(out_member.award_total_memberinfo_id);
    end loop;
END;
$$;


--
-- Name: intobmap(integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.intobmap(member_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    member_map record;
    max_layer integer;
    pid integer;
    porder integer;
BEGIN
    select * into member_map from epmms_membermap,epmms_memberinfo where membermap_id=member_id and memberinfo_id=member_id;
    if (select count(*) from epmms_membermap2)=0 then
       insert into epmms_membermap2(membermap_name,membermap_parent_id,membermap_layer,membermap_order,membermap_path,membermap_bond_id,membermap_bond_info,membermap_bill_count,membermap_money,membermap_membertype)
       values (member_map.memberinfo_account,null,1,1,'/1',member_map.membermap_id,member_map.membermap_id,member_map.membermap_product_count,member_map.membermap_money,member_map.membermap_membertype_level);
    else
       select max(membermap_layer) into max_layer from epmms_membermap2;
       select membermap_id into pid from epmms_membermap2 where membermap_layer=max_layer-1 and membermap_child_number=0 order by membermap_path asc;
       if pid is null then
          select membermap_id into pid from epmms_membermap2 where membermap_layer=max_layer-1 and membermap_child_number=1 order by membermap_path asc;
          if pid is null then
             select membermap_id into pid from epmms_membermap2 where membermap_layer=max_layer order by membermap_path asc;
             porder:=1;
          else
             porder:=2;
          end if;
        else
          porder:=1;
        end if;
        insert into epmms_membermap2(membermap_name,membermap_parent_id,membermap_layer,membermap_order,membermap_path,membermap_bond_id,membermap_bond_info,membermap_bill_count,membermap_money,membermap_membertype)
        select member_map.memberinfo_account,pid,membermap_layer+1,porder,membermap_path || '/' || porder,member_map.membermap_id,member_map.membermap_id,member_map.membermap_product_count,member_map.membermap_money,member_map.membermap_membertype_level
        from epmms_membermap2 where membermap_id=pid;
        update epmms_membermap2 set membermap_child_number=membermap_child_number+1 where membermap_id=pid;
        update epmms_membermap2 set membermap_name=right('000000' || membermap_id,6) where membermap_id=currval('epmms_membermap2_membermap_id_seq');
        perform award.award_huzhu(currval('epmms_membermap2_membermap_id_seq')::integer,nextval('award_period')::integer,388,1,1);
    end if;
END;
$$;


--
-- Name: is_layer_pair(integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.is_layer_pair(member_id integer, member_layer integer) RETURNS smallint
    LANGUAGE plpgsql
    AS $$
DECLARE
    left_number integer;
    right_number integer;
BEGIN
    select count(*) into left_number from epmms_membermap as my,epmms_membermap as c where my.membermap_id=member_id and c.membermap_path like my.membermap_path || '/1%' and c.membermap_layer-my.membermap_layer=member_layer;
    select count(*) into right_number from epmms_membermap as my,epmms_membermap as c where my.membermap_id=member_id and c.membermap_path like my.membermap_path || '/2%' and c.membermap_layer-my.membermap_layer=member_layer;
    if left_number>=1 and right_number>=1 then
       return 1;
    else
       return 0;
    end if;
END;
$$;


--
-- Name: is_upgrade_con(integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.is_upgrade_con(member_id integer, member_level integer, start_level integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
DECLARE
    i integer;
    child_level integer;
    cfg_con record;
    cursor_child cursor for select c.membermap_level from epmms_membermap as c
    where c.membermap_recommend_id=member_id and c.membermap_level>=start_level
    order by c.membermap_level asc;
BEGIN
    open cursor_child;
    for cfg_con in select * from award.upgrade_child_condition where upgrade_level=member_level order by child_level asc LOOP
        for i in 1..cfg_con.child_number loop
            fetch cursor_child into child_level;
            if not found then
               close cursor_child;
               return false;
            end if;
            if child_level<cfg_con.child_level then
               close cursor_child;
               return false;
            end if;
        end loop;
    end loop;
    close cursor_child;
    return true;
END;
$$;


--
-- Name: new_group(); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.new_group() RETURNS integer
    LANGUAGE plpgsql
    AS $$
BEGIN
  insert into epmms_group(group_count) values (0);
  return currval('epmms_group_group_id_seq'::regclass);
END;
$$;


--
-- Name: next_group(integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.next_group(current_group_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
BEGIN
    if (select count(*) from epmms_group as my,epmms_group as next where my.group_id=current_group_id and next.group_seq>my.group_seq )>=1 then
       return (select next.group_id from epmms_group as my,epmms_group as next where my.group_id=current_group_id and next.group_seq=my.group_seq+1);
    else
       return award.new_group();
    end if;
END;
$$;


--
-- Name: static_fenhong(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.static_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,my.membermap_id,award_type,cfg.award_currency,award_sum_type
	from epmms_membermap as my,award.static_fenhong as cfg
	where my.membermap_membertype_level_old=cfg.membertype;
END;
$$;


--
-- Name: team(integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.team(member_id integer) RETURNS boolean
    LANGUAGE plpgsql
    AS $$

BEGIN

    select p.*

	from epmms_membermap as p,epmms_membermap as my

	where my.membermap_id=1

    and p.membermap_recommend_path like my.membermap_recommend_path || '/%'

    and p.membermap_recommend_id=member_id;

END;

$$;


--
-- Name: upgrade_level_0920(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upgrade_level_0920(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    level_config record;
BEGIN
    for level_config in select * from award.award_config_leader_fenhong order by level asc loop
        update epmms_membermap as m set membermap_level=level_config.level
        where (select count(*) from epmms_membermap as c where c.membermap_path like m.membermap_path || '/%')>=level_config.member_number
        and COALESCE(m.membermap_level,0)<level_config.level;
    end loop;
    for level_config in select * from award.award_config_global_fenhong order by upgrade_level asc loop
        update epmms_membermap as m set membermap_level=level_config.upgrade_level
        where (select count(*) from epmms_membermap as c where c.membermap_path like m.membermap_path || '/%' and c.membermap_level=level_config.member_level)>=level_config.member_number
        and COALESCE(m.membermap_level,0)<level_config.upgrade_level;
    end loop;
END;
$$;


--
-- Name: upgrade_level_1120(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upgrade_level_1120(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    level_config record;
BEGIN
    --升1级
    update epmms_membermap as my set membermap_level=1 where
    (select count(*) from epmms_membermap where membermap_recommend_number>=2 and membermap_recommend_id=my.membermap_id)>=2
     and my.membermap_level is null;
    --升2级
    update epmms_membermap as my set membermap_level=2 where
    my.membermap_recommend_number>=3 and my.membermap_recommend_under_number>=30
    and award.is_upgrade_con(my.membermap_id,2,1) and my.membermap_level<2;
    
    update epmms_membermap as my set membermap_level=3 where
    my.membermap_recommend_number>=5
    and award.is_upgrade_con(my.membermap_id,3,1) and my.membermap_level<3;
    
    update epmms_membermap as my set membermap_level=4 where
    my.membermap_recommend_number>=7
    and award.is_upgrade_con(my.membermap_id,4,1) and my.membermap_level<4;
    
    update epmms_membermap as my set membermap_level=5 where
    my.membermap_recommend_number>=10
    and award.is_upgrade_con(my.membermap_id,5,1) and my.membermap_level<5;    
END;
$$;


--
-- Name: upgrade_level_160123(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upgrade_level_160123(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    --update epmms_membermap set membermap_level=1 where membermap_id=member_id ;
    update epmms_membermap as r set membermap_level=2
    from epmms_membermap as my,epmms_membermap as p
    where my.membermap_id=member_id
    and my.membermap_recommend_id=p.membermap_id
    and r.membermap_id=p.membermap_recommend_id
    and (select count(*) from epmms_membermap where membermap_recommend_id=p.membermap_recommend_id and membermap_recommend_number>=1)>=2
    and p.membermap_level=1;
    raise notice 'ok';
END;
$$;


--
-- Name: upgrade_level_160228(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upgrade_level_160228(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    update epmms_membermap as p set membermap_level=cfg.upgrade_level
    from epmms_membermap as my,epmms_memberstatus as s,award.award_config_upgrade as cfg
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and s.status_id=p.membermap_id
    and s.little_product_count*get_bill_money()>=cfg.little_currency
    and (select count(*) from epmms_membermap where membermap_level=cfg.down_level and membermap_path like p.membermap_path || '/%')>=cfg.down_number
    and cfg.upgrade_level=p.membermap_level+1;
END;
$$;


--
-- Name: upgrade_level_160430(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upgrade_level_160430(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    update epmms_membermap as p set membermap_level=cfg.upgrade_level
    from epmms_membermap as my,award.award_config_upgrade as cfg
    where my.membermap_id=member_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and p.membermap_under_product_count+p.membermap_product_count>=cfg.little_currency
    and cfg.upgrade_level=p.membermap_level+1;
END;
$$;


--
-- Name: upgrade_level_160612(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upgrade_level_160612(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    update epmms_membermap as p set membermap_level=2
    from epmms_membermap as my,award.award_config_upgrade as cfg
    where my.membermap_id=member_id
    and my.membermap_recommend_id=p.membermap_id
    and (select count(*) from epmms_membermap where membermap_membertype_level=4 and membermap_recommend_id=p.membermap_id)>=5
    and p.membermap_level<2;
    update epmms_membermap as p set membermap_level=3
    from epmms_membermap as my,award.award_config_upgrade as cfg
    where my.membermap_id=member_id
    and my.membermap_recommend_id=p.membermap_id
    and (select count(*) from epmms_membermap where membermap_membertype_level=4 and membermap_recommend_id=p.membermap_id)>=10
    and p.membermap_level<3;
    
    update epmms_membermap as p set membermap_level=4
    from epmms_membermap as my,award.award_config_upgrade as cfg
    where my.membermap_id=member_id
    and my.membermap_recommend_id=p.membermap_id
    and (select count(*) from epmms_membermap where membermap_membertype_level=4 and membermap_recommend_id=p.membermap_id)>=15
    and p.membermap_level<4;
    
    update epmms_membermap as p set membermap_level=5
    from epmms_membermap as my,award.award_config_upgrade as cfg
    where my.membermap_id=member_id
    and my.membermap_recommend_id=p.membermap_id
    and (select count(*) from epmms_membermap where membermap_membertype_level=4 and membermap_recommend_id=p.membermap_id)>=20
    and p.membermap_level<5;
END;
$$;


--
-- Name: upgrade_level_160624(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upgrade_level_160624(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    update epmms_membermap as p set membermap_level=2
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_recommend_id=p.membermap_id
    and (select count(*) from epmms_membermap where membermap_membertype_level=p.membermap_membertype_level and membermap_recommend_id=p.membermap_id)>=2
    and p.membermap_level<2;
    update epmms_membermap as p set membermap_level=3
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_recommend_id=p.membermap_id
    and (select count(*) from epmms_membermap where membermap_membertype_level=p.membermap_membertype_level and membermap_recommend_id=p.membermap_id)>=3
    and p.membermap_level<3;
END;
$$;


--
-- Name: upgrade_level_160708(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upgrade_level_160708(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    update epmms_membermap as p set membermap_level=2
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_recommend_id=p.membermap_id
    and p.membermap_recommend_number>=5
    and p.membermap_level<2;
    
    update epmms_membermap as p set membermap_level=3
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_recommend_id=p.membermap_id
    and p.membermap_recommend_number>=10
    and p.membermap_level<3;
    
    update epmms_membermap as p set membermap_level=4
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_recommend_id=p.membermap_id
    and p.membermap_recommend_number>=20
    and p.membermap_level<4;
    
    update epmms_membermap as p set membermap_level=5
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_recommend_id=p.membermap_id
    and p.membermap_recommend_number>=50
    and p.membermap_level<5;
    
    update epmms_membermap as p set membermap_level=6
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_recommend_id=p.membermap_id
    and p.membermap_recommend_number>=100
    and p.membermap_level<6;
    
    update epmms_membermap as p set membermap_level=7
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_recommend_id=p.membermap_id
    and p.membermap_recommend_number>=200
    and p.membermap_level<7;
END;
$$;


--
-- Name: upgrade_level_170102(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upgrade_level_170102(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    update epmms_membermap as p set membermap_level=1
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and award.get_little_product_count(p.membermap_id)>=100000
    and coalesce(p.membermap_level,0)<1;
    
    update epmms_membermap as p set membermap_level=2
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and award.get_little_product_count(p.membermap_id)>=500000
    and coalesce(p.membermap_level,0)<2;
    
    update epmms_membermap as p set membermap_level=3
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and award.get_little_product_count(p.membermap_id)>=1000000
    and coalesce(p.membermap_level,0)<3;
    
    update epmms_membermap as p set membermap_level=4
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and award.get_little_product_count(p.membermap_id)>=5000000
    and coalesce(p.membermap_level,0)<4;
    
    update epmms_membermap as p set membermap_level=5
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and award.get_little_product_count(p.membermap_id)>=10000000
    and coalesce(p.membermap_level,0)<5;
    
    update epmms_membermap as p set membermap_level=6
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and award.get_little_product_count(p.membermap_id)>=20000000
    and coalesce(p.membermap_level,0)<6;
    
    update epmms_membermap as p set membermap_level=7
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and award.get_little_product_count(p.membermap_id)>=20000000
    and coalesce(p.membermap_level,0)<7;
    
    update epmms_membermap as p set membermap_level=8
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and award.get_little_product_count(p.membermap_id)>=100000000
    and coalesce(p.membermap_level,0)<8;
    update epmms_membermap as p set membermap_level=9
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and award.get_little_product_count(p.membermap_id)>=200000000
    and coalesce(p.membermap_level,0)<9;
    
    update epmms_membermap as p set membermap_level=10
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and award.get_little_product_count(p.membermap_id)>=500000000
    and coalesce(p.membermap_level,0)<10;    
END;
$$;


--
-- Name: upgrade_level_170213(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upgrade_level_170213(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    update epmms_membermap as p set membermap_level=1
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and p.membermap_recommend_number>=15
    and p.membermap_recommend_under_number>=50
    and p.membermap_membertype_level=2
    and coalesce(p.membermap_level,0)<1;

    update epmms_membermap as p set membermap_level=1
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and p.membermap_recommend_number>=30
    and p.membermap_recommend_under_number>=80
    and p.membermap_membertype_level=1
    and coalesce(p.membermap_level,0)<1;

END;
$$;


--
-- Name: upgrade_level_170224(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upgrade_level_170224(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    update epmms_membermap as p set membermap_level=1
    where (select sum(award_total_currency) from epmms_award_total where award_total_memberinfo_id=p.membermap_id and award_total_currency>0)>=600000
    and coalesce(p.membermap_level,0)<1;
END;
$$;


--
-- Name: upgrade_level_180402(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upgrade_level_180402(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    update epmms_membermap as p set membermap_level=1
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and p.membermap_under_product_count*get_bill_money()>=18000
    and coalesce(p.membermap_level,0)<1;
    
    update epmms_membermap as p set membermap_level=2
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and p.membermap_under_product_count*get_bill_money()>=90000
    and coalesce(p.membermap_level,0)<2;
    
    
    update epmms_membermap as p set membermap_level=3
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and p.membermap_under_product_count*get_bill_money()>=210000
    and coalesce(p.membermap_level,0)<3;
    
    update epmms_membermap as p set membermap_level=4
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and p.membermap_under_product_count*get_bill_money()>=900000
    and (select count(*) from epmms_membermap where membermap_level>=3 and membermap_parent_id=p.membermap_id)>=2
    and coalesce(p.membermap_level,0)<4;
    
    update epmms_membermap as p set membermap_level=5
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and p.membermap_under_product_count*get_bill_money()>=2400000
    and (select count(*) from epmms_membermap where membermap_level>=4 and membermap_parent_id=p.membermap_id)>=2
    and coalesce(p.membermap_level,0)<5;
END;
$$;


--
-- Name: upgrade_level_180501(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upgrade_level_180501(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    
    update epmms_membermap as p set membermap_level=1
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and p.membermap_under_product_count>=34000
    and p.membermap_recommend_number>=2
    and coalesce(p.membermap_level,0)<1;
    
    
    update epmms_membermap as p set membermap_level=2
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and p.membermap_under_product_count>=10200
    and p.membermap_recommend_number>=4
    and coalesce(p.membermap_level,0)<2;
    
    update epmms_membermap as p set membermap_level=3
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and p.membermap_under_product_count>=34000
    and public.get_l_under_product_count(p.membermap_id)>=6800
    and coalesce(p.membermap_level,0)<3;
    
    update epmms_membermap as p set membermap_level=4
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and p.membermap_under_product_count>=81600
    and public.get_l_under_product_count(p.membermap_id)>=20400
    and coalesce(p.membermap_level,0)<4;
    
    update epmms_membermap as p set membermap_level=5
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and p.membermap_under_product_count>=204000
    and public.get_l_under_product_count(p.membermap_id)>=54400
    and coalesce(p.membermap_level,0)<5;
    
    update epmms_membermap as p set membermap_level=6
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and p.membermap_under_product_count>=408000
    and public.get_l_under_product_count(p.membermap_id)>=136000
    and coalesce(p.membermap_level,0)<6;
    
    update epmms_membermap as p set membermap_level=7
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and p.membermap_under_product_count>=1020000
    and public.get_l_under_product_count(p.membermap_id)>=408000
    and coalesce(p.membermap_level,0)<7;

    update epmms_membermap as p set membermap_level=8
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and p.membermap_under_product_count>=2040000
    and public.get_l_under_product_count(p.membermap_id)>=1020000
    and coalesce(p.membermap_level,0)<8;
    
    update epmms_membermap as p set membermap_level=9
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and p.membermap_under_product_count>=6120000
    and public.get_l_under_product_count(p.membermap_id)>=2720000
    and coalesce(p.membermap_level,0)<9;
END;
$$;


--
-- Name: upgrade_level_180929(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upgrade_level_180929(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$

BEGIN

    

    update epmms_membermap as p set membermap_level=1

    from epmms_membermap as my

    where my.membermap_id=member_id

    and my.membermap_recommend_id=p.membermap_id

	and (select count(1) from epmms_orders where orders_member_id=my.membermap_recommend_id and orders_is_verify=1)>=18

    and coalesce(p.membermap_level,0)<1;

    

    update epmms_membermap as p set membermap_level=2

    from epmms_membermap as my

    where my.membermap_id=member_id

    and my.membermap_recommend_id=p.membermap_id

	and (select count(1) from epmms_orders where orders_member_id=my.membermap_recommend_id and orders_is_verify=1)>=38

    and coalesce(p.membermap_level,0)<2;

    

    update epmms_membermap as p set membermap_level=3

    from epmms_membermap as my

    where my.membermap_id=member_id

    and my.membermap_recommend_id=p.membermap_id

	and (select count(1) from epmms_orders where orders_member_id=my.membermap_recommend_id and orders_is_verify=1)>=88

    and coalesce(p.membermap_level,0)<3;

    

    

    update epmms_membermap as p set membermap_level=4

    from epmms_membermap as my

    where my.membermap_id=member_id

    and my.membermap_recommend_id=p.membermap_id

	and (select count(1) from epmms_orders where orders_member_id=my.membermap_recommend_id and orders_is_verify=1)>=220

    and coalesce(p.membermap_level,0)<4;

    

    

    update epmms_membermap as p set membermap_level=5

    from epmms_membermap as my

    where my.membermap_id=member_id

    and my.membermap_recommend_id=p.membermap_id

	and (select count(1) from epmms_orders where orders_member_id=my.membermap_recommend_id and orders_is_verify=1)>=550

    and coalesce(p.membermap_level,0)<5;

END;

$$;


--
-- Name: upgrade_level_181111(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upgrade_level_181111(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$

BEGIN

    update epmms_membermap as p set membermap_level=1

    from epmms_membermap as my

    where my.membermap_id=member_id

    and my.membermap_path like p.membermap_path || '/%'

    and p.membermap_membertype_level>1

    and public.get_l_under_product_count_date(p.membermap_id)>=100000

    and coalesce(p.membermap_level,0)<1;

    

    update epmms_membermap as p set membermap_level=2

    from epmms_membermap as my

    where my.membermap_id=member_id

    and my.membermap_path like p.membermap_path || '/%'

    and p.membermap_membertype_level>1

    and award.get_level_count(p.membermap_id,1,1)>=2

	and award.get_level_count(p.membermap_id,2,1)>=2

    and coalesce(p.membermap_level,0)<2;

    

    update epmms_membermap as p set membermap_level=3

    from epmms_membermap as my

    where my.membermap_id=member_id

    and my.membermap_membertype_level>1

    and my.membermap_path like p.membermap_path || '/%'

    and award.get_level_count(p.membermap_id,1,2)>=2

	and award.get_level_count(p.membermap_id,2,2)>=2

    and coalesce(p.membermap_level,0)<3;

    

    update epmms_membermap as p set membermap_level=4

    from epmms_membermap as my

    where my.membermap_id=member_id

    and my.membermap_membertype_level>1

    and my.membermap_path like p.membermap_path || '/%'

    and award.get_level_count(p.membermap_id,1,3)>=2

	and award.get_level_count(p.membermap_id,2,3)>=2

    and coalesce(p.membermap_level,0)<4;

    

    update epmms_membermap as p set membermap_level=5

    from epmms_membermap as my

    where my.membermap_id=member_id

    and my.membermap_membertype_level>1

    and my.membermap_path like p.membermap_path || '/%'

    and award.get_level_count(p.membermap_id,1,4)>=2

	and award.get_level_count(p.membermap_id,2,4)>=2

    and coalesce(p.membermap_level,0)<5;



    update epmms_membermap as p set membermap_level=6

    from epmms_membermap as my

    where my.membermap_id=member_id

    and my.membermap_membertype_level>1

    and my.membermap_path like p.membermap_path || '/%'

    and award.get_level_count(p.membermap_id,1,5)>=2

	and award.get_level_count(p.membermap_id,2,5)>=2

    and coalesce(p.membermap_level,0)<6;

	

    update epmms_membermap as p set membermap_level=7

    from epmms_membermap as my

    where my.membermap_id=member_id

    and my.membermap_membertype_level>1

    and my.membermap_path like p.membermap_path || '/%'

    and award.get_level_count(p.membermap_id,1,6)>=2

	and award.get_level_count(p.membermap_id,2,6)>=2

    and coalesce(p.membermap_level,0)<7;

END;

$$;


--
-- Name: upgrade_level_181225(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upgrade_level_181225(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN

    update epmms_membermap as p set membermap_level=1,membermap_day_count=0,membermap_day_level=1
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and award.get_little_count(p.membermap_id)>=1
    and coalesce(p.membermap_level,0)<1;

    update epmms_membermap as p set membermap_level=2,membermap_day_count=0,membermap_day_level=2
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and award.get_little_count(p.membermap_id)>=3
    and coalesce(p.membermap_level,0)<3;

    update epmms_membermap as p set membermap_level=3,membermap_day_count=0,membermap_day_level=3
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and award.get_little_count(p.membermap_id)>=8
    and coalesce(p.membermap_level,0)<3;
    
    update epmms_membermap as p set membermap_level=4,membermap_day_count=0,membermap_day_level=4
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and award.get_little_count(p.membermap_id)>=20
    and coalesce(p.membermap_level,0)<4;
    
    update epmms_membermap as p set membermap_level=5,membermap_day_count=0,membermap_day_level=5
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and award.get_little_count(p.membermap_id)>=40
    and coalesce(p.membermap_level,0)<5;
    
    update epmms_membermap as p set membermap_level=6,membermap_day_count=0,membermap_day_level=6
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and award.get_little_count(p.membermap_id)>=80
    and coalesce(p.membermap_level,0)<6;
    
    update epmms_membermap as p set membermap_level=7,membermap_day_count=0,membermap_day_level=7
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and award.get_little_count(p.membermap_id)>=160
    and coalesce(p.membermap_level,0)<7;
    
    update epmms_membermap as p set membermap_level=8,membermap_day_count=0,membermap_day_level=8
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and award.get_little_count(p.membermap_id)>=260
    and coalesce(p.membermap_level,0)<8;
    
    update epmms_membermap as p set membermap_level=9,membermap_day_count=0,membermap_day_level=9
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and award.get_little_count(p.membermap_id)>=380
    and coalesce(p.membermap_level,0)<9;
    
    update epmms_membermap as p set membermap_level=10,membermap_day_count=0,membermap_day_level=10
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and award.get_little_count(p.membermap_id)>=750
    and coalesce(p.membermap_level,0)<10;
    
    update epmms_membermap as p set membermap_level=11,membermap_day_count=0,membermap_day_level=11
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and award.get_little_count(p.membermap_id)>=1500
    and coalesce(p.membermap_level,0)<11;
    
    update epmms_membermap as p set membermap_level=12,membermap_day_count=0,membermap_day_level=12
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and award.get_little_count(p.membermap_id)>=3000
    and coalesce(p.membermap_level,0)<12;
    
    update epmms_membermap as p set membermap_level=13,membermap_day_count=0,membermap_day_level=13
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and award.get_little_count(p.membermap_id)>=6000
    and coalesce(p.membermap_level,0)<13;
    
    update epmms_membermap as p set membermap_level=14,membermap_day_count=0,membermap_day_level=14
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and award.get_little_count(p.membermap_id)>=10000
    and coalesce(p.membermap_level,0)<14;
END;
$$;


--
-- Name: upper_area(integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upper_area(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$

DECLARE

  my_area integer;

  upper_provience integer;

BEGIN

	select p.membermap_id into my_area from epmms_membermap as p,epmms_membermap as my

    where my.membermap_id=member_id

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and p.membermap_agent_type=3

    order by p.membermap_recommend_layer desc

    limit 1;

    if my_area is null then

    	return null;

    end if;

	select p.membermap_id into upper_provience from epmms_membermap as p,epmms_membermap as my

    where my.membermap_id=my_area

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and my.membermap_recommend_layer-p.membermap_recommend_layer=1

    and p.membermap_agent_type=1

    order by p.membermap_recommend_layer desc

    limit 1;

	return upper_provience;

END;

$$;


--
-- Name: upper_area_area(integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upper_area_area(member_id integer, layer integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$

DECLARE

  my_area integer;

  upper_area integer;

  upper_area2 integer;

BEGIN

	select p.membermap_id into my_area from epmms_membermap as p,epmms_membermap as my

    where my.membermap_id=member_id

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and my.membermap_recommend_layer-p.membermap_recommend_layer=1

    and p.membermap_agent_type=2

    order by p.membermap_recommend_layer desc

    limit 1;

    if my_area is null then

    	return null;

    end if;

	select p.membermap_id into upper_area from epmms_membermap as p,epmms_membermap as my

    where my.membermap_id=my_area

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and p.membermap_agent_type=2

    order by p.membermap_recommend_layer desc

    limit 1;

    if layer=1 then

    	return upper_area;

    end if;

    

    if upper_area is null then

    	return null;

    end if;

    

	select p.membermap_id into upper_area2 from epmms_membermap as p,epmms_membermap as my

    where my.membermap_id=upper_area

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and my.membermap_recommend_layer-p.membermap_recommend_layer=1

    and p.membermap_agent_type=2

    order by p.membermap_recommend_layer desc

    limit 1;

    

    return upper_area2;

END;

$$;


--
-- Name: upper_area_city(integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upper_area_city(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$

DECLARE

  my_city integer;

  upper_area integer;

BEGIN

	select p.membermap_id into my_city from epmms_membermap as p,epmms_membermap as my

    where my.membermap_id=member_id

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and p.membermap_agent_type=1

    order by p.membermap_recommend_layer desc

    limit 1;

    if my_city is null then

    	return null;

    end if;

	select p.membermap_id into upper_area from epmms_membermap as p,epmms_membermap as my

    where my.membermap_id=my_provience

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and my.membermap_recommend_layer-p.membermap_recommend_layer=1

    and p.membermap_agent_type=2

    order by p.membermap_recommend_layer desc

    limit 1;

	return upper_area;

END;

$$;


--
-- Name: upper_area_provience(integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upper_area_provience(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$

DECLARE

  my_provience integer;

  upper_area integer;

BEGIN

	select p.membermap_id into my_provience from epmms_membermap as p,epmms_membermap as my

    where my.membermap_id=member_id

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and p.membermap_agent_type=1

    order by p.membermap_recommend_layer desc

    limit 1;

    if my_provience is null then

    	return null;

    end if;

	select p.membermap_id into upper_area from epmms_membermap as p,epmms_membermap as my

    where my.membermap_id=my_provience

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and my.membermap_recommend_layer-p.membermap_recommend_layer=1

    and p.membermap_agent_type=2

    order by p.membermap_recommend_layer desc

    limit 1;

	return upper_area;

END;

$$;


--
-- Name: upper_area_silver(integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upper_area_silver(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$

DECLARE

  my_silver integer;

  upper_area integer;

BEGIN

	select p.membermap_id into my_silver from epmms_membermap as p,epmms_membermap as my

    where my.membermap_id=member_id

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and p.membermap_membertype_level=2

    order by p.membermap_recommend_layer desc

    limit 1;

    if my_silver is null then

    	return null;

    end if;

	select p.membermap_id into upper_area from epmms_membermap as p,epmms_membermap as my

    where my.membermap_id=my_silver

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and my.membermap_recommend_layer-p.membermap_recommend_layer=1

    and p.membermap_agent_type=3

    order by p.membermap_recommend_layer desc

    limit 1;

	return upper_area;

END;

$$;


--
-- Name: upper_city(integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upper_city(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$

DECLARE

  my_city integer;

  upper_provience integer;

BEGIN

	select p.membermap_id into my_city from epmms_membermap as p,epmms_membermap as my

    where my.membermap_id=member_id

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and p.membermap_agent_type=2

    order by p.membermap_recommend_layer desc

    limit 1;

    if my_city is null then

    	return null;

    end if;

	select p.membermap_id into upper_provience from epmms_membermap as p,epmms_membermap as my

    where my.membermap_id=my_city

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and my.membermap_recommend_layer-p.membermap_recommend_layer=1

    and p.membermap_agent_type=1

    order by p.membermap_recommend_layer desc

    limit 1;

	return upper_provience;

END;

$$;


--
-- Name: upper_city_area(integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upper_city_area(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$

DECLARE

  my_area integer;

  upper_city integer;

BEGIN

	select p.membermap_id into my_area from epmms_membermap as p,epmms_membermap as my

    where my.membermap_id=member_id

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and p.membermap_agent_type=3

    order by p.membermap_recommend_layer desc

    limit 1;

    if my_area is null then

    	return null;

    end if;

	select p.membermap_id into upper_city from epmms_membermap as p,epmms_membermap as my

    where my.membermap_id=my_area

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and my.membermap_recommend_layer-p.membermap_recommend_layer=1

    and p.membermap_agent_type=2

    order by p.membermap_recommend_layer desc

    limit 1;

	return upper_city;

END;

$$;


--
-- Name: upper_city_city(integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upper_city_city(member_id integer, layer integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$

DECLARE

  my_city integer;

  upper_city integer;

  upper_city2 integer;

BEGIN

	select p.membermap_id into my_city from epmms_membermap as p,epmms_membermap as my

    where my.membermap_id=member_id

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and p.membermap_agent_type=2

    order by p.membermap_recommend_layer desc

    limit 1;

    if my_city is null then

    	return null;

    end if;

	select p.membermap_id into upper_city from epmms_membermap as p,epmms_membermap as my

    where my.membermap_id=my_city

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and my.membermap_recommend_layer-p.membermap_recommend_layer=1

    and p.membermap_agent_type=2

    order by p.membermap_recommend_layer desc

    limit 1;

    if layer=1 then

    	return upper_city;

    end if;

    

    if upper_city is null then

    	return null;

    end if;

    

	select p.membermap_id into upper_city2 from epmms_membermap as p,epmms_membermap as my

    where my.membermap_id=upper_city

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and my.membermap_recommend_layer-p.membermap_recommend_layer=1

    and p.membermap_agent_type=2

    order by p.membermap_recommend_layer desc

    limit 1;

    

    return upper_city2;

END;

$$;


--
-- Name: upper_city_provience(integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upper_city_provience(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$

DECLARE

  my_provience integer;

  upper_city integer;

BEGIN

	select p.membermap_id into my_provience from epmms_membermap as p,epmms_membermap as my

    where my.membermap_id=member_id

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and p.membermap_agent_type=1

    order by p.membermap_recommend_layer desc

    limit 1;

    if my_provience is null then

    	return null;

    end if;

	select p.membermap_id into upper_city from epmms_membermap as p,epmms_membermap as my

    where my.membermap_id=my_provience

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and my.membermap_recommend_layer-p.membermap_recommend_layer=1

    and p.membermap_agent_type=2

    order by p.membermap_recommend_layer desc

    limit 1;

	return upper_city;

END;

$$;


--
-- Name: upper_provience(integer, integer); Type: FUNCTION; Schema: award; Owner: -
--

CREATE FUNCTION award.upper_provience(member_id integer, layer integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$

DECLARE

  my_provience integer;

  upper_provience integer;

  upper_provience2 integer;

BEGIN

	select p.membermap_id into my_provience from epmms_membermap as p,epmms_membermap as my

    where my.membermap_id=member_id

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and p.membermap_agent_type=1

    order by p.membermap_recommend_layer desc

    limit 1;

    if my_provience is null then

    	return null;

    end if;

	select p.membermap_id into upper_provience from epmms_membermap as p,epmms_membermap as my

    where my.membermap_id=my_provience

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and my.membermap_recommend_layer-p.membermap_recommend_layer=1

    and p.membermap_agent_type=1

    order by p.membermap_recommend_layer desc

    limit 1;

    if layer=1 then

    	return upper_provience;

    end if;

    

    if upper_provience is null then

    	return null;

    end if;

    

	select p.membermap_id into upper_provience2 from epmms_membermap as p,epmms_membermap as my

    where my.membermap_id=upper_provience

    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'

    and my.membermap_recommend_layer-p.membermap_recommend_layer=1

    and p.membermap_agent_type=1

    order by p.membermap_recommend_layer desc

    limit 1;

    

    return upper_provience2;

END;

$$;


--
-- Name: award_agent(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_agent(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money),award_sum_type
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id and p.membermap_id=my.membermap_agent_id;
END;
$$;


--
-- Name: award_agent_bill(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_agent_bill(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,p.membermap_id,award_type,get_award_value_member(award_type,my.membermap_membertype_level)
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id and p.membermap_id=my.membermap_agent_id;
END;
$$;


--
-- Name: award_agent_membertype(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_agent_membertype(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
      insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
      award_period_type_id,award_period_currency,award_period_sum_type)
      select award_period,p.membermap_id,award_type,cfg.award_config_currency,award_sum_type
      from epmms_membermap as my,epmms_membermap as p,epmms_award_config_agent as cfg
      where my.membermap_id=member_id and p.membermap_id=my.membermap_agent_id
      and p.membermap_membertype_level=cfg.award_config_agent;
END;
$$;


--
-- Name: award_agent_type(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_agent_type(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,cfg.award_config_currency*my.membermap_money,award_sum_type
	from epmms_membermap as my,epmms_membermap as p,epmms_award_config_agent as cfg
	where my.membermap_id=member_id and p.membermap_id=my.membermap_agent_id
    and p.membermap_agent_type=cfg.award_config_agent;
END;
$$;


--
-- Name: award_all_bond(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_all_bond(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period
  ,p.membermap_id
  ,award_type
  ,get_config_award(award_type,my.membermap_money)/count(*) over()
	from epmms_membermap as p,epmms_membermap as my
  where p.membermap_is_verify=1 and p.membermap_id!=member_id
  and my.membermap_id=member_id;
END;
$$;


--
-- Name: FUNCTION award_all_bond(member_id integer, award_period integer, award_type integer, award_sum_type integer); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION public.award_all_bond(member_id integer, award_period integer, award_type integer, award_sum_type integer) IS '新注册会员的2%平均分给所有会员';


--
-- Name: award_all_bond_type(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_all_bond_type(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN

	--干部升级
	update epmms_membermap as p set membermap_level=1 from epmms_membermap as my
    where (select count(*) from epmms_membermap as child where child.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and child.membermap_recommend_layer-p.membermap_recommend_layer<=5)>=300
    and p.membermap_level is null
    and my.membermap_id=member_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%';
    --全球分红奖金
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period
	,p.membermap_id
	,award_type
	,my.membermap_money*cfg.award_value/count(*) over(partition by p.membermap_membertype_level)
	from epmms_membermap as p,epmms_award_config_all_fenhong as cfg,epmms_membermap as my
	where p.membermap_is_verify=1 and p.membermap_id!=member_id
	and my.membermap_id=member_id
    and cfg.member_type=p.membermap_membertype_level;
    
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period
	,p.membermap_id
	,award_type
	,my.membermap_money*0.02/count(*) over()
	from epmms_membermap as p,epmms_membermap as my
	where p.membermap_is_verify=1 and p.membermap_id!=member_id
	and my.membermap_id=member_id
    and p.membermap_level=1;
END;
$$;


--
-- Name: FUNCTION award_all_bond_type(member_id integer, award_period integer, award_type integer, award_sum_type integer); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION public.award_all_bond_type(member_id integer, award_period integer, award_type integer, award_sum_type integer) IS '新注册会员的2%平均分给所有会员';


--
-- Name: award_assign_stock(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_assign_stock(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    update epmms_finance set finance_award=award_config_currency from epmms_award_config_stock,epmms_membermap
    where finance_type=3 and finance_memberinfo_id=member_id and membermap_id=member_id and membermap_membertype_level=award_config_membertype;
    
    insert into epmms_stock_trend(stock_trend_memberinfo_id,stock_trend_value)
    select member_id,finance_award from epmms_finance where finance_memberinfo_id=member_id and finance_type=3;
END;
$$;


--
-- Name: FUNCTION award_assign_stock(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION public.award_assign_stock(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) IS '公司上周业绩周分红';


--
-- Name: award_chuangye(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_chuangye(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,p.membermap_id,award_type,cfg.award_config_currency*my.membermap_money
	from epmms_membermap as my,epmms_membermap as p,epmms_award_config_chuangye as cfg
	where my.membermap_id=member_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and cfg.award_config_layer=my.membermap_recommend_layer-p.membermap_recommend_layer;
END;
$$;


--
-- Name: award_corp_fenhong(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_corp_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	--出局
    update epmms_membermap as u set membermap_is_active=0
    from epmms_award_config_out as cfg,epmms_finance as f
    where
    f.finance_award>=cfg.award_config_award
    and u.membermap_id=f.finance_memberinfo_id
    and u.membermap_recommend_number=cfg.award_config_recommend;
    --升级
    update epmms_membermap as u set membermap_level=1
    where u.membermap_recommend_number>=10 and u.membermap_recommend_number<=14
    and (select count(*) from epmms_membermap where membermap_is_active=1 and membermap_recommend_id=u.membermap_id)>=5;
    update epmms_membermap as u set membermap_level=2
    where u.membermap_recommend_number>=15
    and (select count(*) from epmms_membermap where membermap_level=1 and membermap_recommend_id=u.membermap_id)>=2;
    --奖金
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period
	,p.membermap_id
	,award_type
	,cfg.award_config_award_currency*my.membermap_money/count(*) over()
	from epmms_membermap as my,epmms_membermap as p,epmms_award_config_corp_fenhong as cfg
	where my.membermap_id=member_id
	and cfg.award_config_level=p.membermap_level
	and p.membermap_is_verify=1 and p.membermap_id<>member_id;
END;
$$;


--
-- Name: FUNCTION award_corp_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION public.award_corp_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer) IS '公司分红';


--
-- Name: award_corp_fenhong_month(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_corp_fenhong_month(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    month_money numeric(16,2);
BEGIN
    --升级
    perform upgrade_level();
    --奖金
    select sum(membermap_money) into month_money from membermap_month;
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
    select award_period
    ,p.membermap_id
    ,award_type
    ,cfg.award_config_award_currency*COALESCE(month_money,0)
    ,award_sum_type
	from epmms_membermap as p,epmms_award_config_corp_fenhong as cfg
	where 
	cfg.award_config_level=p.membermap_membertype_level
	and p.membermap_is_verify=1;
END;
$$;


--
-- Name: FUNCTION award_corp_fenhong_month(member_id integer, award_period integer, award_type integer, award_sum_type integer); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION public.award_corp_fenhong_month(member_id integer, award_period integer, award_type integer, award_sum_type integer) IS '公司分红';


--
-- Name: award_corp_fenhong_week(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_corp_fenhong_week(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    week_money numeric(16,2);
BEGIN
    select sum(membermap_money) into week_money from membermap_week;
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period
	,p.membermap_id
	,award_type
	,cfg.award_config_award_currency*COALESCE(week_money,0)/count(*) over(partition by p.membermap_membertype_level)
    ,award_sum_type
	from epmms_membermap as p,epmms_award_config_corp_fenhong as cfg
	where 
	cfg.award_config_level=p.membermap_membertype_level
	and p.membermap_is_verify=1;
END;
$$;


--
-- Name: FUNCTION award_corp_fenhong_week(member_id integer, award_period integer, award_type integer, award_sum_type integer); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION public.award_corp_fenhong_week(member_id integer, award_period integer, award_type integer, award_sum_type integer) IS '公司上周业绩周分红';


--
-- Name: award_cycle(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_cycle(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type
	,get_award_value(award_type)
    ,award_sum_type
	from epmms_membermap as p,epmms_membermap as my,epmms_award_period as period
	where period.award_period_type_id=127
    and period.award_period_period=award_period
    and period.award_period_currency=600
    and my.membermap_id=period.award_period_memberinfo_id
    and my.membermap_recommend_id=p.membermap_id;
END;
$$;


--
-- Name: award_cycle_2(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_cycle_2(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type
	,get_award_value(award_type)
    ,award_sum_type
	from epmms_membermap as p,epmms_membermap as my,epmms_award_period as period
	where period.award_period_type_id=127
    and period.award_period_period=award_period
    and period.award_period_currency=600
    and my.membermap_id=period.award_period_memberinfo_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and my.membermap_recommend_layer-p.membermap_recommend_layer=2;
END;
$$;


--
-- Name: award_cycle_fee(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_cycle_fee(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period,my.membermap_id,award_type
	,get_award_value(award_type)
    ,award_sum_type
	from epmms_membermap as my,epmms_award_period as period
	where period.award_period_type_id=127
    and period.award_period_period=award_period
    and my.membermap_id=period.award_period_memberinfo_id
    and period.award_period_currency=600;
END;
$$;


--
-- Name: award_day_fenhong(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_day_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period
	,p.membermap_id
	,award_type
	,cfg.award_currency
    ,award_sum_type
	from epmms_membermap as p,epmms_award_config_day_fenhong as cfg
	where 
	cfg.award_membertype=p.membermap_membertype_level
	and p.membermap_is_verify=1;
END;
$$;


--
-- Name: FUNCTION award_day_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION public.award_day_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) IS '公司上周业绩周分红';


--
-- Name: award_day_stock(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_day_stock(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    update epmms_finance set finance_award=finance_award+finance_award*get_award_value(award_type) where finance_type=3;
    insert into epmms_stock_trend(stock_trend_memberinfo_id,stock_trend_value)
    select finance_memberinfo_id,finance_award from epmms_finance where finance_type=3;
END;
$$;


--
-- Name: FUNCTION award_day_stock(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION public.award_day_stock(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) IS '公司上周业绩周分红';


--
-- Name: award_dif(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dif(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE 
	member_award RECORD;
  previous_award numeric(16,2)=0;
  current_award numeric(16,2)=0;
  previous_income_award numeric(16,2)=0;
BEGIN
  perform upgrade_level(member_id);
  --计算级差
  for member_award in  select p.membermap_id,c.dif_award*p.membermap_product_count as dif_award,c.equal_award,my.membermap_product_count,c.director_level
   from epmms_membermap as my,epmms_membermap as p,epmms_award_config_dif as c
    where my.membermap_id=member_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and p.membermap_level=c.director_level
    order by p.membermap_recommend_layer desc
  loop
    current_award:=member_award.dif_award;
    /*
  	if current_award=previous_award and previous_income_award>0 then
    	--与上一个拿级差奖的人的等级相同则拿平级奖，不再拿级差奖
      insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
      values(award_period,member_award.membermap_id,award_type,member_award.equal_award*member_award.membermap_money);
      previous_income_award:=0;
    end if;*/
  	if current_award>previous_award then
    	--比上一个拿级差奖的级别高
      insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
      values(award_period,member_award.membermap_id,award_type,(current_award-previous_award)*member_award.membermap_product_count);
      previous_income_award:=current_award-previous_award;
      previous_award:=current_award;
    end if;
  end loop;
END;
$$;


--
-- Name: award_dif2(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dif2(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE 
	member_award RECORD;
    previous_award numeric(16,2)=0;
    current_award numeric(16,2)=0;
    previous_income_award numeric(16,2)=0;
BEGIN
  --perform upgrade_level(member_id);
  --计算级差
  for member_award in  select p.membermap_id,c.dif_award as dif_award,c.equal_award,my.membermap_money,c.director_level
   from epmms_membermap as my,epmms_membermap as p,epmms_award_config_dif as c
    where my.membermap_id=member_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and p.membermap_membertype_level=c.director_level
    order by p.membermap_recommend_layer desc
  loop
    current_award:=member_award.dif_award;
    /*
  	if current_award=previous_award and previous_income_award>0 then
    	--与上一个拿级差奖的人的等级相同则拿平级奖，不再拿级差奖
      insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
      values(award_period,member_award.membermap_id,award_type,member_award.equal_award*member_award.membermap_money);
      previous_income_award:=0;
    end if;*/
  	if current_award>previous_award then
    	--比上一个拿级差奖的级别高
      insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
      values(award_period,member_award.membermap_id,award_type,(current_award-previous_award)*member_award.membermap_money);
      previous_income_award:=current_award-previous_award;
      previous_award:=current_award;
    end if;
  end loop;
END;
$$;


--
-- Name: award_dif3(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dif3(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE 
	member_award RECORD;
    previous_award numeric(16,2)=0;
    current_award numeric(16,2)=0;
    previous_income_award numeric(16,2)=0;
BEGIN
  --升级
  update epmms_membermap as x set membermap_level=cfg.award_config_level
  from epmms_award_config_guanli_upgrade as cfg,epmms_membermap as my
  where my.membermap_id=member_id and my.membermap_path like x.membermap_path || '/%'
  and (select count(*) from epmms_membermap where membermap_path like x.membermap_path || '/%'
      and membermap_membertype_level>=cfg.award_config_membertype)>=cfg.award_config_number
  and coalesce(x.membermap_level,0)<cfg.award_config_level;
  update epmms_membermap as x set membermap_level=cfg.award_config_level
  from epmms_award_config_guanli_upgrade as cfg,epmms_membermap as my
  where my.membermap_id=member_id and my.membermap_path like x.membermap_path || '/%'
  and (select count(*) from epmms_membermap where membermap_path like x.membermap_path || '/%'
      and membermap_level>=cfg.award_config_memberlevel)>=cfg.award_config_number
  and coalesce(x.membermap_level,0)<cfg.award_config_level;
  
  update epmms_membermap as x set membermap_level=5
  from epmms_membermap as my
  where my.membermap_id=member_id and my.membermap_path like x.membermap_path || '/%'
  and (select count(*) from epmms_membermap where membermap_path like x.membermap_path || '/%'
      and membermap_level>=4)>=2
  and coalesce(x.membermap_level,0)<5;
  --计算级差
  for member_award in  select p.membermap_id,c.dif_award as dif_award,c.equal_award,my.membermap_money,c.director_level
   from epmms_membermap as my,epmms_membermap as p,epmms_award_config_dif as c
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and p.membermap_level=c.director_level
    order by p.membermap_layer desc
  loop
    current_award:=member_award.dif_award;
    /*
  	if current_award=previous_award and previous_income_award>0 then
    	--与上一个拿级差奖的人的等级相同则拿平级奖，不再拿级差奖
      insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
      values(award_period,member_award.membermap_id,award_type,member_award.equal_award*member_award.membermap_money);
      previous_income_award:=0;
    end if;*/
  	if current_award>previous_award then
    	--比上一个拿级差奖的级别高
      insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
      values(award_period,member_award.membermap_id,award_type,(current_award-previous_award)*member_award.membermap_money,award_sum_type);
      previous_income_award:=current_award-previous_award;
      previous_award:=current_award;
    end if;
  end loop;
END;
$$;


--
-- Name: FUNCTION award_dif3(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION public.award_dif3(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) IS '升级各级的条件和各级奖金
奖金按级差发放(接点关系)
级别    特定会员人数(接点关系)    特定会员类型(>=)    特定会员级别(>=)    累计业绩    奖金
主任    3    土豪        5万    12%
经理    3        主任    15万    15%
部长    3        经理    50万    20%
总监    3        部长    150万    25%
';


--
-- Name: award_differential(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_differential(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE 
	member_award RECORD;
  previous_award numeric(16,2)=0;
BEGIN
	--升级
  update epmms_membermap as x set membermap_level=c.award_config_level 
  from epmms_membermap as my,epmms_config_award_differential as c where my.membermap_id=member_id
  and my.membermap_path like x.membermap_path || '/%' and get_l_under_product_count(x.membermap_id::integer)<@c.award_config_l_bill
  and c.award_config_level>x.membermap_level;
  
  --计算级差
  for member_award in  select p.membermap_id,c.award_config_currency,my.membermap_money
   from epmms_membermap as my,epmms_membermap as p,epmms_config_award_differential as c
    where my.membermap_id=member_id 
    and my.membermap_path like p.membermap_path || '/%'
    and p.membermap_level=c.award_config_level
    order by p.membermap_layer asc
  loop
  	if member_award>previous_award then
  		previous_award=member_award.award_config_currency-previous_award;
      insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
      values(award_period,member_award.membermap_id,award_type,previous_award*member_award.membermap_money);
    end if;
  end loop;
END;
$$;


--
-- Name: award_dongshi(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dongshi(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    --奖金
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period
	,p.membermap_id
	,award_type
	,get_config_award(award_type,my.membermap_money)*pv()
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id
	and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
	and p.membermap_level=2
    order by p.membermap_recommend_layer desc
    limit 1;
END;
$$;


--
-- Name: FUNCTION award_dongshi(member_id integer, award_period integer, award_type integer, award_sum_type integer); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION public.award_dongshi(member_id integer, award_period integer, award_type integer, award_sum_type integer) IS '公司分红';


--
-- Name: award_dot_6(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dot_6(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money)
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id and my.membermap_path like p.membermap_path || '/%'
  and p.membermap_id!=my.membermap_recommend_id;
END;
$$;


--
-- Name: award_dot_fuwu(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dot_fuwu(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
    award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,c.award_config_currency*my.membermap_money,award_sum_type
	from epmms_membermap as my,epmms_membermap as p,epmms_award_config_dot_fuwu as c
	where my.membermap_id=member_id and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and p.membermap_recommend_number<@c.award_config_recommend
  	and my.membermap_recommend_layer-p.membermap_recommend_layer<@c.award_config_layer;
END;
$$;


--
-- Name: award_dot_group(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dot_group(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,c.award_config_currency,award_sum_type
	from epmms_membermap as my,epmms_membermap as p,epmms_award_config_group as c
	where my.membermap_id=member_id and my.membermap_path like p.membermap_path || '/%'
    and p.membermap_membertype_level=c.award_config_membertype
  	and my.membermap_layer-p.membermap_layer<=iif(c.award_config_layer+p.membermap_recommend_number>10,10,c.award_config_layer+p.membermap_recommend_number);
END;
$$;


--
-- Name: award_dot_layer_2(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dot_layer_2(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,get_award_value(award_type),award_sum_type
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id and my.membermap_path like p.membermap_path || '/%'
  	and my.membermap_layer-p.membermap_layer<=1;
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
    award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type
    ,get_award_value(award_type)*4,award_sum_type
    from epmms_membermap as p,epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer=2
    and (select count(*) from epmms_membermap
     where membermap_path like p.membermap_path || '/%' and membermap_layer-p.membermap_layer=2)=4;
END;
$$;


--
-- Name: award_dot_layer_recommend(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dot_layer_recommend(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,cfg.award_config_currency,award_sum_type
	from membermap_week as my,epmms_membermap as p,epmms_award_config_layer_dot as cfg
	where my.membermap_path like p.membermap_path || '/%'
  	and my.membermap_layer-p.membermap_layer=cfg.award_config_layer
    and p.membermap_recommend_number<@cfg.award_config_recommend_number;
END;
$$;


--
-- Name: award_dot_matrix(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dot_matrix(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
    award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,c.award_config_currency,award_sum_type
	from epmms_membermap as my,epmms_membermap as p,epmms_award_config_dot_matrix as c
	where my.membermap_id=member_id and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_membertype_level=c.award_config_new_member
    and p.membermap_membertype_level=c.award_config_award_member
  	and my.membermap_layer-p.membermap_layer<=c.award_config_layer;
END;
$$;


--
-- Name: award_dot_member(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dot_member(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,c.award_config_currency*my.membermap_product_count,award_sum_type
	from epmms_membermap as my,epmms_membermap as p,epmms_award_config_dot_member as c
	where my.membermap_id=member_id and my.membermap_path like p.membermap_path || '/%'
  	and my.membermap_layer-p.membermap_layer<@c.award_config_layer
    and p.membermap_membertype_level=c.award_config_member;
END;
$$;


--
-- Name: award_dot_member_type_recommend(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dot_member_type_recommend(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,p.membermap_id,award_type,cfg.award_money
	from epmms_membermap as my,epmms_membermap as p,epmms_award_config_dot as cfg
	where my.membermap_id=member_id and my.membermap_path like p.membermap_path || '/%'
  	and my.membermap_recommend_layer-p.membermap_recommend_layer<=cfg.recommend_layer
    and p.membermap_membertype_level=cfg.member_type
    and p.membermap_recommend_number<@cfg.recommend_count;
END;
$$;


--
-- Name: award_down(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_down(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
    award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type
	,cfg.award_config_currency*period.award_period_currency/count(p.membermap_id) over (partition by my.membermap_id)
    ,award_sum_type
	from epmms_membermap as p,epmms_membermap as my,epmms_award_config_down as cfg,epmms_award_period as period
	where period.award_period_type_id=137
    and period.award_period_period=award_period
    and my.membermap_id=period.award_period_memberinfo_id
	and p.membermap_path like my.membermap_path || '/%'
    and p.membermap_layer-my.membermap_layer=cfg.award_config_layer
    and p.membermap_membertype_level=cfg.award_config_award_member;
END;
$$;


--
-- Name: FUNCTION award_down(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION public.award_down(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) IS '下拿上';


--
-- Name: award_down_up(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_down_up(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type
	,get_config_award(award_type,period.award_period_currency)/count(*) over ()
    ,award_sum_type
	from epmms_membermap as p,epmms_membermap as my,epmms_award_period as period
	where period.award_period_type_id=91
    and period.award_period_period=award_period
    and my.membermap_id=period.award_period_memberinfo_id
	and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and my.membermap_recommend_layer-p.membermap_recommend_layer=1
    and p.membermap_membertype_level>=2;
END;
$$;


--
-- Name: award_dup(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dup(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period,period.award_period_memberinfo_id,award_type
  ,get_config_award(award_type,sum(period.award_period_currency)),award_sum_type
	from epmms_award_period as period
    where period.award_period_period=award_period
    and period.award_period_sum_type=award_sum_type
    and period.award_period_currency>0
	group by period.award_period_memberinfo_id
    having sum(period.award_period_currency)>0;
END;
$$;


--
-- Name: award_dup3000_dot(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dup3000_dot(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type
	,get_award_value(award_type),award_sum_type
	from epmms_membermap as p,epmms_membermap as my,epmms_finance as award
	where
    award.finance_award>=3000
    and award.finance_type=3
    and my.membermap_id=award.finance_memberinfo_id
	and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer<=10;
    update epmms_finance set finance_award=0 where finance_award>=3000 and finance_type=3;
END;
$$;


--
-- Name: award_dup7200(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dup7200(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,period.award_period_memberinfo_id,award_type
  ,get_config_award(award_type,sum(period.award_period_currency))
	from epmms_award_period as period,epmms_award_type as atype
  where period.award_period_period=award_period and period.award_period_currency>0
  and atype.award_type_id=period.award_period_type_id and atype.award_type_sum_type=award_sum_type
	group by period.award_period_memberinfo_id;
    perform reg7200(award_type,award_period);
END;
$$;


--
-- Name: award_dup_1000(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dup_1000(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period,period.award_period_memberinfo_id,award_type
  ,get_config_award(award_type,sum(period.award_period_currency)),award_sum_type
	from epmms_award_period as period,epmms_award_total as total
  where period.award_period_period=award_period and period.award_period_currency>0
  and period.award_period_sum_type=award_sum_type
  and total.award_total_memberinfo_id=period.award_period_memberinfo_id
  and total.award_total_sum_type=period.award_period_sum_type
  and total.award_total_currency>=1000
	group by period.award_period_memberinfo_id;
    --正的奖金
   insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period,period.award_period_memberinfo_id,90
  ,abs(get_config_award(award_type,sum(period.award_period_currency))),2
	from epmms_award_period as period,epmms_award_total as total
  where period.award_period_period=award_period and period.award_period_currency>0
  and period.award_period_sum_type=award_sum_type
  and total.award_total_memberinfo_id=period.award_period_memberinfo_id
  and total.award_total_sum_type=period.award_period_sum_type
  and total.award_total_currency>=1000
	group by period.award_period_memberinfo_id;
END;
$$;


--
-- Name: award_dup_3000_layer(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dup_3000_layer(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    member RECORD;
BEGIN
    while (select count(*) from epmms_finance where finance_type=3 and finance_award>=3000)>0 loop
        insert into epmms_award_period(award_period_period
        ,award_period_memberinfo_id,award_period_type_id
        ,award_period_currency,award_period_sum_type)
        select award_period,p.membermap_id,award_type
        ,get_award_value(award_type),award_sum_type
        from epmms_membermap as p,epmms_membermap as my,epmms_finance as award
        where
        award.finance_award>=3000
        and award.finance_type=3
        and my.membermap_id=award.finance_memberinfo_id
        and my.membermap_path like p.membermap_path || '/%'
        and my.membermap_layer-p.membermap_layer<=15;
        for member in select * from epmms_finance where finance_type=3 and finance_award>=3000 loop
            --发送奖品
            perform send_message('赠送奖品','恭喜您,你获得了牛樟芝一盒',member.finance_memberinfo_id);
        end loop;
        --更新状态,已发送金额
        update epmms_finance set finance_award=finance_award-3600 where finance_award>=3600 and finance_type=3;
    end loop;

END;
$$;


--
-- Name: award_dup_5000(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dup_5000(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period,period.award_period_memberinfo_id,award_type
  ,get_config_award(award_type,sum(period.award_period_currency)),award_sum_type
	from epmms_award_period as period,epmms_award_type as atype
  where period.award_period_period=award_period and period.award_period_currency>0
  and atype.award_type_id=period.award_period_type_id and atype.award_type_sum_type=award_sum_type
	group by period.award_period_memberinfo_id
    having sum(period.award_period_currency)>5000;
END;
$$;


--
-- Name: award_dup_acc(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dup_acc(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period,period.award_period_memberinfo_id,award_type
  ,get_config_award(award_type,sum(period.award_period_currency)),award_sum_type
	from epmms_award_period as period
    where period.award_period_period=award_period
    and period.award_period_sum_type=award_sum_type
    and period.award_period_currency>0
	group by period.award_period_memberinfo_id
    having sum(period.award_period_currency)>0;
    
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period,period.award_period_memberinfo_id,10
    ,abs(get_config_award(award_type,sum(period.award_period_currency))),2
	from epmms_award_period as period
    where period.award_period_period=award_period
    and period.award_period_sum_type=award_sum_type
    and period.award_period_currency>0
	group by period.award_period_memberinfo_id
    having sum(period.award_period_currency)>0;
END;
$$;


--
-- Name: award_dup_aixin(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dup_aixin(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
    select award_period,period.award_period_memberinfo_id,award_type
    ,sum(period.award_period_currency)*cfg.award_config_currency
    from epmms_award_period as period,epmms_award_config_aixinjijin as cfg,epmms_award_total_sum as total
    where period.award_period_period=award_period and period.award_period_currency>0
    and period.award_period_memberinfo_id=total.award_total_sum_memberinfo_id
    and total.award_total_sum_currency<@cfg.award_config_award_total
    group by period.award_period_memberinfo_id,cfg.award_config_currency;
END;
$$;


--
-- Name: award_dup_award2(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dup_award2(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,period.award_period_memberinfo_id,award_type
  ,get_config_award(award_type,sum(period.award_period_currency))
	from epmms_award_period as period,epmms_award_type as atype
  where period.award_period_period=award_period and period.award_period_currency>0
  and atype.award_type_id=period.award_period_type_id and atype.award_type_sum_type=2
	group by period.award_period_memberinfo_id;
END;
$$;


--
-- Name: award_dup_award3(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dup_award3(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,period.award_period_memberinfo_id,award_type
  ,get_config_award(award_type,sum(period.award_period_currency))
	from epmms_award_period as period,epmms_award_type as atype
  where period.award_period_period=award_period and period.award_period_currency>0
  and atype.award_type_id=period.award_period_type_id and atype.award_type_sum_type=3
	group by period.award_period_memberinfo_id;
END;
$$;


--
-- Name: award_dup_award_3000(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dup_award_3000(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type
	,get_award_value(award_type),award_sum_type
	from epmms_membermap as p,epmms_membermap as my,epmms_finance as award
	where
    award.finance_award>=3000
    and award.finance_type=3
    and my.membermap_id=award.finance_memberinfo_id
	and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer<=15;
    update epmms_system_status set system_status_expenses=system_status_expenses-3000*(select count(*) from epmms_finance where finance_award>=3000 and finance_type=3);
    update epmms_finance set finance_award=finance_award-3000 where finance_award>=3000 and finance_type=3;
END;
$$;


--
-- Name: award_dup_dot(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dup_dot(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,p.membermap_id,award_type
	,cfg.award_money
	from epmms_membermap as p,epmms_membermap as my,epmms_award_config_dup_dot as cfg
	where 
	my.membermap_is_verify=1
	and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and my.membermap_recommend_layer-p.membermap_recommend_layer<=cfg.award_layer
    and p.membermap_recommend_number<@cfg.recommend_count;
END;
$$;


--
-- Name: award_dup_guanhuai(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dup_guanhuai(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,my.membermap_recommend_id,award_type
	,get_config_award(award_type)
	from epmms_membermap as my
	where
	my.membermap_is_verify=1
	and my.membermap_recommend_id is not null;
END;
$$;


--
-- Name: award_dup_once(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dup_once(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period,total.award_total_memberinfo_id,award_type
    ,get_config_award(award_type),award_sum_type
	from epmms_award_total as total
  where not exists(select 1 from epmms_award_period where award_period_memberinfo_id=total.award_total_memberinfo_id and award_period_type_id=award_type)
	group by total.award_total_memberinfo_id
    having sum(total.award_total_currency)>10000;
END;
$$;


--
-- Name: award_dup_sum_type(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_dup_sum_type(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  insert into epmms_award_period(award_period_period
  ,award_period_memberinfo_id,award_period_type_id
  ,award_period_currency,award_period_sum_type)
  select award_period,period.award_period_memberinfo_id,award_type
  ,get_config_award(award_type,sum(period.award_period_currency)),award_sum_type
  from epmms_award_period as period
  where period.award_period_period=award_period and period.award_period_currency>0
  and award_sum_type=period.award_period_sum_type
  group by period.award_period_memberinfo_id;

  insert into epmms_award_period(award_period_period
  ,award_period_memberinfo_id,award_period_type_id
  ,award_period_currency,award_period_sum_type)
  select award_period
  ,period.award_period_memberinfo_id,10
  ,abs(get_config_award(award_type,sum(period.award_period_currency))),2
  from epmms_award_period as period
  where period.award_period_period=award_period and period.award_period_currency>0
  and award_sum_type=period.award_period_sum_type
  group by period.award_period_memberinfo_id;
END;
$$;


--
-- Name: award_fenhong(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period
  ,period.award_period_memberinfo_id
  ,award_type
  ,get_config_award(award_type,my.membermap_money)/count(*) over()
	from epmms_award_period as period,epmms_membermap as my
  where period.award_period_period=award_period
  and my.membermap_id=member_id
  and (select sum(award_total_sum_currency) from epmms_award_total_sum where award_total_sum_memberinfo_id=period.award_period_memberinfo_id)>590000
	group by period.award_period_memberinfo_id;
END;
$$;


--
-- Name: award_fenhong_0805(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_fenhong_0805(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
    award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period
    ,p.membermap_id
    ,award_type
    ,my.membermap_money*0.02/count(*) over(),
    award_sum_type
	from epmms_membermap as my,epmms_membermap as p
    where my.membermap_id=member_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and p.membermap_level<=2;
    
 	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
    award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period
    ,p.membermap_id
    ,award_type
    ,my.membermap_money*0.01/count(*) over(),
    award_sum_type
	from epmms_membermap as my,epmms_membermap as p
    where my.membermap_id=member_id
    and p.membermap_level=3;   
END;
$$;


--
-- Name: award_fenhong_2(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_fenhong_2(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
    award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,get_config_award(award_type),
    award_sum_type
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
  	and my.membermap_recommend_layer-p.membermap_recommend_layer=2;
END;
$$;


--
-- Name: award_fenhong_3(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_fenhong_3(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
    award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,get_config_award(award_type),
    award_sum_type
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
  	and my.membermap_recommend_layer-p.membermap_recommend_layer=3;
END;
$$;


--
-- Name: award_fenhong_4(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_fenhong_4(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
    award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,my.membermap_id,award_type,get_config_award(award_type,my.membermap_money),
    award_sum_type
	from epmms_membermap as my
	where my.membermap_id=member_id
    and (select count(*) from epmms_award_period where award_period_memberinfo_id=member_id
     and award_period_type_id=award_type)<4;
END;
$$;


--
-- Name: award_fenhong_5(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_fenhong_5(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
    award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,get_config_award(award_type),
    award_sum_type
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
  	and my.membermap_recommend_layer-p.membermap_recommend_layer=5;
END;
$$;


--
-- Name: award_fudao(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_fudao(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	award_member record;
BEGIN
/*
如推广奖所述，为A贡献推广奖的每会员记为X，依据注审核会员顺序，第1个为A贡献第n个为A贡献推广奖的会员记为Xn
当Xn也获得推广奖时A可得50元辅导奖。
*/
	for award_member in select award_period_memberinfo_id as member_id from epmms_award_period where award_period_period=award_period and award_period_type_id=20 loop
    	raise notice 'member_id:%',award_member.member_id;
      insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
      select award_period,p.membermap_id,award_type,get_award_value_member(award_type,(select membermap_membertype_level from epmms_membermap where membermap_id=member_id))
      from epmms_membermap as my,epmms_membermap as p
      where my.membermap_id=award_member.member_id 
      and my.membermap_recommend_path ~ ('^' || p.membermap_recommend_path || '/(?:[2-9]|[1-9][0-9]+)$');
      
      insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
      select award_period,p.membermap_id,award_type,get_award_value_member(award_type,(select membermap_membertype_level from epmms_membermap where membermap_id=member_id))
      from epmms_membermap as my,epmms_membermap as p
      where my.membermap_id=award_member.member_id 
      and my.membermap_recommend_path ~ ('^' || p.membermap_recommend_path || '/(?:[2-9]|[1-9][0-9]+)/1$');
    end loop;
END;
$_$;


--
-- Name: award_fuli(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_fuli(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_prize(prize_info,prize_id_id,prize_member_id)
	select cfg.award_config_name,cfg.award_config_id,tid
	from (select sum(award_total_sum_currency) as tmoney ,award_total_sum_memberinfo_id as tid from epmms_award_total_sum group by award_total_sum_memberinfo_id) as total,epmms_award_config_prize as cfg
    where tmoney>=cfg.award_config_total
    and not exists (select * from epmms_prize where prize_id_id=cfg.award_config_id and prize_member_id=tid);
END;
$$;


--
-- Name: award_fuli_upgrade(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_fuli_upgrade(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_prize(prize_info,prize_id_id,prize_member_id)
    select prize.award_config_name,prize.award_config_id,l.membermap_id
    from epmms_award_config_peiyu_upgrade as up,epmms_membermap as l,epmms_award_config_prize as prize
    where up.award_config_member_level is NULL
    and get_l_under_product_count(l.membermap_id)>=up.award_config_number
    and l.membermap_level is null
    and prize.award_config_id=up.award_config_upgrade;
    
    insert into epmms_prize(prize_info,prize_id_id,prize_member_id)
    select prize.award_config_name,prize.award_config_id,l.membermap_id
    from epmms_award_config_peiyu_upgrade as up,epmms_membermap as l,epmms_award_config_prize as prize
    where up.award_config_member_level is not NULL
    and (select count(*) from get_l_membermap(l.membermap_id) where membermap_level>=up.award_config_member_level)>=up.award_config_number
    and l.membermap_level <up.award_config_upgrade;
END;
$$;


--
-- Name: award_ganen(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_ganen(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,p.membermap_id,award_type
	,get_config_award(award_type)
	from epmms_membermap as p
	where p.membermap_membertype_level=5
    order by p.membermap_verify_seq desc
    limit 200;
END;
$$;


--
-- Name: award_ganen2(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_ganen2(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type
	,epmms_get_cap_money(15000,get_config_award(award_type),(select sum(award_total_currency)
    from epmms_award_total where award_total_memberinfo_id=p.membermap_id))
    ,award_sum_type
	from epmms_membermap as p
	where p.membermap_membertype_level=4
    and p.membermap_is_verify=1
    and epmms_get_cap_money(15000,get_config_award(award_type),(select sum(award_total_currency) from epmms_award_total where award_total_memberinfo_id=p.membermap_id))>0;
END;
$$;


--
-- Name: award_gl(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_gl(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type
	,cfg.award_config_currency*period.award_period_currency
    ,award_sum_type
	from epmms_membermap as p,epmms_membermap as my,epmms_award_config_gl as cfg,epmms_award_period as period
	where period.award_period_type_id=106
    and period.award_period_period=award_period
    and my.membermap_id=period.award_period_memberinfo_id
	and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer=cfg.award_config_layer
    and p.membermap_membertype_level=cfg.award_config_member;
END;
$$;


--
-- Name: award_gljt(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_gljt(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,p.membermap_id,award_type
	,cfg.award_config_currency*my.membermap_money
	from epmms_membermap as p,epmms_membermap as my,epmms_award_config_gljt as cfg
	where
	my.membermap_id=member_id
	and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and my.membermap_recommend_layer-p.membermap_recommend_layer=2
    and p.membermap_membertype_level=cfg.award_config_member_type;
END;
$$;


--
-- Name: award_gongpaifenhong(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_gongpaifenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,p.membermap_id,award_type
	,cfg.award_config_currency
	from epmms_membermap as my,epmms_membermap as p,epmms_award_config_gongpai as cfg
	where my.membermap_id=member_id
	and my.membermap_membertype_level=cfg.award_config_new_member
    and p.membermap_verify_seq<my.membermap_verify_seq
    and p.membermap_membertype_level=2
    order by p.membermap_verify_seq desc
    limit 10;
END;
$$;


--
-- Name: award_group(bigint, bigint, bigint, bigint); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_group(group_id bigint DEFAULT 1, member_id bigint DEFAULT 1, award_period bigint DEFAULT 1, award_type bigint DEFAULT 2) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	bond_id integer:=null;
BEGIN
  
  update epmms_groupmap set groupmap_award_count=groupmap_award_count+1,groupmap_award_date=now()
  where
  groupmap_id IN( select groupmap_id from epmms_groupmap where groupmap_group_id=group_id
  and groupmap_award_count<10
	order by groupmap_order asc
  limit 5);
  

  --达到7次不再领奖金
  /*
  update epmms_groupmap set groupmap_is_award=0
  where
  groupmap_id IN( select groupmap_id from epmms_groupmap where groupmap_group_id=group_id
  and groupmap_award_count=7 and groupmap_is_award=1
	order by groupmap_order asc
  limit 5);*/
  
  /*
  --如果有补单，继续领
  bond_id:=(select groupmap_id from epmms_groupmap  where
  groupmap_id =( select membermap_bond_id from epmms_membermap where membermap_id=member_id)
  and groupmap_is_award=0
  and ( select membermap_verify_date from epmms_membermap where membermap_id=member_id)-groupmap_award_date<=interval '72 hours');*/
  /*
  update epmms_groupmap set groupmap_is_award=1
  where groupmap_id=bond_id;
	--补领奖金
  
  if bond_id is not null then
  	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
  	select award_period,award_period_memberinfo_id,award_period_type_id,award_period_currency
     from epmms_award_period,epmms_memberstatus where award_period_memberinfo_id=bond_id
    and award_period_period>=status_award_period and status_id=bond_id and award_period_type_id=award_type;
  end if;
  */
  insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,groupmap_id,award_type,800
	from epmms_groupmap
	where groupmap_group_id=group_id
	order by groupmap_order asc  limit 5;
  /*
  update epmms_groupmap set groupmap_award_period=award_period
  where
  groupmap_id IN( select groupmap_id from epmms_groupmap where groupmap_group_id=group_id
  and groupmap_award_count<=10 and groupmap_is_award=1
	order by groupmap_order asc
  limit 5);
  
  update epmms_memberstatus set status_award_period=award_period
  where
  status_id IN( select groupmap_id from epmms_groupmap where groupmap_group_id=group_id
  and groupmap_award_count<=10 and groupmap_is_award=1
	order by groupmap_order asc
  limit 5);*/
  return;
END;
$$;


--
-- Name: award_group5(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_group5(groupid integer DEFAULT NULL::integer, member_id integer DEFAULT NULL::integer, award_period integer DEFAULT NULL::integer, award_type integer DEFAULT 36) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,groupmap_id,award_type,get_config_award(award_type)
	from epmms_groupmap
	where groupmap_group_id=groupid
    and (select group_count from epmms_group where group_id=groupid)>5
	order by groupmap_order desc  limit 5;
END;
$$;


--
-- Name: award_group7(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_group7(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,pg.membermap_id,award_type,cfg.award_config_currency*my.membermap_money/count(*)over(),award_sum_type
	from epmms_membermap as my,epmms_membermap as p,epmms_membermap as pg,epmms_award_config_group7 as cfg
	where my.membermap_id=member_id and p.membermap_id=my.membermap_recommend_id
    and p.membermap_membertype_level=cfg.award_config_membertype
    and p.membermap_bond_id=pg.membermap_bond_id;
END;
$$;


--
-- Name: award_group_manage(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_group_manage(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,p.membermap_recommend_id,award_type
	,period.award_period_currency
	from epmms_award_period as period,epmms_membermap as p
	where period.award_period_period=award_period and period.award_period_currency>0
    and p.membermap_id=period.award_period_memberinfo_id
	and 36=period.award_period_type_id
    and p.membermap_recommend_id is not null;
END;
$$;


--
-- Name: award_guanai(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_guanai(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type
	,get_config_award(award_type,period.award_period_currency)/count(*) over (partition by my.membermap_id)
    ,award_sum_type
	from epmms_membermap as p,epmms_membermap as my,epmms_award_period as period
	where period.award_period_type_id=106
    and period.award_period_period=award_period
    and my.membermap_id=period.award_period_memberinfo_id
	and p.membermap_path like my.membermap_path || '/%'
    and p.membermap_layer-my.membermap_layer=1;
END;
$$;


--
-- Name: award_guanli(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_guanli(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,p.membermap_id,award_type,cfg.award_config_currency
	from epmms_membermap as my,epmms_membermap as c,epmms_membermap as p,epmms_award_config_guanli as cfg
	where my.membermap_id=member_id 
	and my.membermap_path like c.membermap_path || '%'
    and c.membermap_order=3
	and p.membermap_id=c.membermap_parent_id
    and my.membermap_membertype_level=cfg.award_config_new_member
    and p.membermap_membertype_level=cfg.award_config_award_member
    order by c.membermap_layer desc
    limit 1;
END;
$$;


--
-- Name: award_huikui(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_huikui(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    p_member record;
    member_l record;
    level_i integer;
BEGIN
    if award_calc_type=2 then
      insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
      select award_period,p.membermap_id,award_type,c.award_config_currency,award_sum_type
      from epmms_membermap as my,epmms_membermap as p,epmms_award_config_huikui as c
      where my.membermap_id=member_id and my.membermap_path like p.membermap_path || '/%'
      and my.membermap_layer-p.membermap_layer<=c.award_config_layer
      and my.membermap_level=c.award_config_level;
    end if;
    if award_calc_type=1 then
       for p_member in (select membermap_id,membermap_level from epmms_membermap where membermap_is_verify=1 order by membermap_layer desc)
       loop
           for member_l in (select * from get_upgrade_level(p_member.membermap_id) order by member_level asc)
           loop
               if coalesce(p_member.membermap_level,0)=0 and member_l.member_level>1 then
                  exit;
               end if;
               --raise notice 'member_level:%,member_id:%',member_l.member_level,p_member.membermap_id;
               for level_i in coalesce(p_member.membermap_level,0)+1..member_l.member_level loop
                 if (select finance_award from epmms_finance where finance_memberinfo_id=p_member.membermap_id and finance_type=2)>=
                    (select award_config_money from epmms_award_config_upgrade where award_config_level=level_i)
                 then
                      update epmms_membermap set membermap_level=level_i where membermap_id=p_member.membermap_id;
                      update epmms_finance set finance_award=finance_award-award_config_money from epmms_award_config_upgrade
                      where award_config_level=level_i and finance_memberinfo_id=p_member.membermap_id and finance_type=2;
                      --写入日志
                      insert into epmms_log(log_category,log_source,log_operate,log_target,log_value,log_user,log_status)
                      values  ('finance','電子點數','扣除',id2name(p_member.membermap_id),(select award_config_money from epmms_award_config_upgrade
                      where award_config_level=level_i),id2name(p_member.membermap_id),0);
                      perform epmms_verify_award_group(p_member.membermap_id,nextval('award_period')
                      ,array[1],ARRAY[2],2);
                      /*insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
                      select award_period,p.membermap_id,award_type,c.award_config_currency,award_sum_type
                      from epmms_membermap as my,epmms_membermap as p,epmms_award_config_huikui as c
                      where my.membermap_id=p_member.membermap_id and my.membermap_path like p.membermap_path || '/%'
                      and my.membermap_layer-p.membermap_layer=c.award_config_layer
                      and my.membermap_level=c.award_config_level;*/
                  end if;
                end loop;
           end loop;
       end loop;
    end if;
END;
$$;


--
-- Name: award_huzu(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_huzu(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	tuiguang_id integer=null;
    award_id1 integer=null;
    award_id2 integer=null;
    member_type integer;
BEGIN
/*
如辅导奖所述，当一个会员Xn直推会员时，Xn-1和Xn+1各得30元互助奖
*/
	--取出我的推荐人贡献推广奖的会员a
    select p.membermap_id into tuiguang_id
	from epmms_membermap as my,epmms_membermap as p,epmms_membermap as r
	where my.membermap_id=member_id and r.membermap_id=my.membermap_recommend_id
    and r.membermap_recommend_path ~ ('^' || p.membermap_recommend_path || '/(?:[2-9]|[1-9][0-9]+)$');
    if tuiguang_id is null then
      select p.membermap_id into tuiguang_id
      from epmms_membermap as my,epmms_membermap as p,epmms_membermap as r
      where my.membermap_id=member_id and r.membermap_id=my.membermap_recommend_id
      and r.membermap_recommend_path ~ ('^' || p.membermap_recommend_path || '/(?:[2-9]|[1-9][0-9]+)/1$');
    end if;

    --为a贡献推广奖的所有会员
    if tuiguang_id is not null then
    	with tuiguang_under as
        (
        	select p.membermap_id as under_id,p.membermap_verify_seq as seq
      		from epmms_membermap as my,epmms_membermap as p
      		where my.membermap_id=tuiguang_id
      		and p.membermap_recommend_path ~ ('^' || my.membermap_recommend_path || '/(?:[2-9]|[1-9][0-9]+)$')
      	union
       		select p.membermap_id under_id,p.membermap_verify_seq as seq
      		from epmms_membermap as my,epmms_membermap as p
      		where my.membermap_id=tuiguang_id
      		and p.membermap_recommend_path ~ ('^' || my.membermap_recommend_path || '/(?:[2-9]|[1-9][0-9]+)/1$')
        )
		select under_id1,under_id2 into award_id1 ,award_id2 from (select under_id,lag(under_id) over(order by seq asc) as under_id1,lead(under_id)over(order by seq asc) as under_id2 from tuiguang_under) as aa where under_id=(select membermap_recommend_id from epmms_membermap where membermap_id=member_id);
        raise notice 'tuijian_id:%,award_id1:%,award_id2:%',tuiguang_id,award_id1,award_id2;
        select membermap_membertype_level into member_type from epmms_membermap where membermap_id=member_id;
        if award_id1 is not null then
        	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
            values
            (award_period,award_id1,award_type,get_award_value_member(award_type,member_type));
        end if;
        if award_id2 is not null then
        	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
            values
            (award_period,award_id2,award_type,get_award_value_member(award_type,member_type));
    	end if;
    end if;
END;
$_$;


--
-- Name: award_in2out1(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_in2out1(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,first_value(p.membermap_id)over(order by p.membermap_verify_seq ASC),award_type,get_config_award(award_type,my.membermap_money)
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id
    and my.membermap_verify_seq%2<>0
    and not exists(select * from epmms_award_period where award_period_memberinfo_id=p.membermap_id and award_period_type_id=28)
    limit 1;
END;
$$;


--
-- Name: award_in4out1_b(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_in4out1_b(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
    award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.groupmap_member_id,
    award_type,get_config_award(award_type),award_sum_type
	from epmms_groupmap as my,epmms_groupmap as p
	where my.groupmap_id=member_id
    and my.groupmap_order%4=0
    order by p.groupmap_order asc
    limit 1;
END;
$$;


--
-- Name: award_jifen(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_jifen(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money)*pv()
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id and my.membermap_path like p.membermap_path || '/%';
END;
$$;


--
-- Name: award_layer(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_layer(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE 
	member_award RECORD;
	previous_award numeric(16,2)=0;
BEGIN

	if (select membermap_membertype_level from epmms_membermap where membermap_id=member_id)=4 then
    	return;
    end if;
--超过30层会溢出,所以限制最大30层
	with layer_rank as(
    select p.membermap_id,p.membermap_money,child.membermap_layer
    ,rank() over (partition by p.membermap_id order by child.membermap_layer asc) as rlayer
	from epmms_membermap as my,epmms_membermap as p,epmms_membermap as child
	where my.membermap_id=member_id
	and my.membermap_path like p.membermap_path || '/%'
    and child.membermap_path like p.membermap_path || '/%'
	and child.membermap_membertype_level>=p.membermap_membertype_level
    group by p.membermap_id,child.membermap_layer
    having count(*)=case 
    	when child.membermap_layer-p.membermap_layer<=30 then
        	pow(2,child.membermap_layer-p.membermap_layer)
        else
        	NULL
	end
    order by p.membermap_id,child.membermap_layer)
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
    select award_period,r.membermap_id,award_type,r.membermap_money*cfg.award_config_award_currency
     from layer_rank as r,epmms_award_config_layer as cfg,epmms_membermap as my
    where r.membermap_layer=my.membermap_layer
    and my.membermap_id=member_id
    and cfg.award_config_layer=r.rlayer;
END;
$$;


--
-- Name: FUNCTION award_layer(member_id integer, award_period integer, award_type integer, award_sum_type integer); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION public.award_layer(member_id integer, award_period integer, award_type integer, award_sum_type integer) IS '层奖，下层会员要大于等于本会员的级别';


--
-- Name: award_layer_full(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_layer_full(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,cfg.award_config_type
    ,cfg.award_config_currency,award_sum_type
    from epmms_membermap as p,epmms_award_config_layer_full as cfg
    where
    p.membermap_recommend_number>=cfg.award_config_recommend_number
    and cfg.award_config_count=(select count(*) from epmms_membermap
     where membermap_path like p.membermap_path || '/%' and membermap_layer-p.membermap_layer=cfg.award_config_layer)
    and (select count(*) from epmms_award_period
      where award_period_memberinfo_id=p.membermap_id
       and award_period_type_id=cfg.award_config_type)=0;
     
    /*
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,cfg.award_config_type
    ,cfg.award_config_currency,award_sum_type
	from epmms_membermap as p,membermap_week as my,epmms_membermap as r,epmms_award_config_layer_full as cfg
    where r.membermap_id=member_id
    and p.membermap_id=r.membermap_recommend_id
    and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer=cfg.award_config_layer
    and p.membermap_recommend_number=cfg.award_config_recommend_number
    and cfg.award_config_count=(select count(*) from epmms_membermap
     where membermap_layer=my.membermap_layer and membermap_path like p.membermap_path || '/%');*/
END;
$$;


--
-- Name: award_layer_pair(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_layer_pair(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
    award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,p.membermap_id,award_type,
    get_config_award(award_type,get_layer_pair_money(p.membermap_id,my.membermap_layer)),
    award_sum_type
    from epmms_membermap as my,epmms_membermap as p
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and get_layer_pair_money(p.membermap_id,my.membermap_layer)>0;
END;
$$;


--
-- Name: award_layer_recommend(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_layer_recommend(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,c.award_currency,award_sum_type
	from epmms_membermap as my,epmms_membermap as p,epmms_award_config_layer_recommend_dot as c
	where my.membermap_id=member_id and my.membermap_path like p.membermap_path || '/%'
  	and my.membermap_layer-p.membermap_layer<@c.award_layer
    and p.membermap_recommend_number<@c.award_recommend_count;
END;
$$;


--
-- Name: award_leader(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_leader(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,p.membermap_id,award_type,c.award_config_currency
	from epmms_membermap as my,epmms_membermap as p,epmms_config_award_leader as c
	where my.membermap_id=member_id 
  and my.membermap_path like p.membermap_path || '/%'
  and c.award_config_b_bill@>COALESCE((select sum(membermap_product_count) from epmms_membermap where membermap_path like p.membermap_path || '/2%'),0)::integer
  and my.membermap_membertype_level=c.award_config_new_member_type;
END;
$$;


--
-- Name: award_leader_down(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_leader_down(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
    award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type
	,cfg.award_config_currency*sum(period.award_period_currency),award_sum_type
	from epmms_membermap as p,epmms_membermap as my,epmms_award_config_leader_down as cfg,epmms_award_period as period
	where period.award_period_period=award_period
    and my.membermap_id=period.award_period_memberinfo_id
	and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and my.membermap_recommend_layer-p.membermap_recommend_layer<@cfg.award_config_layer
    and p.membermap_membertype_level=cfg.award_config_member
    group by p.membermap_id,cfg.award_config_currency;
END;
$$;


--
-- Name: award_left_right(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_left_right(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,x.membermap_id,award_type,c.award_config_award_currency*x.membermap_money
	from epmms_membermap as my,epmms_membermap as x,epmms_memberstatus as s,epmms_award_config_layer as c
	where my.membermap_id=member_id
	and my.membermap_path like x.membermap_path || '/%'
	and x.membermap_id=s.status_id
    and x.membermap_membertype_level=c.award_config_type
	and get_l_under_greater_member_count(x.membermap_id)-s.layer_count>0
    and get_l_under_greater_member_count(x.membermap_id)=c.award_config_layer;

	--更新碰数
    
	update epmms_memberstatus as s set layer_count=get_l_under_product_count(x.membermap_id) 
	from epmms_membermap as my,epmms_membermap as x
	where my.membermap_id=member_id
	and my.membermap_path like x.membermap_path || '/%'
	and x.membermap_id=s.status_id
	and get_l_under_greater_member_count(x.membermap_id)-s.layer_count>0;
END;
$$;


--
-- Name: FUNCTION award_left_right(member_id integer, award_period integer, award_type integer, award_sum_type integer); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION public.award_left_right(member_id integer, award_period integer, award_type integer, award_sum_type integer) IS '层奖，下层会员要大于等于本会员的级别';


--
-- Name: award_lingdao(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_lingdao(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	c_member_id integer=null;
BEGIN
	select p.membermap_id into c_member_id
	from epmms_membermap as my,epmms_membermap as c,epmms_membermap as p,epmms_award_config_guanli as cfg
	where my.membermap_id=member_id 
	and my.membermap_path like c.membermap_path || '%'
    and c.membermap_order=3
	and p.membermap_id=c.membermap_parent_id
    and my.membermap_membertype_level=cfg.award_config_new_member
    and p.membermap_membertype_level=cfg.award_config_award_member
    order by c.membermap_layer desc
    limit 1;
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,p.membermap_id,award_type,cfg.award_config_currency
	from epmms_membermap as my,epmms_membermap as c,epmms_membermap as p,epmms_award_config_lingdao as cfg
	where my.membermap_id=c_member_id
	and my.membermap_path like c.membermap_path || '%'
    and c.membermap_order=3
	and p.membermap_id=c.membermap_parent_id
    and my.membermap_membertype_level=cfg.award_config_new_member
    order by c.membermap_layer desc
    limit 1;
END;
$$;


--
-- Name: award_manage(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_manage(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period
  ,period.award_period_memberinfo_id
  ,award_type
  ,-get_topped(sum(period.award_period_currency),-cfg.award_config_currency,-(select sum(award_month_currency) from epmms_award_month where date_trunc('year',award_month_date)=date_trunc('year',current_date) and award_month_memberinfo_id=period.award_period_memberinfo_id and award_month_type_id=award_type))
	from epmms_award_period as period,epmms_award_config as cfg
  where period.award_period_period=award_period
  and cfg.award_config_type_id=award_type
	group by period.award_period_memberinfo_id,cfg.award_config_currency;
END;
$$;


--
-- Name: award_mengxiang(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_mengxiang(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
    award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,period.award_period_memberinfo_id,award_type
    ,-sum(period.award_period_currency)*0.1,award_sum_type
    from epmms_award_period as period
    where period.award_period_period=award_period and period.award_period_currency>0
    and period.award_period_type_id=127
    group by period.award_period_memberinfo_id;
    
    insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
    award_period_type_id,award_period_currency,award_period_sum_type)
    select award_period,period.award_period_memberinfo_id,135
    ,sum(period.award_period_currency)*0.1,2
    from epmms_award_period as period
    where period.award_period_period=award_period and period.award_period_currency>0
    and period.award_period_type_id=127
    group by period.award_period_memberinfo_id;
END;
$$;


--
-- Name: award_month(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_month(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,my.membermap_id,award_type,get_config_award(award_type,sum(award.award_month_currency))
	from epmms_membermap as p,epmms_membermap as my,epmms_award_month as award
	where
    p.membermap_recommend_id=my.membermap_id
    and p.membermap_id=award.award_month_memberinfo_id
    and award.award_month_type_id in (3,53)
    and award.award_month_date < date_trunc('month'::text, now())
    and award.award_month_date >= (date_trunc('month'::text, now()) - '1 months'::interval)
    group by my.membermap_id
    having sum(award.award_month_currency)>0;
END;
$$;


--
-- Name: award_month_fenhong(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_month_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	last_month numeric(16,2)=0;
BEGIN
	--上月营业额
    select sum(membermap_money) into last_month from membermap_month where membermap_is_empty !=1;
    --全球分红奖金
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period
	,membermap_id
	,award_type
	,get_config_award(award_type,last_month)/count(*) over()
	from epmms_membermap
    where membermap_is_verify=1 and membermap_is_empty !=1;
END;
$$;


--
-- Name: FUNCTION award_month_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION public.award_month_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer) IS '新注册会员的2%平均分给所有会员';


--
-- Name: award_org_up(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_org_up(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,p.membermap_id,award_type,get_config_award(award_type,period.award_period_currency)/count(*) over(partition by period.award_period_memberinfo_id)
	from epmms_membermap as p,epmms_award_period as period
	where period.award_period_type_id=31
    and period.award_period_period=award_period
    and p.membermap_recommend_id=period.award_period_memberinfo_id
    and p.membermap_is_verify=1;
END;
$$;


--
-- Name: award_org_up_down(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_org_up_down(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type
	,cfg.award_config_currency*period.award_period_currency
    ,award_sum_type
	from epmms_membermap as p,epmms_membermap as my,epmms_award_config_org_up_down as cfg,epmms_award_period as period
	where period.award_period_type_id=77
    and period.award_period_period=award_period
    and my.membermap_id=period.award_period_memberinfo_id
	and (my.membermap_recommend_path like p.membermap_recommend_path || '/%' or
     p.membermap_recommend_path like my.membermap_recommend_path || '/%')
    and p.membermap_membertype_level=cfg.award_config_membertype
    and my.membermap_recommend_layer-p.membermap_recommend_layer=cfg.award_config_layer;
END;
$$;


--
-- Name: award_pair(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_pair(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
    select award_period,x.membermap_id,award_type,
    (get_l_under_product_count(x.membermap_id)-s.status_pair)*get_bill_money()*c.award_config_currency
    ,award_sum_type
    from epmms_membermap as my,epmms_membermap as x,epmms_memberstatus as s,epmms_award_config_pair_member as c
    where my.membermap_id=member_id
    and my.membermap_path like x.membermap_path || '/%'
    and x.membermap_id=s.status_id
    and get_l_under_product_count(x.membermap_id::integer)-s.status_pair>0
    and c.award_config_membertype=x.membermap_membertype_level;

    --更新碰数
    
    update epmms_memberstatus as s set status_pair=get_l_under_product_count(x.membermap_id) 
    from epmms_membermap as my,epmms_membermap as x
    where my.membermap_id=member_id
    and my.membermap_path like x.membermap_path || '/%'
    and x.membermap_id=s.status_id
    and get_l_under_product_count(x.membermap_id)-s.status_pair>0;
END;
$$;


--
-- Name: award_pair_12(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_pair_12(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
    select award_period,x.membermap_id,award_type,
    public.get_l_pair(x.membermap_id,1,2)*c.award_config_currency
    ,award_sum_type
    from epmms_membermap as my,epmms_membermap as x,epmms_memberstatus as s,epmms_award_config_pair_member as c
    where my.membermap_id=member_id
    and my.membermap_path like x.membermap_path || '/%'
    and x.membermap_id=s.status_id
    and public.get_l_pair(x.membermap_id,1,2)>0
    and c.award_config_membertype=x.membermap_membertype_level;

    --更新碰数
    
    update epmms_memberstatus as s set status_pair=status_pair+public.get_l_pair(x.membermap_id,1,2),status_pair2=status_pair2+public.get_l_pair(x.membermap_id,1,2)*2
    from epmms_membermap as my,epmms_membermap as x
    where my.membermap_id=member_id
    and my.membermap_path like x.membermap_path || '/%'
    and x.membermap_id=s.status_id
    and public.get_l_pair(x.membermap_id,1,2)>0;
    
    --2:1
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
    select award_period,x.membermap_id,award_type,
    public.get_l_pair(x.membermap_id,2,2)*c.award_config_currency
    ,award_sum_type
    from epmms_membermap as my,epmms_membermap as x,epmms_memberstatus as s,epmms_award_config_pair_member as c
    where my.membermap_id=member_id
    and my.membermap_path like x.membermap_path || '/%'
    and x.membermap_id=s.status_id
    and public.get_l_pair(x.membermap_id,2,2)>0
    and c.award_config_membertype=x.membermap_membertype_level;

    --更新碰数
    
    update epmms_memberstatus as s set status_pair=status_pair+public.get_l_pair(x.membermap_id,2,2)*2,status_pair2=status_pair2+public.get_l_pair(x.membermap_id,2,2)
    from epmms_membermap as my,epmms_membermap as x
    where my.membermap_id=member_id
    and my.membermap_path like x.membermap_path || '/%'
    and x.membermap_id=s.status_id
    and public.get_l_pair(x.membermap_id,2,2)>0;
END;
$$;


--
-- Name: award_pair_cap(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_pair_cap(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    award record;
    award_total numeric(16,2):=0;
    income numeric(16,2);
    currency_money numeric(16,2):=0;
BEGIN
    --当天收入10%
    select sum(membermap_money)*0.1 into income from epmms_membermap where membermap_verify_date>=current_date;
    --循环处理获奖记录
    for award in (select x.membermap_id,(get_l_under_product_count(x.membermap_id)-s.status_pair)*10000*c.award_config_currency as award_money
      from epmms_membermap as my,epmms_membermap as x,epmms_memberstatus as s,epmms_award_config_pair_member as c
      where my.membermap_id=member_id
      and my.membermap_path like x.membermap_path || '/%'
      and x.membermap_id=s.status_id
      and get_l_under_product_count(x.membermap_id::integer)-s.status_pair>0
      and c.award_config_membertype=x.membermap_membertype_level) loop
        currency_money:=get_topped(award.award_money,income,award_total);
        if get_topped(award.award_money,income,award_total)>0 then
          insert into epmms_award_period(award_period_period
          ,award_period_memberinfo_id,award_period_type_id
          ,award_period_currency,award_period_sum_type)
          select award_period,award.membermap_id,award_type,
          currency_money,award_sum_type;
          award_total:=award_total+currency_money;
        end if;
    end loop;
    --更新碰数
    
    update epmms_memberstatus as s set status_pair=get_l_under_product_count(x.membermap_id) 
    from epmms_membermap as my,epmms_membermap as x
    where my.membermap_id=member_id
    and my.membermap_path like x.membermap_path || '/%'
    and x.membermap_id=s.status_id
    and get_l_under_product_count(x.membermap_id)-s.status_pair>0;
END;
$$;


--
-- Name: FUNCTION award_pair_cap(member_id integer, award_period integer, award_type integer, award_sum_type integer); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION public.award_pair_cap(member_id integer, award_period integer, award_type integer, award_sum_type integer) IS '对碰,每单10000,公司封面当前收入10%';


--
-- Name: award_pair_charge(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_pair_charge(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
    select award_period,x.membermap_id,award_type,
    (get_l_under_product_count_charge(x.membermap_id)-s.status_pair)*get_bill_money()*c.award_config_currency
    ,award_sum_type
    from epmms_membermap as my,epmms_membermap as x,epmms_memberstatus as s,epmms_award_config_pair_member as c
    where my.membermap_id=member_id
    and my.membermap_path like x.membermap_path || '/%'
    and x.membermap_id=s.status_id
    and get_l_under_product_count_charge(x.membermap_id::integer)-s.status_pair>0
    and c.award_config_membertype=x.membermap_membertype_level;

    --减去用掉的小区充值
    update epmms_finance as s set finance_award=finance_award-(get_l_under_product_count_charge(x.membermap_id)-get_l_under_product_count(x.membermap_id))*get_bill_money()
    from epmms_membermap as my,epmms_membermap as x
    where my.membermap_id=member_id
    and my.membermap_path like x.membermap_path || '/%'
    and x.membermap_id=s.finance_memberinfo_id
    and s.finance_type=3
    and (get_l_under_product_count_charge(x.membermap_id)-get_l_under_product_count(x.membermap_id))>0;

    --更新碰数
    
    update epmms_memberstatus as s set status_pair=get_l_under_product_count(x.membermap_id) 
    from epmms_membermap as my,epmms_membermap as x
    where my.membermap_id=member_id
    and my.membermap_path like x.membermap_path || '/%'
    and x.membermap_id=s.status_id
    and get_l_under_product_count(x.membermap_id)-s.status_pair>0;
END;
$$;


--
-- Name: award_peiyu(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_peiyu(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
/*
推荐下的1到9代每注册一单可得30元培育奖
*/
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,p.membermap_id,award_type,get_award_value_member(award_type,my.membermap_membertype_level)
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id 
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and my.membermap_recommend_layer-p.membermap_recommend_layer<10;
END;
$$;


--
-- Name: award_peiyu_month(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_peiyu_month(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,cfg.award_config_currency*my.membermap_money,award_sum_type
	from epmms_membermap as my,epmms_membermap as p,epmms_award_config_recommend_level as cfg
	where my.membermap_id=member_id 
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and my.membermap_recommend_layer-p.membermap_recommend_layer=cfg.award_config_recommend_layer
    and p.membermap_level=cfg.award_config_level;
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,0.005*my.membermap_money/count(*) over(),award_sum_type
	from epmms_membermap as my,epmms_membermap as p,epmms_award_config_recommend_level as cfg
	where my.membermap_id=member_id 
    and p.membermap_level=4;
END;
$$;


--
-- Name: award_pond(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_pond(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN

	--分配奖池
  update epmms_pond as p set pond_currency=pond_currency+c.pond_assign*m.membermap_money 
  from epmms_config_pond as c,epmms_membermap as m
  where c.pond_no=p.pond_no and m.membermap_id=member_id;
  
  insert into epmms_pond_member_currency("member_id",pond_no)
  select member_id,p.pond_no from epmms_config_pond as p;

END;
$$;


--
-- Name: award_pond_day(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_pond_day(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	cur_weekday integer;
BEGIN

	cur_weekday:=date_part('isodow',now())-1;
  --计算奖池
  insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
  select award_period,x.membermap_id,award_type,get_topped(get_topped(p.pond_currency/count(*) over (),c.pond_period_topped,0),c.pond_all_topped,t.award_total_currency)
  from epmms_membermap as x left join epmms_award_total as t on t.award_total_memberinfo_id=x.membermap_id and t.award_total_type_id=award_type,epmms_pond as p,epmms_config_pond as c
  where x.membermap_is_verify=1
  and get_l_under_product_count(x.membermap_id::integer)<@c.pond_achievement
  and c.pond_no=p.pond_no
  and c.pond_no=cur_weekday;
  
  --统计每奖池奖金累计
  update epmms_pond_member_currency as cu set all_topped=all_topped+award_period_currency from epmms_award_period as p
  where cu.member_id=p.award_period_memberinfo_id and cu.pond_no=cur_weekday and p.award_period_type_id=award_type;

	--出局
  update epmms_membermap as m set membermap_level=1 from epmms_pond_member_currency as cu,epmms_config_pond as p
  where m.membermap_id=cu.member_id and cu.pond_no=5
  and cu.all_topped>=p.pond_all_topped and p.pond_no=cu.pond_no and m.membermap_level is null;
  --董事升级
  update epmms_membermap as m set membermap_level=dir.director_level
  from epmms_membermap as map,epmms_director as dir
  where 
  (select count(*) from epmms_membermap where membermap_recommend_id=m.membermap_id and membermap_level=1)=dir.director_recommend_count
  and dir.director_level>m.membermap_level;

  --当前奖池出库
  update epmms_pond set pond_currency=pond_currency-COALESCE((select sum(award_period_currency) from epmms_award_period where award_period_type_id=award_type),0) where pond_no=cur_weekday;
END;
$$;


--
-- Name: award_quarter(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_quarter(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,my.membermap_id,award_type,get_config_award(award_type,sum(award.award_month_currency))
	from epmms_membermap as p,epmms_membermap as my,epmms_award_month as award
	where
    p.membermap_recommend_id=my.membermap_id
    and p.membermap_id=award.award_month_memberinfo_id
    and award.award_month_type_id in (3,53)
    and award.award_month_date < date_trunc('quarter'::text, now())
    and award.award_month_date >= (date_trunc('quarter'::text, now()) - '3 months'::interval)
    group by my.membermap_id
    having sum(award.award_month_currency)>0;
END;
$$;


--
-- Name: award_recommend(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_recommend(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money)*pv(),award_sum_type
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id and p.membermap_id=my.membermap_recommend_id;
END;
$$;


--
-- Name: award_recommend_2(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_recommend_2(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
BEGIN
/*
A推荐的第1个会员记为A1，第n个会员记为An，A1推荐的第1个会员记为A1B1
A推荐的第2及2个以后的会员记为A2.n
有A推荐的第2到到n个会员A2.n，A可得200元推广奖；
每个A2.n推荐的第一个会员AnB1，A继续得200元推广奖，如此每个会员都依次计算可得相应的推广奖。
*/
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,p.membermap_id,award_type,get_award_value_member(award_type,my.membermap_membertype_level)
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id and p.membermap_id=my.membermap_recommend_id
    and p.membermap_recommend_number>=2;
    
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,p.membermap_id,award_type,get_award_value_member(award_type,my.membermap_membertype_level)
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id 
    and my.membermap_recommend_path ~ ('^' || p.membermap_recommend_path || '/(?:[2-9]|[1-9][0-9]+)/1$');
END;
$_$;


--
-- Name: award_recommend_bill(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_recommend_bill(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
    award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,
    get_award_value_member(award_type,my.membermap_membertype_level),
    award_sum_type
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id and p.membermap_id=my.membermap_recommend_id;
END;
$$;


--
-- Name: award_recommend_layer(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_recommend_layer(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,p.membermap_id,award_type
    ,cfg.award_config_currency
	from epmms_membermap as p,epmms_membermap as my,epmms_award_config_recommend_layer as cfg
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer<@cfg.award_config_recommend_layer;
END;
$$;


--
-- Name: award_recommend_layer_dot(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_recommend_layer_dot(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,
    award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type
    ,cfg.award_config_currency,award_sum_type
	from epmms_membermap as p,epmms_membermap as my,epmms_award_config_recommend_layer_dot as cfg
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and my.membermap_layer-p.membermap_layer<@cfg.award_config_layer
    and p.membermap_recommend_number<@cfg.award_config_recommend
    and my.membermap_membertype_level=cfg.award_config_new_member
    and not exists(select * from epmms_award_period where award_period_period=award_period
    and award_period_memberinfo_id=p.membermap_id and award_period_type_id=145);
END;
$$;


--
-- Name: award_recommend_membertype(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_recommend_membertype(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,cfg.award_config_currency*my.membermap_money,award_sum_type
	from epmms_membermap as my,epmms_membermap as p,epmms_award_config_recommend as cfg
	where my.membermap_id=member_id and p.membermap_id=my.membermap_recommend_id
    and p.membermap_membertype_level=cfg.award_config_membertype;
END;
$$;


--
-- Name: award_recommend_membertype_2(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_recommend_membertype_2(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,cfg.award_config_currency*my.membermap_money,award_sum_type
	from epmms_membermap as my,epmms_membermap as p,epmms_award_config_recommend as cfg
	where my.membermap_id=member_id
    and p.membermap_membertype_level=cfg.award_config_membertype
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and my.membermap_recommend_layer-p.membermap_recommend_layer=2;
END;
$$;


--
-- Name: award_rich(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_rich(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,p.membermap_id,award_type,get_config_award(award_type,my.membermap_money)
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id 
  and my.membermap_path like p.membermap_path || '/2%'
  and get_suffix(my.membermap_path,p.membermap_path || '/2') not like '%2%';
END;
$$;


--
-- Name: award_send_award(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_send_award(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    member RECORD;
BEGIN
    while (select count(*) from epmms_finance where finance_type=3 and finance_award>=3200)>0 loop
      for member in select * from epmms_finance where finance_type=3 and finance_award>=3200 loop
        --发送奖品
        perform send_message('赠送点位','恭喜您,你获得了一个点位资格',member.finance_memberinfo_id);
      end loop;
      --更新状态,已发送金额
      update epmms_finance set finance_award=finance_award-3200 where finance_award>=3200 and finance_type=3;
    end loop;
END;
$$;


--
-- Name: award_static_fenhong(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_static_fenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period
  ,my.membermap_id
  ,award_type
  ,get_config_award(award_type,my.membermap_money)
	from epmms_membermap as my
  where (select sum(s.award_total_sum_currency) from epmms_award_total_sum as s where award_total_sum_memberinfo_id=my.membermap_id)<my.membermap_money*2;
END;
$$;


--
-- Name: award_student(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_student(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id
    ,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type,cfg.award_config_currency,award_sum_type
	from epmms_membermap as my,epmms_membermap as p,epmms_award_config_award_student as cfg
	where my.membermap_id=member_id and my.membermap_path like p.membermap_path || '/%'
  	and my.membermap_layer-p.membermap_layer<@cfg.award_config_layer
    and p.membermap_recommend_number<@cfg.award_config_recommend
    and p.membermap_is_active=1
    and coalesce(((select count(*) from epmms_membermap where membermap_layer-p.membermap_layer<@cfg.award_config_condition and membermap_is_verify=1)
            =2^upper(cfg.award_config_condition)-2^lower(cfg.award_config_condition))=cfg.award_config_is_condition,true);
    
    --2^upper(cfg.award_config_condition)-2^lower(cfg.award_config_condition)用来计算lower到upper层的人数
    
    --出局计算
    update epmms_membermap set membermap_is_active=0
     from epmms_award_total,epmms_award_config_student_out where award_total_memberinfo_id=membermap_id 
     and award_total_type_id=award_type and award_total_sum_type=award_sum_type
     and award_total_currency>=award_config_out_currency
     and membermap_recommend_number<@award_config_recommend
     and membermap_is_active=1;
END;
$$;


--
-- Name: award_up(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_up(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type
	,cfg.award_config_currency*period.award_period_currency
    ,award_sum_type
	from epmms_membermap as p,epmms_membermap as my,epmms_award_config_up as cfg,epmms_award_period as period
	where period.award_period_type_id=137
    and period.award_period_period=award_period
    and my.membermap_id=period.award_period_memberinfo_id
    and p.membermap_membertype_level=cfg.award_config_award_member
    and my.membermap_layer-p.membermap_layer=cfg.award_config_layer
    and my.membermap_path like p.membermap_path || '/%';
END;
$$;


--
-- Name: award_up_down(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_up_down(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type
	,cfg.award_config_currency*period.award_period_currency
    ,award_sum_type
	from epmms_membermap as p,epmms_membermap as my,epmms_award_config_org_up_down as cfg,epmms_award_period as period
	where period.award_period_type_id=91
    and period.award_period_period=award_period
    and my.membermap_id=period.award_period_memberinfo_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and p.membermap_membertype_level=cfg.award_config_membertype
    and my.membermap_recommend_layer-p.membermap_recommend_layer=cfg.award_config_layer;
END;
$$;


--
-- Name: award_up_down_recommend(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_up_down_recommend(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
	select award_period,p.membermap_id,award_type
	,cfg.award_config_currency*period.award_period_currency
    ,award_sum_type
	from epmms_membermap as p,epmms_membermap as my,epmms_award_config_org_up_down as cfg,epmms_award_period as period
	where period.award_period_type_id=145
    and period.award_period_period=award_period
    and my.membermap_id=period.award_period_memberinfo_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and p.membermap_membertype_level=cfg.award_config_membertype
    and my.membermap_recommend_layer-p.membermap_recommend_layer=cfg.award_config_layer;
END;
$$;


--
-- Name: award_week(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_week(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,my.membermap_id,award_type,get_config_award(award_type,sum(award.award_week_currency))
	from epmms_membermap as p,epmms_membermap as my,epmms_award_week as award
	where
    p.membermap_recommend_id=my.membermap_id
    and p.membermap_id=award.award_week_memberinfo_id
    and award.award_week_type_id in (3,53)
    and award.award_week_date < date_trunc('week'::text, now())
    and award.award_week_date >= (date_trunc('week'::text, now()) - '1 weeks'::interval)
    group by my.membermap_id
    having sum(award.award_week_currency)>0;
END;
$$;


--
-- Name: award_week_dongshi(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_week_dongshi(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
	select award_period,my.membermap_id,award_type,get_config_award(award_type,sum(p.membermap_money)),award_sum_type
	from membermap_week as p,epmms_membermap as my
	where
    p.membermap_recommend_id=my.membermap_id
    and my.membermap_level=5
    group by my.membermap_id
    having sum(p.membermap_money)>0;
END;
$$;


--
-- Name: award_wuliu(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_wuliu(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,period.award_period_memberinfo_id,award_type
  ,get_config_award(award_type,sum(period.award_period_currency))
	from epmms_award_period as period,epmms_award_type as atype
  where period.award_period_period=award_period and period.award_period_currency>0
  and period.award_period_type_id in(19,36,37)
  group by period.award_period_memberinfo_id;
END;
$$;


--
-- Name: award_xingyun10(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_xingyun10(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	gongpai record;
BEGIN
	for gongpai in (select award_period_memberinfo_id,award_period_currency from epmms_award_period where award_period_type_id=106 and award_period_period=award_period) loop
    	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency,award_period_sum_type)
    	select award_period,p.membermap_id,award_type
    	,get_config_award(award_type,gongpai.award_period_currency),award_sum_type
    	from epmms_membermap as my,epmms_membermap as p
    	where my.membermap_id=gongpai.award_period_memberinfo_id
     	and p.membermap_verify_seq>my.membermap_verify_seq
    	order by p.membermap_verify_seq asc
    	limit 10;
     end loop;
END;
$$;


--
-- Name: award_xingyunfenhong(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_xingyunfenhong(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	gongpai record;
BEGIN
	for gongpai in (select g.membermap_id from epmms_membermap as g,epmms_membermap as my where my.membermap_id=member_id
    		and my.membermap_recommend_path like g.membermap_recommend_path || '/%'
            and my.membermap_recommend_layer-g.membermap_recommend_layer<=6 order by g.membermap_verify_seq desc limit 60) loop
    	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
    	select award_period,p.membermap_id,award_type
    	,get_award_value(award_type)
    	from epmms_membermap as my,epmms_membermap as p
    	where my.membermap_id=gongpai.membermap_id
     	and p.membermap_verify_seq<my.membermap_verify_seq
    	and p.membermap_membertype_level=2
    	order by p.membermap_verify_seq desc
    	limit 10;
     end loop;
END;
$$;


--
-- Name: award_year(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_year(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period,my.membermap_id,award_type,get_config_award(award_type,sum(award.award_year_currency))
	from epmms_membermap as p,epmms_membermap as my,epmms_award_year as award
	where
    p.membermap_recommend_id=my.membermap_id
    and p.membermap_id=award.award_year_memberinfo_id
    and award.award_year_type_id in (3,53)
    and award.award_year_date < date_trunc('year'::text, now())
    and award.award_year_date >= (date_trunc('year'::text, now()) - '1 years'::interval)
    group by my.membermap_id
    having sum(award.award_year_currency)>0;
END;
$$;


--
-- Name: award_yeji(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_yeji(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
    select award_period,x.membermap_id,award_type,
    period.award_period_currency*cfg.award_config_currency,award_sum_type
    from epmms_award_period as period,epmms_membermap as x,epmms_membermap as p,epmms_award_config_yeji as cfg
    where period.award_period_add_date<date_trunc('month'::text, now()) and period.award_period_add_date>=(date_trunc('month'::text, now()) - '1 mon'::interval)
    and period.award_period_type_id=154
    and period.award_period_memberinfo_id=x.membermap_id
    and x.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and p.membermap_membertype_level=cfg.award_config_member
    and x.membermap_recommend_layer-p.membermap_recommend_layer<=cfg.award_config_layer
    and p.membermap_verify_date + (cfg.award_config_free_date || ' months')::interval<=now();
    
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
    select award_period,x.membermap_id,award_type,period.award_period_currency*cfg.award_config_currency,award_sum_type
    from epmms_award_period as period,epmms_membermap as x,epmms_membermap as p,epmms_award_config_yeji as cfg,epmms_memberstatus as s
    where period.award_period_add_date<date_trunc('month'::text, now()) and period.award_period_add_date>=(date_trunc('month'::text, now()) - '1 mon'::interval)
    and period.award_period_type_id=154
    and period.award_period_memberinfo_id=x.membermap_id
    and x.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and p.membermap_membertype_level=cfg.award_config_member
    and x.membermap_recommend_layer-p.membermap_recommend_layer<=cfg.award_config_layer
    and p.membermap_verify_date + (cfg.award_config_free_date || ' months')::interval>now()
    and s.status_id=p.membermap_id and s.month_little_product_count>=cfg.award_config_yeji;    
END;
$$;


--
-- Name: award_zhengzhi(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_zhengzhi(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_award_period(award_period_period
    ,award_period_memberinfo_id,award_period_type_id
    ,award_period_currency,award_period_sum_type)
    select award_period,x.membermap_id,award_type,
    (iif(s.left_product_count>=s.right_product_count,s.left_product_count,s.right_product_count)-s.status_pair)*get_bill_money()*c.award_config_currency
    ,award_sum_type
    from epmms_membermap as my,epmms_membermap as x,epmms_memberstatus as s,epmms_award_config_pair_member as c
    where my.membermap_id=member_id
    and my.membermap_path like x.membermap_path || '/%'
    and x.membermap_id=s.status_id
    and iif(s.left_product_count>=s.right_product_count,s.left_product_count,s.right_product_count)-s.status_pair>0
    and c.award_config_membertype=x.membermap_membertype_level;

    --更新碰数
    
    update epmms_memberstatus as s set status_pair=iif(s.left_product_count>=s.right_product_count,s.left_product_count,s.right_product_count)
    from epmms_membermap as my,epmms_membermap as x
    where my.membermap_id=member_id
    and my.membermap_path like x.membermap_path || '/%'
    and x.membermap_id=s.status_id
    and iif(s.left_product_count>=s.right_product_count,s.left_product_count,s.right_product_count)-s.status_pair>0;
    
    --消除差值
    update epmms_memberstatus as s set left_product_count=iif(s.left_product_count>=s.right_product_count,s.right_product_count+cfg.award_config_diff,s.left_product_count),
    right_product_count=iif(s.right_product_count>=s.right_product_count,s.left_product_count+cfg.award_config_diff,s.right_product_count)
    from epmms_membermap as x,epmms_award_config_pair_member as cfg,epmms_membermap as my
    where x.membermap_membertype_level=cfg.award_config_membertype
    and my.membermap_path like x.membermap_path || '/%'
    and iif(s.left_product_count>=s.right_product_count,s.left_product_count,s.right_product_count)>cfg.award_config_diff;
END;
$$;


--
-- Name: award_zongjian(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.award_zongjian(member_id integer, award_period integer, award_type integer, award_sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    --奖金
	insert into epmms_award_period(award_period_period,award_period_memberinfo_id,award_period_type_id,award_period_currency)
	select award_period
	,p.membermap_id
	,award_type
	,get_config_award(award_type,my.membermap_money)*pv()
	from epmms_membermap as my,epmms_membermap as p
	where my.membermap_id=member_id
	and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
	and p.membermap_level=1
    order by p.membermap_recommend_layer desc
    limit 1;
END;
$$;


--
-- Name: FUNCTION award_zongjian(member_id integer, award_period integer, award_type integer, award_sum_type integer); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION public.award_zongjian(member_id integer, award_period integer, award_type integer, award_sum_type integer) IS '公司分红';


--
-- Name: create_upper_member(integer, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.create_upper_member(my_layer integer, my_path text) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  --drop table if exists upper_member;
  create temp table upper_member ON COMMIT drop as select membermap_id,membermap_layer,membermap_path,membermap_membertype_level,membermap_is_active from get_upper_member2(my_layer,my_path);
END;
$$;


--
-- Name: custom_calc(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.custom_calc(custom_days integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    if (current_date-custom_day_first(custom_days))%custom_days=0 then
       perform epmms_verify_award_date(null,NULL,'{2}','{1}',20,custom_days);
    end if;
END;
$$;


--
-- Name: custom_day_first(integer, date); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.custom_day_first(custom_days integer, custom_date date DEFAULT ('now'::text)::date) RETURNS date
    LANGUAGE plpgsql STABLE
    AS $$
DECLARE
    base_date date;
    all_days integer;
    trunc_day integer;
BEGIN
    base_date:=(select system_status_start_date from epmms_system_status limit 1);
    all_days:=custom_date-base_date;
    trunc_day:=all_days/custom_days;
    return base_date+trunc_day*custom_days;
END;
$$;


--
-- Name: day_calc(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.day_calc() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    perform epmms_verify_award_date(null,NULL,1,1,10);
END;
$$;


--
-- Name: epmms_award_day_award_sum_ins_tr(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_day_award_sum_ins_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
	exist BIGINT default 0;
BEGIN
  new.award_day_date:=date_trunc('day',new.award_day_date);


  select count(*) into exist from epmms_award_day 
  where award_day_memberinfo_id=NEW.award_day_memberinfo_id
  and award_day_date=new.award_day_date
  and award_day_type_id=new.award_day_type_id
  and award_day_sum_type=NEW.award_day_sum_type;

  if exist>0 then
    --RAISE EXCEPTION 'debug total_currency:%',epmms_get_cap_money(cap_money,NEW.award_day_currency,0);  
  
  	update epmms_award_day
    set award_day_currency=award_day_currency+NEW.award_day_currency
    where award_day_memberinfo_id=new.award_day_memberinfo_id
    and award_day_date=new.award_day_date
    and award_day_type_id=new.award_day_type_id
    and award_day_sum_type=NEW.award_day_sum_type;
    return null;
  end if;

  return new;
END;
$$;


--
-- Name: epmms_award_day_award_sum_total_after_tr(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_day_award_sum_total_after_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
	award_currency money;
BEGIN
  --日奖金汇总
  if TG_OP='UPDATE' then
  	award_currency:=new.award_day_currency-OLD.award_day_currency;
  else
  	award_currency:=new.award_day_currency;
  end if;
  --RAISE NOTICE 'award_money:%',award_currency;
  
  insert into epmms_award_week(award_week_memberinfo_id,award_week_currency
  ,award_week_type_id,award_week_date,award_week_sum_type) values (
  new.award_day_memberinfo_id,award_currency
  ,new.award_day_type_id,new.award_day_date,new.award_day_sum_type);
  return null;
END;
$$;


--
-- Name: epmms_award_day_sum_all_replace(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_day_sum_all_replace() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    exist BIGINT default 0;
BEGIN
  new.award_day_sum_date:=date_trunc('day',new.award_day_sum_date);
  select count(*) into exist from epmms_award_day_sum_all
  where award_day_sum_memberinfo_id=NEW.award_day_sum_memberinfo_id
  and award_day_sum_date=new.award_day_sum_date;
  if exist>0 then
      update epmms_award_day_sum_all
    set award_day_sum_currency=award_day_sum_currency+NEW.award_day_sum_currency
    where award_day_sum_memberinfo_id=NEW.award_day_sum_memberinfo_id
    and award_day_sum_date=new.award_day_sum_date;
    return null;
  end if;
  return new;
END;
$$;


--
-- Name: epmms_award_day_sum_ins_sum_after_tr(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_day_sum_ins_sum_after_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
	award_currency numeric(16,2);
BEGIN
  if TG_OP='UPDATE' then
  	award_currency:=new.award_day_sum_currency-OLD.award_day_sum_currency;
  else
  	award_currency:=new.award_day_sum_currency;
  end if;
  insert into epmms_award_week_sum(award_week_sum_memberinfo_id,award_week_sum_currency
  ,award_week_sum_type,award_week_sum_date) values (
  new.award_day_sum_memberinfo_id,award_currency
  ,new.award_day_sum_type,new.award_day_sum_date);
  insert into epmms_award_day_sum_all(award_day_sum_memberinfo_id,award_day_sum_currency,award_day_sum_date) values (
  new.award_day_sum_memberinfo_id,award_currency,new.award_day_sum_date);
  insert into epmms_award_week_sum_all(award_week_sum_memberinfo_id,award_week_sum_currency,award_week_sum_date) values (
  new.award_day_sum_memberinfo_id,award_currency,date_trunc('week',new.award_day_sum_date));
  insert into epmms_award_month_sum_all(award_month_sum_memberinfo_id,award_month_sum_currency,award_month_sum_date) values (
  new.award_day_sum_memberinfo_id,award_currency,date_trunc('month',new.award_day_sum_date));
  return null;
END;
$$;


--
-- Name: epmms_award_day_sum_ins_sum_tr(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_day_sum_ins_sum_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
	exist BIGINT default 0;
BEGIN
  new.award_day_sum_date:=date_trunc('day',new.award_day_sum_date);
  
  select count(*) into exist from epmms_award_day_sum 
  where award_day_sum_memberinfo_id=NEW.award_day_sum_memberinfo_id
  and award_day_sum_date=new.award_day_sum_date
  and award_day_sum_type=new.award_day_sum_type;
  if exist>0 then
  	update epmms_award_day_sum 
    set award_day_sum_currency=award_day_sum_currency+NEW.award_day_sum_currency
    where award_day_sum_memberinfo_id=NEW.award_day_sum_memberinfo_id
    and award_day_sum_date=new.award_day_sum_date
    and award_day_sum_type=new.award_day_sum_type;
    return null;
  end if;
  return new;
END;
$$;


--
-- Name: epmms_award_month_award_sum_ins_tr(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_month_award_sum_ins_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
	exist BIGINT default 0;
BEGIN
  new.award_month_date:=date_trunc('month',new.award_month_date);

  select count(*) into exist from epmms_award_month 
  where award_month_memberinfo_id=NEW.award_month_memberinfo_id
  and award_month_date=new.award_month_date
  and award_month_type_id=new.award_month_type_id
  and award_month_sum_type=new.award_month_sum_type;
  if exist>0 then
  	update epmms_award_month
    set award_month_currency=award_month_currency+NEW.award_month_currency
    where award_month_memberinfo_id=NEW.award_month_memberinfo_id
    and award_month_date=new.award_month_date
    and award_month_type_id=new.award_month_type_id
    and award_month_sum_type=new.award_month_sum_type;
    return null;
  end if;
  return new;
END;
$$;


--
-- Name: epmms_award_month_award_total_sum_after_tr(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_month_award_total_sum_after_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
	award_currency numeric(16,2);
BEGIN
  --月奖金汇总
  if TG_OP='UPDATE' then
  	award_currency:=new.award_month_currency-OLD.award_month_currency;
  else
  	award_currency:=new.award_month_currency;
  end if;
  
  insert into epmms_award_year(award_year_memberinfo_id,award_year_currency
  ,award_year_type_id,award_year_date,award_year_sum_type) values (
  new.award_month_memberinfo_id,award_currency
  ,new.award_month_type_id,new.award_month_date,NEW.award_month_sum_type);

  return null;
END;
$$;


--
-- Name: epmms_award_month_sum_all_tr_replace(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_month_sum_all_tr_replace() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    exist BIGINT default 0;
BEGIN
  new.award_month_sum_date:=date_trunc('month',new.award_month_sum_date);
  select count(*) into exist from epmms_award_month_sum_all
  where award_month_sum_memberinfo_id=NEW.award_month_sum_memberinfo_id
  and award_month_sum_date=new.award_month_sum_date;
  if exist>0 then
    update epmms_award_month_sum_all
    set award_month_sum_currency=award_month_sum_currency+NEW.award_month_sum_currency
    where award_month_sum_memberinfo_id=NEW.award_month_sum_memberinfo_id
    and award_month_sum_date=new.award_month_sum_date;
    return null;
  end if;
  return new;
END;
$$;


--
-- Name: epmms_award_month_sum_ins_sum_tr(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_month_sum_ins_sum_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
	exist BIGINT default 0;
BEGIN
  new.award_month_sum_date:=date_trunc('month',new.award_month_sum_date);
  select count(*) into exist from epmms_award_month_sum 
  where award_month_sum_memberinfo_id=NEW.award_month_sum_memberinfo_id
  and award_month_sum_date=new.award_month_sum_date
  and award_month_sum_type=new.award_month_sum_type;
  if exist>0 then
  	update epmms_award_month_sum 
    set award_month_sum_currency=award_month_sum_currency+NEW.award_month_sum_currency
    where award_month_sum_memberinfo_id=NEW.award_month_sum_memberinfo_id
    and award_month_sum_date=new.award_month_sum_date
    and award_month_sum_type=new.award_month_sum_type;
    return null;
  end if;
  return new;
END;
$$;


--
-- Name: epmms_award_month_sum_total_sum_after_tr(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_month_sum_total_sum_after_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
	award_currency numeric(16,2);
BEGIN
  --月汇总
  if TG_OP='UPDATE' then
  	award_currency:=new.award_month_sum_currency-OLD.award_month_sum_currency;
  else
  	award_currency:=new.award_month_sum_currency;
  end if;  
  insert into epmms_award_year_sum(award_year_sum_memberinfo_id,award_year_sum_currency
  ,award_year_sum_type,award_year_sum_date) values (
  new.award_month_sum_memberinfo_id,award_currency
  ,new.award_month_sum_type,new.award_month_sum_date);
  return null;
END;
$$;


--
-- Name: epmms_award_period_date_type_sum_tr(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_period_date_type_sum_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
	award_currency numeric(16,2);
BEGIN
    --日汇总
  if TG_OP='UPDATE' then
  	award_currency:=new.award_period_currency-old.award_period_currency;
  else
  	award_currency:=new.award_period_currency;
  end if;
  insert into epmms_award_day(award_day_date,award_day_memberinfo_id
  ,award_day_currency,award_day_type_id,award_day_sum_type) values (
  new.award_period_add_date,new.award_period_memberinfo_id
  ,award_currency,new.award_period_type_id,new.award_period_sum_type);
  return null;
END;
$$;


--
-- Name: epmms_award_period_log_fun(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_period_log_fun() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_log(log_category,log_source,log_operate,log_target,log_value,log_user,log_status)
  values
  ('finance','奖金','结算',id2name(new.award_period_memberinfo_id),NEW.award_period_currency,id2name(new.award_period_memberinfo_id),0);
	return new;
END;
$$;


--
-- Name: epmms_award_period_sum_log_tr_fun(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_period_sum_log_tr_fun() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_log(log_category,log_source,log_operate,log_target,log_value,log_user,log_status)
  values
  ('finance','奖金','结算',id2name(new.award_period_sum_memberinfo_id),NEW.award_period_sum_currency,id2name(new.award_period_sum_memberinfo_id),0);
  return new;
END;
$$;


--
-- Name: epmms_award_period_sum_sum_award_after_tr(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_period_sum_sum_award_after_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
	award_currency money;
BEGIN
  --每期汇总
  if TG_OP='UPDATE' then
  	award_currency:=new.award_period_sum_currency-OLD.award_period_sum_currency;
  else
  	award_currency:=new.award_period_sum_currency;
  end if;
  insert into epmms_award_day_sum(award_day_sum_memberinfo_id,award_day_sum_currency
    ,award_day_sum_type,award_day_sum_date) values (
    new.award_period_sum_memberinfo_id,award_currency
    ,new.award_period_sum_type,new.award_period_sum_add_date);
  return null;
END;
$$;


--
-- Name: epmms_award_period_sum_tr_ins(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_period_sum_tr_ins() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
  	cap_money numeric(16,4) default null;
    cap_sum record;
    cap_member_sum record;
BEGIN
  --每期汇总
    cap_money:=new.award_period_sum_currency;
    --对汇总进行封顶(按会员类型)
    for cap_member_sum in (select cap_member_type_id,cap_member_sum_type,cap_member_date_type,cap_member_money
     from epmms_cap_member_sum where 
     (select membermap_membertype_level from epmms_membermap where membermap_id=new.award_period_sum_memberinfo_id)=cap_member_type_id 
     order by cap_member_id asc)
    loop
        case cap_member_sum.cap_member_date_type
        when 'period' then
          select epmms_get_cap_money(cap_member_sum.cap_member_money,cap_money,COALESCE(sum(award_period_sum_currency),0)) into cap_money
          from epmms_award_period_sum
          where award_period_sum_memberinfo_id=new.award_period_sum_memberinfo_id
          and award_period_sum_period=new.award_period_sum_period
          and award_period_sum_type=new.award_period_sum_type
          and award_period_sum_type=any(cap_member_sum.cap_member_sum_type);
        when 'day' then
          select epmms_get_cap_money(cap_member_sum.cap_member_money,cap_money,COALESCE(sum(award_day_sum_currency),0)) into cap_money
          from epmms_award_day_sum
          where award_day_sum_memberinfo_id=new.award_period_sum_memberinfo_id
          and award_day_sum_date=date_trunc('day',new.award_period_sum_add_date)
          and award_day_sum_type=new.award_period_sum_type
          and award_day_sum_type=any(cap_member_sum.cap_member_sum_type);
        when 'week' then
          select epmms_get_cap_money(cap_member_sum.cap_member_money,cap_money,COALESCE(sum(award_week_sum_currency),0)) into cap_money
          from epmms_award_week_sum
          where award_week_sum_memberinfo_id=new.award_period_sum_memberinfo_id
          and award_week_sum_date=date_trunc('week',new.award_period_sum_add_date)
          and award_week_sum_type=new.award_period_sum_type
          and award_week_sum_type=any(cap_member_sum.cap_member_sum_type);
        when 'month' then
          select epmms_get_cap_money(cap_member_sum.cap_member_money,cap_money,COALESCE(sum(award_month_sum_currency),0)) into cap_money
          from epmms_award_month_sum
          where award_month_sum_memberinfo_id=new.award_period_sum_memberinfo_id
          and award_month_sum_date=date_trunc('month',new.award_period_sum_add_date)
          and award_month_sum_type=new.award_period_sum_type
          and award_month_sum_type=any(cap_member_sum.cap_member_sum_type);
        when 'year' then
          select epmms_get_cap_money(cap_member_sum.cap_member_money,cap_money,COALESCE(sum(award_year_sum_currency),0)) into cap_money
          from epmms_award_year_sum
          where award_year_sum_memberinfo_id=new.award_period_sum_memberinfo_id
          and award_year_sum_date=date_trunc('year',new.award_period_sum_add_date)
          and award_year_sum_type=new.award_period_sum_type
          and award_year_sum_type=any(cap_member_sum.cap_member_sum_type);
        when 'total' then
          select epmms_get_cap_money(cap_member_sum.cap_member_money,cap_money,COALESCE(sum(award_total_sum_currency),0)) into cap_money
          from epmms_award_total_sum
          where award_total_sum_memberinfo_id=new.award_period_sum_memberinfo_id
          and award_total_sum_type=new.award_period_sum_type
          and award_total_sum_type=any(cap_member_sum.cap_member_sum_type);
        end case;
    end loop;
    --对汇总进行封顶(所有会员)
    for cap_sum in (select cap_sum_sum_type,cap_sum_date_type,cap_sum_money from epmms_cap_sum order by cap_sum_id asc)
    loop
        case cap_sum.cap_sum_date_type
        when 'period' then
          select epmms_get_cap_money(cap_sum.cap_sum_money,cap_money,COALESCE(sum(award_period_sum_currency),0)) into cap_money
          from epmms_award_period_sum
          where award_period_sum_memberinfo_id=new.award_period_sum_memberinfo_id
          and award_period_sum_period=new.award_period_sum_period
          and award_period_sum_type=new.award_period_sum_type
          and award_period_sum_type=any(cap_sum.cap_sum_sum_type);
        when 'day' then
          select epmms_get_cap_money(cap_sum.cap_sum_money,cap_money,COALESCE(sum(award_day_sum_currency),0)) into cap_money
          from epmms_award_day_sum
          where award_day_sum_memberinfo_id=new.award_period_sum_memberinfo_id
          and award_day_sum_date=date_trunc('day',new.award_period_sum_add_date)
          and award_day_sum_type=new.award_period_sum_type
          and award_day_sum_type=any(cap_sum.cap_sum_sum_type);
        when 'week' then
          select epmms_get_cap_money(cap_sum.cap_sum_money,cap_money,COALESCE(sum(award_week_sum_currency),0)) into cap_money
          from epmms_award_week_sum
          where award_week_sum_memberinfo_id=new.award_period_sum_memberinfo_id
          and award_week_sum_date=date_trunc('week',new.award_period_sum_add_date) 
          and award_week_sum_type=new.award_period_sum_type
          and award_week_sum_type=any(cap_sum.cap_sum_sum_type);
        when 'month' then
          select epmms_get_cap_money(cap_sum.cap_sum_money,cap_money,COALESCE(sum(award_month_sum_currency),0)) into cap_money
          from epmms_award_month_sum
          where award_month_sum_memberinfo_id=new.award_period_sum_memberinfo_id
          and award_month_sum_date=date_trunc('month',new.award_period_sum_add_date) 
          and award_month_sum_type=new.award_period_sum_type
          and award_month_sum_type=any(cap_sum.cap_sum_sum_type);
        when 'year' then
          select epmms_get_cap_money(cap_sum.cap_sum_money,cap_money,COALESCE(sum(award_year_sum_currency),0)) into cap_money
          from epmms_award_year_sum
          where award_year_sum_memberinfo_id=new.award_period_sum_memberinfo_id
          and award_year_sum_date=date_trunc('year',new.award_period_sum_add_date)
          and award_year_sum_type=new.award_period_sum_type
          and award_year_sum_type=any(cap_sum.cap_sum_sum_type);
        when 'total' then
          select epmms_get_cap_money(cap_sum.cap_sum_money,cap_money,COALESCE(sum(award_total_sum_currency),0)) into cap_money
          from epmms_award_total_sum
          where award_total_sum_memberinfo_id=new.award_period_sum_memberinfo_id
          and award_total_sum_type=new.award_period_sum_type
          and award_total_sum_type=any(cap_sum.cap_sum_sum_type);
        end case;
  end loop;

  new.award_period_sum_currency:=cap_money;
  return new;
END;
$$;


--
-- Name: epmms_award_period_tr_ins(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_period_tr_ins() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    exist BIGINT default 0;
    cap_money numeric(16,2) default null;
    cap_money2 numeric(16,2) default null;
BEGIN
  cap_money:=new.award_period_currency;
  --按人封顶
  --每期封顶
  
  if exists(select * from epmms_award_period as period where
    period.award_period_memberinfo_id=new.award_period_memberinfo_id
    and period.award_period_period=new.award_period_period 
    and period.award_period_type_id=new.award_period_type_id) 
  then
    select epmms_get_cap_money(min(cap.cap_award_money),cap_money,COALESCE(sum(period.award_period_currency),0)) into cap_money2 
    from epmms_cap_award as cap,epmms_award_period as period
    where cap.cap_award_type=new.award_period_type_id and cap.cap_award_date_type='period'
    and period.award_period_memberinfo_id=new.award_period_memberinfo_id
    and period.award_period_period=NEW.award_period_period 
    and period.award_period_type_id=new.award_period_type_id;
  else
      select epmms_get_cap_money(cap.cap_award_money,cap_money,0) into cap_money2 
    from epmms_cap_award as cap
    where cap.cap_award_type=new.award_period_type_id and cap.cap_award_date_type='period';
  end if;
  if cap_money2 is not null then
     if cap_money2<=0 and cap_money<=0 then
        cap_money:=-least(abs(cap_money2),abs(cap_money));
     else
        cap_money:=least(cap_money2,cap_money);
     end if;
  end if;
  --每日封顶
  if exists(select * from epmms_award_day as day where
    day.award_day_memberinfo_id=new.award_period_memberinfo_id
    and day.award_day_date=date_trunc('day',new.award_period_add_date) 
      and day.award_day_type_id=new.award_period_type_id) 
  then
    select epmms_get_cap_money(min(cap.cap_award_money),cap_money,COALESCE(sum(day.award_day_currency),0)) into cap_money2
    from epmms_cap_award as cap,epmms_award_day as day
    where cap.cap_award_type=new.award_period_type_id  and cap.cap_award_date_type='day'
    and day.award_day_memberinfo_id=new.award_period_memberinfo_id
    and day.award_day_date=date_trunc('day',new.award_period_add_date) 
    and day.award_day_type_id=new.award_period_type_id;
  else
      select epmms_get_cap_money(cap.cap_award_money,cap_money,0) into cap_money2 
    from epmms_cap_award as cap
    where cap.cap_award_type=new.award_period_type_id and cap.cap_award_date_type='day';
  end if;
  if cap_money2 is not null then
     if cap_money2<=0 and cap_money<=0 then
        cap_money:=-least(abs(cap_money2),abs(cap_money));
     else
        cap_money:=least(cap_money2,cap_money);
     end if;
  end if;

  --每周封顶
  if exists(select * from epmms_award_week as week where
    week.award_week_memberinfo_id=new.award_period_memberinfo_id
    and week.award_week_date=date_trunc('week',new.award_period_add_date) 
    and week.award_week_type_id=new.award_period_type_id) 
  then
    select epmms_get_cap_money(min(cap.cap_award_money),cap_money,COALESCE(sum(week.award_week_currency),0)) into cap_money2
    from epmms_cap_award as cap,epmms_award_week as week
    where cap.cap_award_type=new.award_period_type_id and cap.cap_award_date_type='week'
    and week.award_week_memberinfo_id=new.award_period_memberinfo_id
    and week.award_week_date=date_trunc('week',new.award_period_add_date) 
    and week.award_week_type_id=new.award_period_type_id;
  else
    select epmms_get_cap_money(cap.cap_award_money,cap_money,0) into cap_money2 
    from epmms_cap_award as cap
    where cap.cap_award_type=new.award_period_type_id and cap.cap_award_date_type='week';
  end if;
  if cap_money2 is not null then
     if cap_money2<=0 and cap_money<=0 then
        cap_money:=-least(abs(cap_money2),abs(cap_money));
     else
        cap_money:=least(cap_money2,cap_money);
     end if;
  end if;

  --每月封顶
  if exists(select * from epmms_award_month as month 
  where month.award_month_memberinfo_id=new.award_period_memberinfo_id
    and month.award_month_date=date_trunc('month',new.award_period_add_date) 
      and month.award_month_type_id=new.award_period_type_id) 
  then
    select epmms_get_cap_money(min(cap.cap_award_money),cap_money,COALESCE(sum(month.award_month_currency),0)) into cap_money2 
    from epmms_cap_award as cap,epmms_award_month as month
    where cap.cap_award_type=new.award_period_type_id and cap.cap_award_date_type='month'
    and month.award_month_memberinfo_id=new.award_period_memberinfo_id
    and month.award_month_date=date_trunc('month',new.award_period_add_date) 
    and month.award_month_type_id=new.award_period_type_id;
  else
      select epmms_get_cap_money(cap.cap_award_money,cap_money,0) into cap_money2 
    from epmms_cap_award as cap
    where cap.cap_award_type=new.award_period_type_id and cap.cap_award_date_type='month';
  end if;
  if cap_money2 is not null then
     if cap_money2<=0 and cap_money<=0 then
        cap_money:=-least(abs(cap_money2),abs(cap_money));
     else
        cap_money:=least(cap_money2,cap_money);
     end if;
  end if;
  --每年封顶
  if exists(select * from epmms_award_year as year where
    year.award_year_memberinfo_id=new.award_period_memberinfo_id
    and year.award_year_date=date_trunc('year',new.award_period_add_date) 
    and year.award_year_type_id=new.award_period_type_id) 
  then
    select epmms_get_cap_money(min(cap.cap_award_money),cap_money,COALESCE(sum(year.award_year_currency),0)) into cap_money2 
    from epmms_cap_award as cap,epmms_award_year as year
    where cap.cap_award_type=new.award_period_type_id and cap.cap_award_date_type='year'
    and year.award_year_memberinfo_id=new.award_period_memberinfo_id
    and year.award_year_date=date_trunc('year',new.award_period_add_date) 
    and year.award_year_type_id=new.award_period_type_id;
  else
      select epmms_get_cap_money(cap.cap_award_money,cap_money,0) into cap_money2 
    from epmms_cap_award as cap
    where cap.cap_award_type=new.award_period_type_id and cap.cap_award_date_type='year';
  end if;
  if cap_money2 is not null then
     if cap_money2<=0 and cap_money<=0 then
        cap_money:=-least(abs(cap_money2),abs(cap_money));
     else
        cap_money:=least(cap_money2,cap_money);
     end if;
  end if;
  --总封顶
  if exists(select * from epmms_award_total as total where 
      total.award_total_memberinfo_id=new.award_period_memberinfo_id
    and total.award_total_type_id=new.award_period_type_id) 
  then
    select epmms_get_cap_money(min(cap.cap_award_money),cap_money,COALESCE(sum(total.award_total_currency),0)) into cap_money2
    from epmms_cap_award as cap,epmms_award_total as total
    where cap.cap_award_type=new.award_period_type_id and cap.cap_award_date_type='total'
    and total.award_total_memberinfo_id=new.award_period_memberinfo_id
    and total.award_total_type_id=new.award_period_type_id;
  else
      select epmms_get_cap_money(cap.cap_award_money,cap_money,0) into cap_money2 
    from epmms_cap_award as cap
    where cap.cap_award_type=new.award_period_type_id and cap.cap_award_date_type='total';
  end if;
  if cap_money2 is not null then
     if cap_money2<=0 and cap_money<=0 then
        cap_money:=-least(abs(cap_money2),abs(cap_money));
     else
        cap_money:=least(cap_money2,cap_money);
     end if;
  end if;

  --根据会员类型封顶
  --每期封顶
  if exists(select * from epmms_award_period as period where period.award_period_period=new.award_period_period 
      and period.award_period_memberinfo_id=new.award_period_memberinfo_id
      and period.award_period_type_id=new.award_period_type_id) 
  then
    select epmms_get_cap_money(min(cap.cap_member_award_money),cap_money,COALESCE(sum(period.award_period_currency),0)) into cap_money2 
    from epmms_cap_member_award as cap,epmms_award_period as period,epmms_membermap as member
    where cap.cap_member_award_type=new.award_period_type_id
    and cap.cap_member_date_type='period'
    and member.membermap_id=period.award_period_memberinfo_id
    and member.membermap_membertype_level=cap.cap_member_type_id
    and period.award_period_memberinfo_id=new.award_period_memberinfo_id
    and period.award_period_period=NEW.award_period_period 
    and period.award_period_type_id=new.award_period_type_id;
  else
      select epmms_get_cap_money(cap.cap_member_award_money,cap_money,0) into cap_money2
    from epmms_cap_member_award as cap,epmms_membermap as member
    where cap.cap_member_date_type='period'
    and cap.cap_member_award_type=new.award_period_type_id
    and member.membermap_membertype_level=cap.cap_member_type_id
    and member.membermap_id=new.award_period_memberinfo_id;
  end if;
  if cap_money2 is not null then
     if cap_money2<=0 and cap_money<=0 then
        cap_money:=-least(abs(cap_money2),abs(cap_money));
     else
        cap_money:=least(cap_money2,cap_money);
     end if;
  end if;
  --每日封顶
  if exists(select * from epmms_award_day as day where
      day.award_day_memberinfo_id=new.award_period_memberinfo_id
    and day.award_day_date=date_trunc('day',new.award_period_add_date) 
      and day.award_day_type_id=new.award_period_type_id) 
  then
    select epmms_get_cap_money(min(cap.cap_member_award_money),cap_money,COALESCE(sum(day.award_day_currency),0)) into cap_money2
    from epmms_cap_member_award as cap,epmms_award_day as day,epmms_membermap as member
    where cap.cap_member_award_type=new.award_period_type_id
    and cap.cap_member_date_type='day'
    and member.membermap_id=day.award_day_memberinfo_id
    and member.membermap_membertype_level=cap.cap_member_type_id
    and day.award_day_memberinfo_id=new.award_period_memberinfo_id
    and day.award_day_date=date_trunc('day',new.award_period_add_date) 
    and day.award_day_type_id=new.award_period_type_id
    and cap.cap_member_award_type<>352;
  else
      select epmms_get_cap_money(cap.cap_member_award_money,cap_money,0) into cap_money2
      from epmms_cap_member_award as cap,epmms_membermap as member
      where cap.cap_member_date_type='day'
      and cap.cap_member_award_type=new.award_period_type_id
      and member.membermap_id=new.award_period_memberinfo_id
      and member.membermap_membertype_level=cap.cap_member_type_id
      and cap.cap_member_award_type<>352;
  end if;

  if cap_money2 is not null then
     if cap_money2<=0 and cap_money<=0 then
        cap_money:=-least(abs(cap_money2),abs(cap_money));
     else
        cap_money:=least(cap_money2,cap_money);
     end if;
  end if;
  if current_database()='160228' and new.award_period_type_id in (350,352) then
    if exists(select * from epmms_award_day as day where
        day.award_day_memberinfo_id=new.award_period_memberinfo_id
      and day.award_day_date=date_trunc('day',new.award_period_add_date) 
        and day.award_day_type_id in (350,352))
    then
      select epmms_get_cap_money(min(cap.cap_member_award_money),cap_money,COALESCE(sum(day.award_day_currency),0)) into cap_money2
      from epmms_cap_member_award as cap,epmms_award_day as day,epmms_membermap as member
      where cap.cap_member_award_type=352
      and cap.cap_member_date_type='day'
      and member.membermap_id=day.award_day_memberinfo_id
      and member.membermap_membertype_level=cap.cap_member_type_id
      and day.award_day_memberinfo_id=new.award_period_memberinfo_id
      and day.award_day_date=date_trunc('day',new.award_period_add_date) 
      and day.award_day_type_id in (350,352);
    else
        select epmms_get_cap_money(cap.cap_member_award_money,cap_money,0) into cap_money2
        from epmms_cap_member_award as cap,epmms_membermap as member
        where cap.cap_member_date_type='day'
        and cap.cap_member_award_type in (350,352)
        and member.membermap_id=new.award_period_memberinfo_id
        and member.membermap_membertype_level=cap.cap_member_type_id;
    end if;

    if cap_money2 is not null then
       if cap_money2<=0 and cap_money<=0 then
          cap_money:=-least(abs(cap_money2),abs(cap_money));
       else
          cap_money:=least(cap_money2,cap_money);
       end if;
    end if;
  end if;
  --每周封顶
  if exists(select * from epmms_award_week as week where week.award_week_date=date_trunc('week',new.award_period_add_date) 
      and week.award_week_memberinfo_id=new.award_period_memberinfo_id
      and week.award_week_type_id=new.award_period_type_id) 
  then
    select epmms_get_cap_money(min(cap.cap_member_award_money),cap_money,COALESCE(sum(week.award_week_currency),0)) into cap_money2
    from epmms_cap_member_award as cap,epmms_award_week as week,epmms_membermap as member
    where cap.cap_member_award_type=new.award_period_type_id
    and cap.cap_member_date_type='week'
    and member.membermap_id=week.award_week_memberinfo_id
    and member.membermap_membertype_level=cap.cap_member_type_id
    and week.award_week_date=date_trunc('week',new.award_period_add_date) 
    and week.award_week_memberinfo_id=new.award_period_memberinfo_id
    and week.award_week_type_id=new.award_period_type_id;
  else
    select epmms_get_cap_money(cap.cap_member_award_money,cap_money,0) into cap_money2
    from epmms_cap_member_award as cap,epmms_membermap as member
    where cap.cap_member_date_type='week'
    and cap.cap_member_award_type=new.award_period_type_id
    and member.membermap_id=new.award_period_memberinfo_id
    and member.membermap_membertype_level=cap.cap_member_type_id;
  end if;
  if cap_money2 is not null then
     if cap_money2<=0 and cap_money<=0 then
        cap_money:=-least(abs(cap_money2),abs(cap_money));
     else
        cap_money:=least(cap_money2,cap_money);
     end if;
  end if;
  --每月封顶
  if exists(select * from epmms_award_month as month where month.award_month_date=date_trunc('month',new.award_period_add_date) 
    and month.award_month_memberinfo_id=new.award_period_memberinfo_id
    and month.award_month_type_id=new.award_period_type_id) 
  then
    select epmms_get_cap_money(min(cap.cap_member_award_money),cap_money,COALESCE(sum(month.award_month_currency),0)) into cap_money2 
    from epmms_cap_member_award as cap,epmms_award_month as month,epmms_membermap as member
    where cap.cap_member_award_type=new.award_period_type_id
    and cap.cap_member_date_type='month'
    and member.membermap_membertype_level=cap.cap_member_type_id
    and member.membermap_id=month.award_month_memberinfo_id
    and month.award_month_memberinfo_id=new.award_period_memberinfo_id
    and month.award_month_date=date_trunc('month',new.award_period_add_date) 
    and month.award_month_type_id=new.award_period_type_id;
  else
    select epmms_get_cap_money(cap.cap_member_award_money,cap_money,0) into cap_money2
    from epmms_cap_member_award as cap,epmms_membermap as member
    where cap.cap_member_award_type=new.award_period_type_id
    and cap.cap_member_date_type='month'
    and member.membermap_id=new.award_period_memberinfo_id
    and member.membermap_membertype_level=cap.cap_member_type_id;
  end if;
  if cap_money2 is not null then
     if cap_money2<=0 and cap_money<=0 then
        cap_money:=-least(abs(cap_money2),abs(cap_money));
     else
        cap_money:=least(cap_money2,cap_money);
     end if;
  end if;

  --每年封顶
  if exists(select * from epmms_award_year as year where
    year.award_year_memberinfo_id=new.award_period_memberinfo_id
    and year.award_year_date=date_trunc('year',new.award_period_add_date) 
    and year.award_year_type_id=new.award_period_type_id) 
  then
    select epmms_get_cap_money(min(cap.cap_member_award_money),cap_money,COALESCE(sum(year.award_year_currency),0)) into cap_money2 
    from epmms_cap_member_award as cap,epmms_award_year as year,epmms_membermap as member
    where cap.cap_member_award_type=new.award_period_type_id
    and cap.cap_member_date_type='year'
    and member.membermap_id=year.award_year_memberinfo_id
    and member.membermap_membertype_level=cap.cap_member_type_id
    and year.award_year_date=date_trunc('year',new.award_period_add_date) 
    and year.award_year_memberinfo_id=new.award_period_memberinfo_id
    and year.award_year_type_id=new.award_period_type_id;
  else
    select epmms_get_cap_money(cap.cap_member_award_money,cap_money,0) into cap_money2
    from epmms_cap_member_award as cap,epmms_membermap as member
    where cap.cap_member_award_type=new.award_period_type_id
    and cap.cap_member_date_type='year'
    and member.membermap_id=new.award_period_memberinfo_id
    and member.membermap_membertype_level=cap.cap_member_type_id;
  end if;
  if cap_money2 is not null then
     if cap_money2<=0 and cap_money<=0 then
        cap_money:=-least(abs(cap_money2),abs(cap_money));
     else
        cap_money:=least(cap_money2,cap_money);
     end if;
  end if;
  --总封顶
  if exists(select * from epmms_award_total as total where
    total.award_total_memberinfo_id=new.award_period_memberinfo_id
    and total.award_total_type_id=new.award_period_type_id) 
  then
    select epmms_get_cap_money(min(cap.cap_member_award_money),cap_money,COALESCE(sum(total.award_total_currency),0)) into cap_money2
    from epmms_cap_member_award as cap,epmms_award_total as total,epmms_membermap as member
    where cap.cap_member_award_type=new.award_period_type_id
    and cap.cap_member_date_type='total'
    and member.membermap_id=total.award_total_memberinfo_id
    and member.membermap_membertype_level=cap.cap_member_type_id
    and total.award_total_memberinfo_id=new.award_period_memberinfo_id
    and total.award_total_type_id=new.award_period_type_id;
  else
    select epmms_get_cap_money(cap.cap_member_award_money,cap_money,0) into cap_money2
    from epmms_cap_member_award as cap,epmms_membermap as member
    where cap.cap_member_award_type=new.award_period_type_id
    and cap.cap_member_date_type='total'
    and member.membermap_id=new.award_period_memberinfo_id
    and member.membermap_membertype_level=cap.cap_member_type_id;
  end if;
  if cap_money2 is not null then
     if cap_money2<=0 and cap_money<=0 then
        cap_money:=-least(abs(cap_money2),abs(cap_money));
     else
        cap_money:=least(cap_money2,cap_money);
     end if;
  end if;
  if current_database()='150720' then
  
     if new.award_period_type_id=255  or new.award_period_type_id=256 then
      --周封顶
      if exists(select * from epmms_award_week as week where
        week.award_week_memberinfo_id=new.award_period_memberinfo_id
        and week.award_week_type_id=new.award_period_type_id) 
      then
        select epmms_get_cap_money(min(member.membermap_money*2.5),cap_money,COALESCE(sum(week.award_week_currency),0)) into cap_money2
        from epmms_award_week as week,epmms_membermap as member
        where member.membermap_id=week.award_week_memberinfo_id
        and week.award_week_memberinfo_id=new.award_period_memberinfo_id
        and week.award_week_type_id in(255,256);
      else
        select epmms_get_cap_money(member.membermap_money*2.5,cap_money,0) into cap_money2
        from epmms_cap_member_award as cap,epmms_membermap as member
        where member.membermap_id=new.award_period_memberinfo_id;
      end if;
      if cap_money2 is not null then
         if cap_money2<=0 and cap_money<=0 then
            cap_money:=-least(abs(cap_money2),abs(cap_money));
         else
            cap_money:=least(cap_money2,cap_money);
         end if;
      end if;
    end if;
    if new.award_period_type_id=255 then
      --总封顶
      if exists(select * from epmms_award_total as total where
        total.award_total_memberinfo_id=new.award_period_memberinfo_id
        and total.award_total_type_id=new.award_period_type_id) 
      then
        select epmms_get_cap_money(min(member.membermap_money*3),cap_money,COALESCE(sum(total.award_total_currency),0)) into cap_money2
        from epmms_award_total as total,epmms_membermap as member
        where member.membermap_id=total.award_total_memberinfo_id
        and total.award_total_memberinfo_id=new.award_period_memberinfo_id
        and total.award_total_type_id in(255,256);
      else
        select epmms_get_cap_money(member.membermap_money*3,cap_money,0) into cap_money2
        from epmms_cap_member_award as cap,epmms_membermap as member
        where member.membermap_id=new.award_period_memberinfo_id;
      end if;
      if cap_money2 is not null then
         if cap_money2<=0 and cap_money<=0 then
            cap_money:=-least(abs(cap_money2),abs(cap_money));
         else
            cap_money:=least(cap_money2,cap_money);
         end if;
      end if;
    end if;
  end if;
  
  select count(*) into exist from epmms_award_period 
  where award_period_memberinfo_id=NEW.award_period_memberinfo_id
  and award_period_period=new.award_period_period
  and award_period_type_id=new.award_period_type_id and award_period_sum_type=new.award_period_sum_type;

  if exist>0 then
    update epmms_award_period
    set award_period_currency=award_period_currency+cap_money
    where award_period_memberinfo_id=new.award_period_memberinfo_id
    and award_period_period=new.award_period_period
    and award_period_type_id=new.award_period_type_id and award_period_sum_type=new.award_period_sum_type;
    return null;
  end if;
  new.award_period_currency:=cap_money;
  return new;
END;
$$;


--
-- Name: epmms_award_sum(integer, bigint, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_sum(member_id integer, period bigint, sum_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    --汇总每期
  insert into epmms_award_period_sum(award_period_sum_period
  ,award_period_sum_memberinfo_id
  ,award_period_sum_src_memberinfo_id,award_period_sum_currency
  ,award_period_sum_type)
  select period,award_period_memberinfo_id,member_id
  ,sum(award_period_currency)
  ,award_period_sum_type
  from epmms_award_period
  where award_period_period=period and award_period_sum_type=sum_type
  group by award_period_memberinfo_id,award_period_sum_type;
END;
$$;


--
-- Name: epmms_award_sum_b(integer, bigint, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_sum_b(member_id integer, period bigint, member_id_b integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    --汇总每期
  insert into epmms_award_period_sum(award_period_sum_period
  ,award_period_sum_memberinfo_id
  ,award_period_sum_src_memberinfo_id,award_period_sum_src_memberinfo_id_b,award_period_sum_currency
  ,award_period_sum_type)
  select period,award_period_memberinfo_id,member_id,member_id_b
  ,sum(award_period_currency)
  ,award_period_sum_type
  from epmms_award_period
  where award_period_period=period
  group by award_period_memberinfo_id,award_period_sum_type;
END;
$$;


--
-- Name: epmms_award_sum_member(integer, integer, timestamp without time zone); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_sum_member(member_id integer, award_period integer, add_date timestamp without time zone) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    --汇总每期
  insert into epmms_award_period_sum(award_period_sum_period
  ,award_period_sum_memberinfo_id
  ,award_period_sum_src_memberinfo_id,award_period_sum_currency
  ,award_period_sum_type,award_period_sum_add_date)
  select award_period,member_id,null
  ,sum(award_period_currency)
  ,1,add_date
  from epmms_award_period
  where award_period_memberinfo_id=member_id and award_period_period=award_period;
END;
$$;


--
-- Name: epmms_award_total_award_sum_before_tr(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_total_award_sum_before_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
	exist BIGINT default 0;
BEGIN

  select count(*) into exist from epmms_award_total 
  where award_total_memberinfo_id=NEW.award_total_memberinfo_id
  and award_total_type_id=NEW.award_total_type_id
  and award_total_sum_type=new.award_total_sum_type;
  
  if exist>0 then
  	update epmms_award_total
    set award_total_currency=award_total_currency+NEW.award_total_currency
    where award_total_memberinfo_id=NEW.award_total_memberinfo_id
    and award_total_type_id=new.award_total_type_id
    and award_total_sum_type=new.award_total_sum_type;
    return null;
  end if;

  return new;
END;
$$;


--
-- Name: epmms_award_total_award_sum_total_after_tr(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_total_award_sum_total_after_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
	award_currency numeric(16,2);
BEGIN
  --月奖金汇总
  if TG_OP='UPDATE' then
  	award_currency:=new.award_total_currency-OLD.award_total_currency;
  else
  	award_currency:=new.award_total_currency;
  end if;
  
  insert into epmms_award_total_sum(award_total_sum_memberinfo_id,award_total_sum_currency
  ,award_total_sum_type,award_total_sum_add_date) values (
  new.award_total_memberinfo_id,award_currency
  ,get_sum_id(new.award_total_type_id::integer),new.award_total_add_date);

  return null;
END;
$$;


--
-- Name: epmms_award_total_sum_award_after_tr(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_total_sum_award_after_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS $$

DECLARE

	award_currency numeric(16,2);

	award_finance_type bigint default 1;

BEGIN

  --总奖金汇总总计

  if TG_OP='UPDATE' then

  	award_currency:=new.award_total_sum_currency-OLD.award_total_sum_currency;

  else

  	award_currency:=new.award_total_sum_currency;

  end if;

  select sum_finance_type_id into award_finance_type from epmms_sum_type 

  where sum_type_id=new.award_total_sum_type;

  insert into epmms_finance(finance_memberinfo_id,finance_award

  ,finance_type) values (

  new.award_total_sum_memberinfo_id,award_currency

  ,award_finance_type);

  if award_currency>0 then

  	update epmms_system_status set system_status_expenses=system_status_expenses+award_currency;

  end if;

  return null;

END;

$$;


--
-- Name: epmms_award_total_sum_before_tr(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_total_sum_before_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
	exist BIGINT default 0;
BEGIN
  select count(*) into exist from epmms_award_total_sum 
  where award_total_sum_memberinfo_id=NEW.award_total_sum_memberinfo_id
  and award_total_sum_type=new.award_total_sum_type;
  if exist>0 then
  	update epmms_award_total_sum 
    set award_total_sum_currency=award_total_sum_currency+NEW.award_total_sum_currency
    where award_total_sum_memberinfo_id=NEW.award_total_sum_memberinfo_id
    and award_total_sum_type=new.award_total_sum_type;
    return null;
  end if;
  return new;
END;
$$;


--
-- Name: epmms_award_week_award_sum_ins_tr(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_week_award_sum_ins_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
  exist BIGINT default 0;
BEGIN
  new.award_week_date:=date_trunc('week',new.award_week_date);

  select count(*) into exist from epmms_award_week 
  where award_week_memberinfo_id=NEW.award_week_memberinfo_id
  and award_week_date=new.award_week_date
  and award_week_type_id=new.award_week_type_id
  and award_week_sum_type=new.award_week_sum_type;
  if exist>0 then
  	update epmms_award_week
    set award_week_currency=award_week_currency+NEW.award_week_currency
    where award_week_memberinfo_id=NEW.award_week_memberinfo_id
    and award_week_date=new.award_week_date
    and award_week_type_id=new.award_week_type_id
    and award_week_sum_type=new.award_week_sum_type;
    return null;
  end if;
  return new;
END;
$$;


--
-- Name: epmms_award_week_award_sum_total_after_tr(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_week_award_sum_total_after_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
	award_currency numeric(16,2);
BEGIN
  --周奖金汇总
  if TG_OP='UPDATE' then
  	award_currency:=new.award_week_currency-OLD.award_week_currency;
  else
  	award_currency:=new.award_week_currency;
  end if;

  insert into epmms_award_month(award_month_memberinfo_id,award_month_currency
  ,award_month_type_id,award_month_date,award_month_sum_type) values (
  new.award_week_memberinfo_id,award_currency
  ,new.award_week_type_id,new.award_week_date,new.award_week_sum_type);
  return null;
END;
$$;


--
-- Name: epmms_award_week_sum_all_replace(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_week_sum_all_replace() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    exist BIGINT default 0;
BEGIN
  new.award_week_sum_date:=date_trunc('week',new.award_week_sum_date);

  select count(*) into exist from epmms_award_week_sum_all
  where award_week_sum_memberinfo_id=NEW.award_week_sum_memberinfo_id
  and award_week_sum_date=new.award_week_sum_date;
  if exist>0 then
    update epmms_award_week_sum_all
    set award_week_sum_currency=award_week_sum_currency+NEW.award_week_sum_currency
    where award_week_sum_memberinfo_id=NEW.award_week_sum_memberinfo_id
    and award_week_sum_date=new.award_week_sum_date;
    return null;
  end if;
  return new;
END;
$$;


--
-- Name: epmms_award_week_sum_ins_sum_after_tr(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_week_sum_ins_sum_after_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
	award_currency numeric(16,2);
BEGIN
  --周汇总
  if TG_OP='UPDATE' then
  	award_currency:=new.award_week_sum_currency-OLD.award_week_sum_currency;
  else
  	award_currency:=new.award_week_sum_currency;
  end if;  
  insert into epmms_award_month_sum(award_month_sum_memberinfo_id,award_month_sum_currency
  ,award_month_sum_type,award_month_sum_date) values (
  new.award_week_sum_memberinfo_id,award_currency
  ,new.award_week_sum_type,new.award_week_sum_date);
  return null;
END;
$$;


--
-- Name: epmms_award_week_sum_ins_sum_tr(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_week_sum_ins_sum_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
	exist BIGINT default 0;
BEGIN
  new.award_week_sum_date:=date_trunc('week',new.award_week_sum_date);

  select count(*) into exist from epmms_award_week_sum 
  where award_week_sum_memberinfo_id=NEW.award_week_sum_memberinfo_id
  and award_week_sum_date=new.award_week_sum_date
  and award_week_sum_type=new.award_week_sum_type;
  if exist>0 then
  	update epmms_award_week_sum 
    set award_week_sum_currency=award_week_sum_currency+NEW.award_week_sum_currency
    where award_week_sum_memberinfo_id=NEW.award_week_sum_memberinfo_id
    and award_week_sum_date=new.award_week_sum_date
    and award_week_sum_type=new.award_week_sum_type;
    return null;
  end if;
  return new;
END;
$$;


--
-- Name: epmms_award_year_award_sum_ins_tr(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_year_award_sum_ins_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
	exist BIGINT default 0;
BEGIN
  new.award_year_date:=date_trunc('year',new.award_year_date);

  select count(*) into exist from epmms_award_year 
  where award_year_memberinfo_id=NEW.award_year_memberinfo_id
  and award_year_date=new.award_year_date
  and award_year_type_id=new.award_year_type_id
  and award_year_sum_type=new.award_year_sum_type;
  if exist>0 then
  	update epmms_award_year
    set award_year_currency=award_year_currency+NEW.award_year_currency
    where award_year_memberinfo_id=NEW.award_year_memberinfo_id
    and award_year_date=new.award_year_date
    and award_year_type_id=new.award_year_type_id
    and award_year_sum_type=new.award_year_sum_type;
    return null;
  end if;
  return new;
END;
$$;


--
-- Name: epmms_award_year_award_sum_total_after_tr(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_year_award_sum_total_after_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
	award_currency numeric(16,2);
BEGIN
  --年奖金汇总
  if TG_OP='UPDATE' then
  	award_currency:=new.award_year_currency-OLD.award_year_currency;
  else
  	award_currency:=new.award_year_currency;
  end if;

  insert into epmms_award_total(award_total_memberinfo_id,award_total_currency
  ,award_total_type_id,award_total_sum_type) values (
  new.award_year_memberinfo_id,award_currency
  ,new.award_year_type_id,new.award_year_sum_type);
  return null;
END;
$$;


--
-- Name: epmms_award_year_sum_ins_sum_tr(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_year_sum_ins_sum_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
	exist BIGINT default 0;
BEGIN
  new.award_year_sum_date:=date_trunc('year',new.award_year_sum_date);

  
  select count(*) into exist from epmms_award_year_sum 
  where award_year_sum_memberinfo_id=NEW.award_year_sum_memberinfo_id
  and award_year_sum_date=new.award_year_sum_date
  and award_year_sum_type=new.award_year_sum_type;
  if exist>0 then
  	update epmms_award_year_sum 
    set award_year_sum_currency=award_year_sum_currency+NEW.award_year_sum_currency
    where award_year_sum_memberinfo_id=NEW.award_year_sum_memberinfo_id
    and award_year_sum_date=new.award_year_sum_date
    and award_year_sum_type=new.award_year_sum_type;
    return null;
  end if;
  return new;
END;
$$;


--
-- Name: epmms_award_year_sum_total_sum_after_tr(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_award_year_sum_total_sum_after_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
	award_currency numeric(16,2);
BEGIN
  --月汇总
  if TG_OP='UPDATE' then
  	award_currency:=new.award_year_sum_currency-OLD.award_year_sum_currency;
  else
  	award_currency:=new.award_year_sum_currency;
  end if;  
  insert into epmms_award_total_sum(award_total_sum_memberinfo_id,award_total_sum_currency
  ,award_total_sum_type) values (
  new.award_year_sum_memberinfo_id,award_currency
  ,new.award_year_sum_type);
  return null;
END;
$$;


--
-- Name: epmms_clean_award(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_clean_award() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN

  --清空财务数据
  truncate table epmms_supplement;
  alter sequence epmms_supplement_supplement_id_seq restart;
  truncate table epmms_withdrawals;
  alter SEQUENCE epmms_withdrawals_withdrawals_id_seq restart;
  
  alter SEQUENCE gen_member restart;
  alter SEQUENCE group_seq restart;
  truncate table epmms_prize;
  alter sequence epmms_prize_prize_id_seq restart;
  truncate table epmms_award_total_sum;
  alter SEQUENCE epmms_award_total_sum_award_total_sum_id_seq restart;
  truncate table epmms_award_total;
  alter SEQUENCE epmms_award_total_award_total_id_seq restart;

  truncate table epmms_award_year_sum;
  alter SEQUENCE epmms_award_month_year_sum_award_year_sum_id_seq restart;
  truncate table epmms_award_year;
  alter SEQUENCE epmms_award_year_award_year_id_seq restart;

  truncate table epmms_award_month_sum;
  alter SEQUENCE epmms_award_month_sum_award_month_sum_id_seq restart;
  truncate table epmms_award_month;
  alter SEQUENCE epmms_award_month_award_month_id_seq restart;
  truncate table epmms_award_week_sum;
  alter SEQUENCE epmms_award_week_sum_award_week_sum_id_seq restart;
  truncate table epmms_award_week;
  alter SEQUENCE epmms_award_week_award_week_id_seq restart;
  truncate table epmms_award_day_sum;
  alter SEQUENCE epmms_award_day_sum_award_day_sum_id_seq restart;
  truncate table epmms_award_day;
  alter SEQUENCE epmms_award_day_award_day_id_seq restart;
  truncate table epmms_award_period_sum;
  alter SEQUENCE epmms_award_period_sum_award_period_sum_id_seq restart;
  truncate table epmms_award_period;
  alter SEQUENCE epmms_award_period_award_period_id_seq restart;
  truncate table epmms_award_day_sum_all;
  alter sequence epmms_award_day_sum_all_award_day_sum_id_seq restart;
  truncate table epmms_award_week_sum_all;
  alter sequence epmms_award_week_sum_all_award_week_sum_id_seq restart;
  truncate table epmms_award_month_sum_all;
  alter sequence epmms_award_month_sum_all_award_month_sum_id_seq restart;
  
  truncate epmms_foundation;
  alter sequence epmms_foundation_foundation_id_seq restart;
  truncate epmms_layer;
  alter sequence epmms_layer_layer_id_seq restart;
  --清空分组
  delete from epmms_groupmap ;
  delete from epmms_group where group_id<>1;
  update epmms_group set group_count=0;
  alter SEQUENCE epmms_group_group_id_seq  restart with 2;
  alter SEQUENCE epmms_groupmap_groupmap_id_seq  restart;
  truncate table epmms_map_edit;
  alter sequence epmms_map_edit_map_edit_id_seq restart;
  update epmms_groupmap set groupmap_is_award=0,groupmap_verify_date=now(),groupmap_award_date=now();
  alter SEQUENCE group_seq restart with 2;
  --清空日志
  truncate table epmms_log;
  alter SEQUENCE epmms_log_log_id_seq restart;
  truncate table epmms_memberstatus;
  insert into epmms_memberstatus(status_id) values (1);
  truncate table epmms_stock_trend;
  alter SEQUENCE epmms_stock_trend_stock_trend_id_seq restart;
  truncate epmms_parent_relation;
  truncate epmms_recommend_relation;
  truncate table epmms_memberstatus;
  insert into epmms_memberstatus(status_id) values (1);
  
  update epmms_membermap set 
  membermap_parent_id=null,
  membermap_path='/1',
  membermap_layer=1,
  membermap_layer_order=1,
  membermap_order=1,
  membermap_recommend_id=null,
  membermap_recommend_layer=1,
  membermap_recommend_path='/1',
  membermap_recommend_number=0,
  membermap_recommend_product_count=0,
  membermap_recommend_under_number=0, 
  membermap_recommend_under_product_count=0,   
  membermap_sub_number=0,
  membermap_child_number=0,
  membermap_sub_product_count=0,
  membermap_under_number=0,
  membermap_under_product_count=0,
  membermap_agent_number=0,
  membermap_agent_product_count=0,
  membermap_level=null,
  membermap_buyall=0
   where membermap_id=1;
  
  truncate table epmms_ratio;
  alter SEQUENCE epmms_ratio_ratio_id_seq restart;
  truncate table epmms_member_upgrade;
  alter sequence epmms_member_upgrade_member_upgrade_id_seq restart;
  delete from epmms_membermap2 where membermap_id!=1;
  alter sequence epmms_membermap2_membermap_id_seq restart;
  truncate table epmms_membermap3;
  alter sequence epmms_membermap3_membermap_id_seq restart;
  --清空会员
  update epmms_membermap set
    membermap_path=null,
    membermap_recommend_path=null,
    membermap_recommend_number=0,
    membermap_recommend_product_count=0,
    membermap_recommend_under_number=0, 
    membermap_recommend_under_product_count=0,   
    membermap_sub_number=0,
    membermap_child_number=0,  
    membermap_sub_product_count=0,
    membermap_under_number=0,
    membermap_under_product_count=0,
    membermap_agent_number=0,
    membermap_agent_product_count=0,
    membermap_level=null,
    membermap_layer_order=null
    where membermap_id!=1;
  update epmms_membermap2 set membermap_layer_order=null,membermap_child_number=0,membermap_under_bill_count=0,membermap_sub_bill_count=0,membermap_under_number=0,membermap_is_verify=0;
  update epmms_membermap4 set membermap_layer_order=null,membermap_child_number=0,membermap_is_verify=0;
  update epmms_membermap2 set membermap_is_verify=1 where membermap_id=1;
  update epmms_membermap4 set membermap_is_verify=1 where membermap_id=1;
  ALTER SEQUENCE award_period restart;
  update epmms_finance set finance_award=0 from epmms_finance_type where finance_type_id=finance_type
  and finance_type_charge<>1;

  --重置系统状态
  update epmms_system_status set system_status_expenses=0,system_status_income=0,system_status_verify_seq2=0,system_status_groupmap_seq=1,system_status_foundation=0;
END;
$$;


--
-- Name: epmms_clean_award2(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_clean_award2() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    --清空财务数据
  truncate table epmms_withdrawals;
  alter SEQUENCE epmms_withdrawals_withdrawals_id_seq restart;
  
  truncate table epmms_award_total_sum;
  alter SEQUENCE epmms_award_total_sum_award_total_sum_id_seq restart;
  truncate table epmms_award_total;
  alter SEQUENCE epmms_award_total_award_total_id_seq restart;

  truncate table epmms_award_year_sum;
  alter SEQUENCE epmms_award_month_year_sum_award_year_sum_id_seq restart;
  truncate table epmms_award_year;
  alter SEQUENCE epmms_award_year_award_year_id_seq restart;

  truncate table epmms_award_month_sum;
  alter SEQUENCE epmms_award_month_sum_award_month_sum_id_seq restart;
  truncate table epmms_award_month;
  alter SEQUENCE epmms_award_month_award_month_id_seq restart;
  truncate table epmms_award_week_sum;
  alter SEQUENCE epmms_award_week_sum_award_week_sum_id_seq restart;
  truncate table epmms_award_week;
  alter SEQUENCE epmms_award_week_award_week_id_seq restart;
  truncate table epmms_award_day_sum;
  alter SEQUENCE epmms_award_day_sum_award_day_sum_id_seq restart;
  truncate table epmms_award_day;
  alter SEQUENCE epmms_award_day_award_day_id_seq restart;
  truncate table epmms_award_period_sum;
  alter SEQUENCE epmms_award_period_sum_award_period_sum_id_seq restart;
  truncate table epmms_award_period;
  alter SEQUENCE epmms_award_period_award_period_id_seq restart;
  truncate table epmms_award_day_sum_all;
  alter sequence epmms_award_day_sum_all_award_day_sum_id_seq restart;
  truncate table epmms_award_week_sum_all;
  alter sequence epmms_award_week_sum_all_award_week_sum_id_seq restart;
  truncate table epmms_award_month_sum_all;
  alter sequence epmms_award_month_sum_all_award_month_sum_id_seq restart;
  truncate table epmms_finance;
  alter sequence epmms_finance_finance_id_seq restart;
  --清空日志
  truncate table epmms_log;
  alter SEQUENCE epmms_log_log_id_seq restart;
 
  ALTER SEQUENCE award_period restart;
  update epmms_finance set finance_award=0;

  --重置系统状态
  update epmms_system_status set system_status_expenses=0,system_status_income=0;
END;
$$;


--
-- Name: epmms_clean_cap(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_clean_cap() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    truncate table epmms_cap_award;
    truncate table epmms_cap_member_award;
    truncate table epmms_cap_member_sum;
    truncate table epmms_cap_sum;
    alter SEQUENCE epmms_cap_award_cap_award_id_seq restart;
    alter SEQUENCE epmms_cap_member_award_cap_member_id_seq restart;
    alter SEQUENCE epmms_cap_member_cap_sum_id_seq restart;
    alter SEQUENCE epmms_cap_member_cap_sum_id_seq restart;
END;
$$;


--
-- Name: FUNCTION epmms_clean_cap(); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION public.epmms_clean_cap() IS '清除封顶';


--
-- Name: epmms_clean_data(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_clean_data(include_member integer DEFAULT 0, is_debug integer DEFAULT 0) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  
	--竞买抽奖奖池  中奖记录
  truncate table epmms_jackpot_win_record;
  alter sequence epmms_jackpot_win_record_jackpot_id_seq restart;
	--竞买抽奖奖池  每期奖金记录
	truncate table epmms_jackpot_info;
  alter sequence epmms_jackpot_info_info_id_seq restart;
	--竞买抽奖奖池  激活金卡记录
	truncate table epmms_activation_record;
  alter sequence epmms_activation_record_activation_id_seq restart;
  truncate table epmms_deal CASCADE;
  alter sequence epmms_deal_deal_id_seq restart;
  truncate table epmms_sale CASCADE;
  alter sequence epmms_sale_sale_id_seq restart;
  truncate table epmms_buy CASCADE;
  alter sequence epmms_buy_buy_id_seq restart;	

  truncate table epmms_star;

  alter sequence epmms_star_star_id_seq restart;

  --清空财务数据

  truncate table epmms_supplement;

  alter sequence epmms_supplement_supplement_id_seq restart;

  truncate table epmms_prize;

  alter sequence epmms_prize_prize_id_seq restart;

  truncate table epmms_award_total_sum;

  alter SEQUENCE epmms_award_total_sum_award_total_sum_id_seq restart;

  truncate table epmms_award_total;

  alter SEQUENCE epmms_award_total_award_total_id_seq restart;



  truncate table epmms_award_year_sum;

  alter SEQUENCE epmms_award_month_year_sum_award_year_sum_id_seq restart;

  truncate table epmms_award_year;

  alter SEQUENCE epmms_award_year_award_year_id_seq restart;



  truncate table epmms_award_month_sum;

  alter SEQUENCE epmms_award_month_sum_award_month_sum_id_seq restart;

  truncate table epmms_award_month;

  alter SEQUENCE epmms_award_month_award_month_id_seq restart;

  truncate table epmms_award_week_sum;

  alter SEQUENCE epmms_award_week_sum_award_week_sum_id_seq restart;

  truncate table epmms_award_week;

  alter SEQUENCE epmms_award_week_award_week_id_seq restart;

  truncate table epmms_award_day_sum;

  alter SEQUENCE epmms_award_day_sum_award_day_sum_id_seq restart;

  truncate table epmms_award_day_sum_all;

  alter sequence epmms_award_day_sum_all_award_day_sum_id_seq restart;

  truncate table epmms_award_week_sum_all;

  alter sequence epmms_award_week_sum_all_award_week_sum_id_seq restart;

  truncate table epmms_award_month_sum_all;

  alter sequence epmms_award_month_sum_all_award_month_sum_id_seq restart;

  truncate table epmms_award_day;

  alter SEQUENCE epmms_award_day_award_day_id_seq restart;

  truncate table epmms_award_period_sum;

  alter SEQUENCE epmms_award_period_sum_award_period_sum_id_seq restart;

  truncate table epmms_award_period;

  alter SEQUENCE epmms_award_period_award_period_id_seq restart;

  alter SEQUENCE award_period restart;

  truncate table epmms_withdrawals;

  alter SEQUENCE epmms_withdrawals_withdrawals_id_seq restart;

  truncate table epmms_transfer;

  alter SEQUENCE epmms_transfer_transfer_id_seq restart;

  truncate table epmms_charge;

  alter SEQUENCE epmms_charge_charge_id_seq restart;

  

  alter SEQUENCE gen_member restart;

  alter SEQUENCE group_seq restart;

  

  truncate epmms_futou;

  alter sequence epmms_futou_futou_id_seq restart;



  truncate epmms_foundation;

  alter sequence epmms_foundation_foundation_id_seq restart;

  

  truncate epmms_parent_relation;

  truncate epmms_recommend_relation;

  

  truncate epmms_layer;

  alter sequence epmms_layer_layer_id_seq restart;

  --清空分组

  delete from epmms_groupmap ;

  delete from epmms_group where group_id<>1;

  update epmms_group set group_count=0;

  alter SEQUENCE epmms_group_group_id_seq  restart with 2;

  alter SEQUENCE epmms_groupmap_groupmap_id_seq  restart;

  truncate table epmms_map_edit;

  alter sequence epmms_map_edit_map_edit_id_seq restart;

  update epmms_groupmap set groupmap_is_award=0,groupmap_verify_date=now(),groupmap_award_date=now();

  alter SEQUENCE group_seq restart with 2;

  --清空日志

  truncate table epmms_log;

  alter SEQUENCE epmms_log_log_id_seq restart;

  truncate table epmms_memberstatus;

  insert into epmms_memberstatus(status_id) values (1);

  truncate table epmms_stock_trend;

  alter sequence epmms_stock_trend_stock_trend_id_seq restart;

  --清空订单

  truncate table epmms_orders,epmms_orders_product;

  alter sequence epmms_orders_orders_id_seq restart;

  alter sequence epmms_orders_product_orders_product_id_seq restart;

  --清空代理中心

  delete from epmms_agent where agent_id<>1;

  alter SEQUENCE epmms_agent_agent_id_seq restart with 2;

  update epmms_membermap set 

  membermap_recommend_number=0,

  membermap_recommend_product_count=0,

  membermap_recommend_under_number=0, 

  membermap_recommend_under_product_count=0,   

  membermap_sub_number=0,

  membermap_child_number=0,  

  membermap_sub_product_count=0,  

  membermap_under_number=0,

  membermap_under_product_count=0,

  membermap_agent_number=0,

  membermap_agent_product_count=0,

  membermap_level=null,

  membermap_is_active=1,

  membermap_is_delete=0,

  membermap_buyall=0

   where membermap_id=1;

  

  truncate table epmms_finance;

  alter SEQUENCE epmms_finance_finance_id_seq restart;

  truncate table epmms_ratio;

  alter SEQUENCE epmms_ratio_ratio_id_seq restart;

  truncate table epmms_member_upgrade;

  alter sequence epmms_member_upgrade_member_upgrade_id_seq restart;

  truncate table epmms_appropriate;

  alter SEQUENCE epmms_appropriate_appropriate_id_seq restart;

  truncate table epmms_signing;

  alter SEQUENCE epmms_signing_signing_id_seq restart;



  --清空会员

  if include_member=0 then

    update epmms_membermap set membermap_is_verify=0,

      membermap_path=null,

      membermap_recommend_path=null,

      membermap_verify_seq=NULL,

      membermap_recommend_number=0,

      membermap_recommend_product_count=0,

      membermap_recommend_under_number=0, 

      membermap_recommend_under_product_count=0,   

      membermap_sub_number=0,

      membermap_child_number=0,  

      membermap_sub_product_count=0,

      membermap_under_number=0,

      membermap_under_product_count=0,

      membermap_agent_number=0,

	  membermap_agent_product_count=0,

      membermap_is_active=1,

      membermap_is_delete=0,

      membermap_level=1,

      membermap_layer_order=null,

      membermap_buyall=0

      where membermap_id!=1;

    update epmms_memberinfo set memberinfo_is_verify=0 where memberinfo_id !=1;

    update epmms_membermap2 set membermap_layer_order=null,membermap_child_number=0,membermap_under_bill_count=0,membermap_sub_bill_count=0,membermap_under_number=0,membermap_is_verify=0,membermap_recommend_number=0;

    update epmms_membermap4 set membermap_layer_order=null,membermap_child_number=0,membermap_is_verify=0;

    update epmms_membermap2 set membermap_is_verify=1 where membermap_id=1;

    update epmms_membermap4 set membermap_is_verify=1 where membermap_id=1;

  else

    delete from epmms_membermap2 where membermap_id not in (1);

    alter sequence epmms_membermap2_membermap_id_seq restart with 2;

    truncate table epmms_membermap4;

    alter sequence epmms_membermap4_membermap_id_seq restart;

    truncate table epmms_membermap3;

    alter sequence epmms_membermap3_membermap_id_seq restart;

    

    update epmms_membermap2 set membermap_layer_order=1,membermap_child_number=1,membermap_under_bill_count=1,membermap_sub_bill_count=1,membermap_recommend_number=1,membermap_under_number=1,membermap_bond_id=null,membermap_verify_date=now() where membermap_id =1;

    update epmms_membermap2 set membermap_layer_order=1,membermap_child_number=0,membermap_under_bill_count=0,membermap_sub_bill_count=0,membermap_recommend_number=0,membermap_under_number=0,membermap_bond_id=null,membermap_is_verify=1,membermap_path='/1/1',membermap_recommend_path='/1/1',membermap_layer=2,membermap_recommend_layer=2,membermap_parent_id=1,membermap_order=1,membermap_recommend_id=1,membermap_verify_date=now() where membermap_id=2;

    update epmms_membermap4 set membermap_layer_order=null,membermap_child_number=0 where membermap_id=1;

  	truncate table epmms_messages;

    alter sequence epmms_messages_messages_id_seq restart;

  	delete from epmms_membermap where membermap_id!=1;

    delete from epmms_memberinfo where memberinfo_id not in (1);

    alter sequence epmms_memberinfo_memberinfo_id_seq restart with 2;

    alter SEQUENCE membermap_add restart with 2;

    update epmms_membermap set membermap_verify_date=now(),membermap_add_date=now() where membermap_id=1;

    update epmms_membermap set membermap_parent_id=null,membermap_order=1,membermap_layer=1,membermap_recommend_id=null,

    membermap_recommend_layer=1,membermap_path='/1',membermap_recommend_path='/1',membermap_is_active=1,

    membermap_layer_order=1 where membermap_id=1;

  end if;



  update epmms_membermap as m set membermap_product_count=t.membertype_bill,membermap_money=t.membertype_money from epmms_membertype as t where m.membermap_membertype_level=t.membertype_level;

  update epmms_membermap2 as m set membermap_bill_count=t.membertype_bill,membermap_money=t.membertype_money from epmms_membertype as t where m.membermap_membertype=t.membertype_level;

  ALTER SEQUENCE membermap_verify restart with 2;

  ALTER SEQUENCE award_period restart;



  --重置系统状态

  update epmms_system_status set system_status_expenses=0,system_status_income=0,system_status_withdrawals=0,system_status_start_date=now(),system_status_verify_seq=1,system_status_verify_seq2=0,system_status_groupmap_seq=1,system_status_foundation=0,system_status_award_period=0;

  insert into epmms_finance(finance_award,finance_type,finance_memberinfo_id) select iif(is_debug=1 and finance_type_id=2,100000000,0),finance_type_id,1 from epmms_finance_type;

	 insert into epmms_finance(finance_award,finance_type,finance_memberinfo_id) select iif(is_debug=1 and finance_type_id=3,100000000,0),finance_type_id,1 from epmms_finance_type;

END;
$$;


--
-- Name: epmms_finance_replace_before_tr(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_finance_replace_before_tr() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
	exist BIGINT default 0;
BEGIN
	--更新帐户金额
  select count(*) into exist from epmms_finance
  where finance_memberinfo_id=NEW.finance_memberinfo_id
  and finance_type=new.finance_type;
  if exist>0 then
  	update epmms_finance
    set finance_award=finance_award+new.finance_award,finance_mod_date=current_timestamp
    where finance_memberinfo_id=NEW.finance_memberinfo_id
    and finance_type=new.finance_type;
    return null;
  end if;
  return new;
END;
$$;


--
-- Name: epmms_get_cap_money(numeric, numeric, numeric); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_get_cap_money(cap_money numeric, award_money numeric, acc_money numeric) RETURNS numeric
    LANGUAGE plpgsql STABLE
    AS $$
BEGIN
	acc_money:=COALESCE(acc_money,0);
	if cap_money is null then
    	return award_money;
    elseif abs(cap_money)>=abs(award_money)+abs(acc_money) then
    	return award_money;
    elseif abs(cap_money)>=abs(acc_money) then
    	return cap_money-acc_money;
    else 
    	return 0;
	end if;
END;
$$;


--
-- Name: FUNCTION epmms_get_cap_money(cap_money numeric, award_money numeric, acc_money numeric); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION public.epmms_get_cap_money(cap_money numeric, award_money numeric, acc_money numeric) IS '计算封顶值
null表示不封顶';


--
-- Name: epmms_layer_insert_update(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_layer_insert_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    if exists(select * from epmms_layer where layer_member_id=new.layer_member_id and layer_layer=new.layer_layer) then
       return null;
    end if;
    return new;
END;
$$;


--
-- Name: epmms_next_sn(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_next_sn() RETURNS character
    LANGUAGE plpgsql
    AS $$
BEGIN
 return right('000000000' || nextval('serial_number'),10)::char(10);
END;
$$;


--
-- Name: epmms_send_message(bigint); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_send_message(message_id bigint) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
  sender bigint;
  receiver bigint;
BEGIN
	select messages_receiver_member_id,messages_sender_member_id
   into receiver,sender
  from epmms_messages where messages_id=message_id;
  if receiver is null and sender is null then
  	insert into epmms_messages(messages_title,messages_content,
    messages_sender_member_id,messages_receiver_member_id,
    messages_session,messages_member_id)
    select messages_title,messages_content,
    messages_sender_member_id,memberinfo_id,
    messages_session,memberinfo_id
    from epmms_messages,epmms_memberinfo
    where messages_id=message_id;
  else
  	insert into epmms_messages(messages_title,messages_content,
    messages_sender_member_id,messages_receiver_member_id,
    messages_session,messages_member_id)
    select messages_title,messages_content,
    messages_sender_member_id,messages_receiver_member_id,
    messages_session,messages_receiver_member_id
    from epmms_messages where messages_id=message_id;
  end if;
END;
$$;


--
-- Name: epmms_upgrade_member(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_upgrade_member(member_id integer, award_period integer DEFAULT NULL::integer, award_sum_type integer DEFAULT 1, award_calc integer DEFAULT 1, award_calc_type integer DEFAULT 2) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
    award_type RECORD;
BEGIN
    --before
    for award_type in (select award_type_id,award_type_class,award_group_group
    from epmms_award_type,epmms_award_group
    where award_group_type=award_type_id
    and award_group_group=award_sum_type
    and award_calc=any(award_group_calc)
    and award_type_is_upgrade=1
    and award_time='before'
    order by award_group_group asc,award_type_order asc)
    loop
          execute 'select '|| award_type.award_type_class || '($1,$2,$3,$4,$5)' using member_id,award_period::integer,award_type.award_type_id,award_type.award_group_group,award_calc_type;
    end loop;

    --计算奖金
    for award_type in (select award_type_id,award_type_class,award_group_group
    from epmms_award_type,epmms_award_group
    where award_group_type=award_type_id
    and award_group_group=award_sum_type
    and award_calc=any(award_group_calc)
    and award_type_is_upgrade=1
    and award_time is null
    order by award_group_group asc,award_type_order asc)
    loop
          --raise notice 'class:%',award_type.award_type_class ;
          execute 'select '|| award_type.award_type_class || '($1,$2,$3,$4,$5)' using member_id,award_period::integer,award_type.award_type_id,award_type.award_group_group,award_calc_type;
    end loop;
    --汇总打入帐户
    
    --B网汇总
    if current_database()='140805' and award_sum_type=2 then
       perform epmms_award_sum_b(member_id,award_period);
    else
       perform epmms_award_sum(member_id,award_period,award_sum_type);
    end if;
    insert into epmms_ratio(ratio_value,ratio_add_date) select system_status_expenses/iif(system_status_income=0,null,system_status_income),now() from epmms_system_status;
    --after
    for award_type in (select award_type_id,award_type_class,award_group_group
    from epmms_award_type,epmms_award_group
    where award_group_type=award_type_id
    and award_is_calc=1
    and award_group_group=award_sum_type
    and award_calc=any(award_group_calc)
    and award_time='after'
    order by award_group_group asc,award_type_order asc)
    loop
          execute 'select '|| award_type.award_type_class || '($1,$2,$3,$4,$5)' using member_id,award_period::integer,award_type.award_type_id,award_type.award_group_group,award_calc_type;
    end loop;
END;
$_$;


--
-- Name: epmms_verify_award_date(integer, bigint, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_verify_award_date(member_id integer DEFAULT NULL::integer, award_period bigint DEFAULT NULL::bigint, award_sum_type integer DEFAULT 1, award_calc integer DEFAULT 1, award_calc_type integer DEFAULT 1, custom_days integer DEFAULT 1) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	award_type RECORD;
	is_empty smallint default 0;
    calc_period integer;
    calc_count integer default 0;
    member record;
BEGIN
   case award_calc_type
        WHEN 10 then
           for member in select * from membermap_day loop
               member_id:=member.membermap_id;
               --空单
               select membermap_is_empty into is_empty from epmms_membermap where membermap_id=member_id;
               if is_empty=1 then
                  continue;
               end if;
               award_period:=nextval('award_period');
               perform epmms_verify_award_group(member_id,award_period,award_sum_type,award_calc,award_calc_type);
               perform epmms_verify_award_group(member_id,award_period,2,award_calc,award_calc_type);
               perform epmms_verify_award_group(member_id,award_period,3,award_calc,award_calc_type);
           end loop;
        when 11 then
           for member in select * from membermap_week loop
               member_id:=member.membermap_id;
               --空单
               select membermap_is_empty into is_empty from epmms_membermap where membermap_id=member_id;
               if is_empty=1 then
                  continue;
               end if;
               award_period:=nextval('award_period');
               perform epmms_verify_award_group(member_id,award_period,award_sum_type,award_calc,award_calc_type);
           end loop;
        when 12 then
           for member in select * from membermap_month loop
               member_id:=member.membermap_id;
               --空单
               select membermap_is_empty into is_empty from epmms_membermap where membermap_id=member_id;
               if is_empty=1 then
                  continue;
               end if;
               award_period:=nextval('award_period');
               perform epmms_verify_award_group(member_id,award_period,award_sum_type,award_calc,award_calc_type);
           end loop;
        when 13 then
           for member in select * from membermap_year loop
               member_id:=member.membermap_id;
               --空单
               select membermap_is_empty into is_empty from epmms_membermap where membermap_id=member_id;
               if is_empty=1 then
                  continue;
               end if;
               award_period:=nextval('award_period');
               perform epmms_verify_award_group(member_id,award_period,award_sum_type,award_calc,award_calc_type);
           end loop;
        when 14 then
           for member in select * from week_bond loop
               member_id:=member.membermap_id;
               --空单
               select membermap_is_empty into is_empty from epmms_membermap where membermap_id=member_id;
               if is_empty=1 then
                  continue;
               end if;
               award_period:=nextval('award_period');
               perform epmms_verify_award_group(member_id,award_period,award_sum_type,award_calc,award_calc_type);
           end loop;
         when 15 then
           for member in select * from membermap_week_615 loop
               member_id:=member.membermap_id;
               --空单
               select membermap_is_empty into is_empty from epmms_membermap where membermap_id=member_id;
               if is_empty=1 then
                  continue;
               end if;
               award_period:=nextval('award_period');
               perform epmms_verify_award_group(member_id,award_period,award_sum_type,award_calc,award_calc_type);
           end loop;
         when 16 then
           for member in select * from membermap_week_65 loop
               member_id:=member.membermap_id;
               --空单
               select membermap_is_empty into is_empty from epmms_membermap where membermap_id=member_id;
               if is_empty=1 then
                  continue;
               end if;
               award_period:=nextval('award_period');
               perform epmms_verify_award_group(member_id,award_period,award_sum_type,award_calc,award_calc_type);
           end loop;
        when 20 then
           for member in select * from membermap_custom(custom_days) loop
               member_id:=member.membermap_id;
               --空单
               select membermap_is_empty into is_empty from epmms_membermap where membermap_id=member_id;
               if is_empty=1 then
                  continue;
               end if;
               award_period:=nextval('award_period');
               perform epmms_verify_award_group(member_id,award_period,award_sum_type,award_calc,award_calc_type);
           end loop;
   end case;
END;
$$;


--
-- Name: epmms_verify_award_group(integer, bigint, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_verify_award_group(member_id integer DEFAULT NULL::integer, award_period bigint DEFAULT NULL::bigint, award_sum_type integer DEFAULT 1, award_calc integer DEFAULT 1, award_calc_type integer DEFAULT 1) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	award_type RECORD;
	is_empty smallint default 0;
BEGIN
    --before
    for award_type in (select award_type_id,award_type_class,award_group_group
    from epmms_award_type,epmms_award_group
    where award_group_type=award_type_id
    and award_is_calc=1
    and award_group_group=award_sum_type
    and award_calc=any(award_group_calc)
    and award_time='before'
    order by award_group_group asc,award_type_order asc)
    loop
          execute 'select '|| award_type.award_type_class || '($1,$2,$3,$4,$5)' using member_id,award_period::integer,award_type.award_type_id,award_type.award_group_group,award_calc_type;
    end loop;
    --空单
	select membermap_is_empty into is_empty from epmms_membermap where membermap_id=member_id;
    if is_empty=1 then
       return ;
    end if;
    --计算奖金
    for award_type in (select award_type_id,award_type_class,award_group_group
    from epmms_award_type,epmms_award_group
    where award_group_type=award_type_id
    and award_is_calc=1
    and award_group_group=award_sum_type
    and award_calc=any(award_group_calc)
    and award_time is null
    order by award_group_group asc,award_type_order asc)
    loop
          execute 'select '|| award_type.award_type_class || '($1,$2,$3,$4,$5)' using member_id,award_period::integer,award_type.award_type_id,award_type.award_group_group,award_calc_type;
    end loop;
    --汇总打入帐户
    
    --B网汇总
    /*
    if award_sum_type=2 then
       perform epmms_award_sum_b(member_id,award_period);
    else
       perform epmms_award_sum(member_id,award_period);
    end if;*/
    perform epmms_award_sum(member_id,award_period,award_sum_type);
    insert into epmms_ratio(ratio_value,ratio_add_date) select system_status_expenses/iif(system_status_income=0,null,system_status_income),now() from epmms_system_status;
    --after
    for award_type in (select award_type_id,award_type_class,award_group_group
    from epmms_award_type,epmms_award_group
    where award_group_type=award_type_id
    and award_is_calc=1
    and award_group_group=award_sum_type
    and award_calc=any(award_group_calc)
    and award_time='after'
    order by award_group_group asc,award_type_order asc)
    loop
          execute 'select '|| award_type.award_type_class || '($1,$2,$3,$4,$5)' using member_id,award_period::integer,award_type.award_type_id,award_type.award_group_group,award_calc_type;
    end loop;
END;
$_$;


--
-- Name: epmms_verify_award_group_b(integer, bigint, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_verify_award_group_b(member_id integer DEFAULT NULL::integer, award_period bigint DEFAULT NULL::bigint, award_sum_type integer DEFAULT 1, award_calc integer DEFAULT 1, award_calc_type integer DEFAULT 1, member_id_b integer DEFAULT NULL::integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	award_type RECORD;
	is_empty smallint default 0;
BEGIN
    --before
    for award_type in (select award_type_id,award_type_class,award_group_group
    from epmms_award_type,epmms_award_group
    where award_group_type=award_type_id
    and award_is_calc=1
    and award_group_group=award_sum_type
    and award_calc=any(award_group_calc)
    and award_time='before'
    order by award_group_group asc,award_type_order asc)
    loop
          execute 'select '|| award_type.award_type_class || '($1,$2,$3,$4,$5)' using member_id,award_period::integer,award_type.award_type_id,award_type.award_group_group,award_calc_type;
    end loop;
    --空单
	select membermap_is_empty into is_empty from epmms_membermap where membermap_id=member_id;
    if is_empty=1 then
       return ;
    end if;
    --计算奖金

    for award_type in (select award_type_id,award_type_class,award_group_group
    from epmms_award_type,epmms_award_group
    where award_group_type=award_type_id
    and award_is_calc=1
    and award_group_group=award_sum_type
    and award_calc=any(award_group_calc)
    and award_time is null
    order by award_group_group asc,award_type_order asc)
    loop
          --raise notice 'class:%',award_type.award_type_class ;
          execute 'select '|| award_type.award_type_class || '($1,$2,$3,$4,$5)' using member_id,award_period::integer,award_type.award_type_id,award_type.award_group_group,award_calc_type;
    end loop;
    --汇总打入帐户
    
    --B网汇总
    perform epmms_award_sum_b(member_id,award_period,member_id_b);

    insert into epmms_ratio(ratio_value,ratio_add_date) select system_status_expenses/iif(system_status_income=0,null,system_status_income),now() from epmms_system_status;
    --after
    for award_type in (select award_type_id,award_type_class,award_group_group
    from epmms_award_type,epmms_award_group
    where award_group_type=award_type_id
    and award_is_calc=1
    and award_group_group=award_sum_type
    and award_calc=any(award_group_calc)
    and award_time='after'
    order by award_group_group asc,award_type_order asc)
    loop
          execute 'select '|| award_type.award_type_class || '($1,$2,$3,$4,$5)' using member_id,award_period::integer,award_type.award_type_id,award_type.award_group_group,award_calc_type;
    end loop;
END;
$_$;


--
-- Name: epmms_verify_award_order(integer, bigint, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.epmms_verify_award_order(member_id integer DEFAULT NULL::integer, award_period bigint DEFAULT NULL::bigint, award_sum_type integer DEFAULT 1, award_calc integer DEFAULT 1, award_calc_type integer DEFAULT 1, order_id integer DEFAULT NULL::integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
	award_type RECORD;
	is_empty smallint default 0;
BEGIN
    --计算奖金

    for award_type in (select award_type_id,award_type_class,award_group_group
    from epmms_award_type,epmms_award_group
    where award_group_type=award_type_id
    and award_is_calc=1
    and award_group_group=award_sum_type
    and award_calc=any(award_group_calc)
    and award_time is null
    order by award_group_group asc,award_type_order asc)
    loop
        execute 'select '|| award_type.award_type_class || '($1,$2,$3,$4,$5,$6)' using member_id,award_period::integer,award_type.award_type_id,award_type.award_group_group,award_calc_type,order_id;
    end loop;
    --汇总打入帐户

    perform epmms_award_sum(member_id,award_period,award_sum_type);
    insert into epmms_ratio(ratio_value,ratio_add_date) select system_status_expenses/iif(system_status_income=0,null,system_status_income),now() from epmms_system_status;
END;
$_$;


--
-- Name: gen_finance_log(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.gen_finance_log() RETURNS void
    LANGUAGE plpgsql
    AS $$

DECLARE

    award_period integer;

BEGIN

    select system_status_award_period into award_period from epmms_system_status;

    update epmms_system_status set system_status_award_period=currval('award_period');

    insert into epmms_log(log_category,log_source,log_operate,log_target,log_value,log_user,log_status)

    select 'finance','奖金','结算',min(award_info.memberinfo_account),sum(s.award_period_sum_currency),min(award_info.memberinfo_account),0

    from epmms_award_period_sum as s,epmms_memberinfo as award_info

    where s.award_period_sum_period>award_period and award_info.memberinfo_id=s.award_period_sum_memberinfo_id

    group by s.award_period_sum_memberinfo_id,s.award_period_sum_type;

    

    EXCEPTION

    WHEN object_not_in_prerequisite_state THEN

      NULL;

END;

$$;


--
-- Name: gen_parent_relation(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.gen_parent_relation(my_id integer, parent_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_parent_relation(parent_relation_member_id,parent_relation_upper_id)
    select my_id,parent_relation_upper_id
    from epmms_parent_relation
    where parent_relation_member_id=parent_id;
    insert into epmms_parent_relation(parent_relation_member_id,parent_relation_upper_id)
    values
    (my_id,parent_id);
END;
$$;


--
-- Name: gen_recommend_relation(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.gen_recommend_relation(my_id integer, parent_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    insert into epmms_recommend_relation(recommend_relation_member_id,recommend_relation_upper_id)
    select my_id,recommend_relation_upper_id
    from epmms_recommend_relation
    where recommend_relation_member_id=parent_id;
    insert into epmms_recommend_relation(recommend_relation_member_id,recommend_relation_upper_id)
    values
    (my_id,parent_id);
END;
$$;


--
-- Name: gen_sum_config(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.gen_sum_config() RETURNS void
    LANGUAGE plpgsql
    AS $$

BEGIN

    truncate table epmms_sum_config;

    alter SEQUENCE epmms_sum_config_sum_config_id_seq restart;

    insert into epmms_sum_config(sum_type_id,sum_config_date) select sum_type_id,'period' from epmms_sum_type;

    insert into epmms_sum_config(sum_type_id,sum_config_date) select sum_type_id,'day' from epmms_sum_type;

    insert into epmms_sum_config(sum_type_id,sum_config_date) select sum_type_id,'week' from epmms_sum_type;

    insert into epmms_sum_config(sum_type_id,sum_config_date) select sum_type_id,'month' from epmms_sum_type;

    insert into epmms_sum_config(sum_type_id,sum_config_date) select sum_type_id,'year' from epmms_sum_type;

    insert into epmms_sum_config(sum_type_id,sum_config_date) select sum_type_id,'total' from epmms_sum_type;

END;

$$;


--
-- Name: generation_ratio(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.generation_ratio() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	insert into epmms_ratio(ratio_value,ratio_add_date)
    select system_status_expenses/system_status_income,now() from epmms_system_status where system_status_income>0 limit 1;
END;
$$;


--
-- Name: genusername3(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.genusername3() RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
    lower integer;
    upper integer;
    username text;
BEGIN
        lower:=1000000;
        upper:=9999999;
        
        loop
            username:= cast(ceiling(random()*(upper-lower)+lower) as text);
            if not exists(select 1 from epmms_membermap3 where membermap_name=username) then
               exit;
            end if;
        end loop;
		return username;
END;
$$;


--
-- Name: get_award_value(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_award_value(award_type integer) RETURNS numeric
    LANGUAGE plpgsql STABLE
    AS $$
DECLARE
  award_money numeric(16,2);
BEGIN
  select award_config_currency into award_money from  epmms_award_config where award_config_type_id=award_type;
 	return award_money;
END;
$$;


--
-- Name: get_award_value_member(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_award_value_member(award_type integer, member_type integer) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
	award_money numeric(16,2);
BEGIN
	select c.award_config_currency*t.membertype_bill into award_money from  epmms_award_config as c,epmms_membertype as t where c.award_config_type_id=award_type
    and t.membertype_level=member_type;
	return award_money;
END;
$$;


--
-- Name: get_bill_money(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_bill_money() RETURNS integer
    LANGUAGE plpgsql IMMUTABLE
    AS $$
BEGIN
    return (select min(membertype_money) from epmms_membertype)::integer;
END;
$$;


--
-- Name: get_config_award(integer, numeric); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_config_award(award_type integer, member_money numeric DEFAULT NULL::numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
  award_money numeric(16,2);
  award_is_percent smallint;
BEGIN
  select award_config_currency,award_config_is_percent into award_money,award_is_percent from  epmms_award_config where award_config_type_id=award_type;
	if award_is_percent=1 then
  	return award_money*member_money/100;
  else
  	return award_money;
  end if;
END;
$$;


--
-- Name: get_date_period(date, date, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_date_period(date1 date, date2 date, days integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$

BEGIN

	return (date2-date1)/days;

END;

$$;


--
-- Name: get_group7_id(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_group7_id(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
BEGIN
    return (select p.membermap_id from epmms_membermap as my,epmms_membermap as p
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '%'
    and my.membermap_layer-p.membermap_layer=(my.membermap_layer-1)%3);
END;
$$;


--
-- Name: get_l_member_id(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_l_member_id(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
    a_bill integer;
    b_bill integer;
BEGIN
  select COALESCE((membermap_product_count+membermap_under_product_count),0) into a_bill from epmms_membermap as child
  where child.membermap_parent_id=member_id and child.membermap_is_verify=1 and child.membermap_order=1;

  select COALESCE((membermap_product_count+membermap_under_product_count),0) into b_bill from epmms_membermap as child
  where child.membermap_parent_id=member_id and child.membermap_is_verify=1 and child.membermap_order=2; 
  if a_bill<=b_bill then
      return (select membermap_id from epmms_membermap my
    where my.membermap_parent_id=member_id and my.membermap_order=1);
  else
      return (select membermap_id from epmms_membermap my
    where my.membermap_parent_id=member_id and my.membermap_order=2);
  end if;
END;
$$;


--
-- Name: get_l_membermap(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_l_membermap(member_id integer) RETURNS SETOF public.epmms_membermap
    LANGUAGE plpgsql
    AS $$
BEGIN
    return query (select under.* from epmms_membermap as m,epmms_membermap as under 
    where m.membermap_id=get_l_member_id(member_id) and under.membermap_path like m.membermap_path || '%');
END;
$$;


--
-- Name: get_l_pair(integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_l_pair(member_id integer, member_order integer, pair2 integer DEFAULT 1) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
  ret_count integer:=0;
BEGIN
  if member_order=1 then
     select least(left_product_count-status_pair,(right_product_count-status_pair2)/pair2) into ret_count from epmms_memberstatus where status_id=member_id;
  end if;
  if member_order=2 then
     select least((left_product_count-status_pair)/pair2,right_product_count-status_pair2) into ret_count from epmms_memberstatus where status_id=member_id;
  end if;
  return ret_count;
END;
$$;


--
-- Name: get_l_under_greater_member_count(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_l_under_greater_member_count(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
  bill_count integer;
BEGIN
	if (select membermap_child_number from epmms_membermap where membermap_id=member_id)<2 then
  	return 0;
  end if;
  select COALESCE(min(c_count),0) into bill_count from (select (
  	select count(*) from epmms_membermap where membermap_path like child.membermap_path || '%' and membermap_membertype_level_old>=my.membermap_membertype_level_old
  )  as c_count from epmms_membermap as my,epmms_membermap as child 
  where my.membermap_id=member_id and child.membermap_parent_id=my.membermap_id and child.membermap_is_verify=1) as aa;
	return bill_count;
END;
$$;


--
-- Name: get_l_under_money(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_l_under_money(member_id integer) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
  under_money numeric(16,2);
BEGIN
  if (select membermap_child_number from epmms_membermap where membermap_id=member_id)<(select config_map_branch from epmms_config_map limit 1) then
      return 0;
  end if;
  select COALESCE(min((select sum(membermap_money) from epmms_membermap where membermap_path like child.membermap_path || '%')),0) into under_money from epmms_membermap as child
  where child.membermap_parent_id=member_id and child.membermap_is_verify=1;
  return under_money;
END;
$$;


--
-- Name: get_l_under_product_count(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_l_under_product_count(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
  bill_count integer;
BEGIN
  if (select membermap_child_number from epmms_membermap where membermap_id=member_id)=0 then
      return 0;
  end if;
  select COALESCE(min(membermap_product_count+membermap_under_product_count),0) into bill_count from epmms_membermap as child
  where child.membermap_parent_id=member_id and child.membermap_is_verify=1;
  return bill_count;
END;
$$;


--
-- Name: get_l_under_product_count(integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_l_under_product_count(member_id integer, member_order integer, pair2 integer DEFAULT 1) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
  ret_count integer:=0;
BEGIN
  if member_order=1 then
     select left_product_count into ret_count from epmms_memberstatus where status_id=member_id;
  end if;
  if member_order=2 then
     select right_product_count into ret_count from epmms_memberstatus where status_id=member_id;
  end if;
  return ret_count/pair2;
END;
$$;


--
-- Name: get_l_under_product_count2(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_l_under_product_count2(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
  bill_count integer;
BEGIN
  if (select membermap_child_number from epmms_membermap2 where membermap_id=member_id)<(select config_map_branch from epmms_config_map limit 1) then
      return 0;
  end if;
  select COALESCE(min(membermap_bill_count+membermap_under_bill_count),0) into bill_count from epmms_membermap2 as child
  where child.membermap_parent_id=member_id and child.membermap_is_verify=1;
  return bill_count;
END;
$$;


--
-- Name: get_l_under_product_count90(integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_l_under_product_count90(member_id integer, member_order integer, pair2 integer DEFAULT 1) RETURNS integer
    LANGUAGE plpgsql
    AS $$

DECLARE

  ret_count integer:=0;

BEGIN

  if member_order=1 then

     select left_product_count into ret_count from epmms_memberstatus where status_id=member_id;

  end if;

  if member_order=2 then

     select right_product_count into ret_count from epmms_memberstatus where status_id=member_id;

  end if;

  return ret_count/pair2;

END;

$$;


--
-- Name: get_l_under_product_count_charge(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_l_under_product_count_charge(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
  bill_count integer:=0;
  charge_id integer;
BEGIN
  charge_id:=get_l_under_product_count_id(member_id);
  if (select membermap_child_number from epmms_membermap where membermap_id=member_id)<(select config_map_branch from epmms_config_map limit 1)-1 then
  	return 0;
  end if;
  select COALESCE(min(iif(child.membermap_id=charge_id,get_under_product_count_charge(child.membermap_id,member_id),membermap_product_count+membermap_under_product_count)),0) into bill_count from epmms_membermap as child
  where child.membermap_parent_id=member_id and child.membermap_is_verify=1;
  if charge_id is null then
     return least(bill_count,(select finance_award::integer/get_bill_money() from epmms_finance where finance_memberinfo_id=member_id and finance_type=3));
  end if;
  return bill_count;
END;
$$;


--
-- Name: get_l_under_product_count_date(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_l_under_product_count_date(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$

DECLARE

  left_product_count integer;

  right_product_count integer;

BEGIN

  perform reset_product_count(member_id);

  select left_product_count2,right_product_count2 into left_product_count,right_product_count from epmms_memberstatus where status_id=member_id;

  return least(COALESCE(left_product_count,0),COALESCE(right_product_count,0));

END;

$$;


--
-- Name: get_l_under_product_count_date2(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_l_under_product_count_date2(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$

DECLARE

  left_product_count integer;

  right_product_count integer;

BEGIN

  select left_product_count3,right_product_count3 into left_product_count,right_product_count from epmms_memberstatus where status_id=member_id;

  return least(COALESCE(left_product_count,0),COALESCE(right_product_count,0));

END;

$$;


--
-- Name: get_l_under_product_count_id(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_l_under_product_count_id(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
  bill_count integer;
BEGIN
  bill_count:=get_l_under_product_count(member_id);
  return (select membermap_id from epmms_membermap where membermap_parent_id=member_id and membermap_product_count+membermap_under_product_count=bill_count limit 1);
END;
$$;


--
-- Name: get_l_under_product_count_lr(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_l_under_product_count_lr(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
  bill_count integer;
BEGIN
  select iif(left_product_count<right_product_count,left_product_count,right_product_count) into bill_count from epmms_memberstatus where status_id=member_id;
  return bill_count;
END;
$$;


--
-- Name: get_layer_order(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_layer_order(member_id integer) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
    branch_number integer;
    layer_order numeric(50,0);
BEGIN
    branch_number:=(select config_map_branch from epmms_config_map limit 1);
    layer_order:=(select sum((p.membermap_order-1)*branch_number^(my.membermap_layer-p.membermap_layer)) from epmms_membermap as my,epmms_membermap as p
    where my.membermap_id=member_id and my.membermap_path like p.membermap_path || '%');
    return layer_order+1;
END;
$$;


--
-- Name: get_layer_order2(numeric); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_layer_order2(member_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
    branch_number integer;
    layer_order numeric(50,0);
BEGIN
    branch_number:=(select config_map_branch from epmms_config_map limit 1);
    layer_order:=(select sum((p.membermap_order-1)*branch_number^(my.membermap_layer-p.membermap_layer)) from epmms_membermap2 as my,epmms_membermap2 as p
    where my.membermap_id=member_id and my.membermap_path like p.membermap_path || '%');
    return layer_order+1;
END;
$$;


--
-- Name: get_layer_order4(numeric); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_layer_order4(member_id numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
    branch_number integer;
    layer_order numeric(50,0);
BEGIN
    branch_number:=4;
    layer_order:=(select sum((p.membermap_order-1)*branch_number^(my.membermap_layer-p.membermap_layer)) from epmms_membermap4 as my,epmms_membermap2 as p
    where my.membermap_id=member_id and my.membermap_path like p.membermap_path || '%');
    return layer_order+1;
END;
$$;


--
-- Name: get_layer_pair_money(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_layer_pair_money(member_id integer, layer integer) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
    left_right_cnt integer;
    l_money numeric(16,2);
BEGIN
    select count(*) ,min(lr.membermap_money) into left_right_cnt,l_money from (
    select p.membermap_id,p.membermap_money from epmms_membermap as my,epmms_membermap as p
    where my.membermap_id=member_id
    and p.membermap_path like my.membermap_path || '/%'
    and p.membermap_layer=layer
    and right(p.membermap_path,(layer-my.membermap_layer)*2) = lpad('',(layer-my.membermap_layer)*2,'/1')
    union all
    select p.membermap_id,p.membermap_money from epmms_membermap as my,epmms_membermap as p
    where my.membermap_id=member_id
    and p.membermap_path like my.membermap_path || '/%'
    and p.membermap_layer=layer
    and right(p.membermap_path,(layer-my.membermap_layer)*2) = lpad('',(layer-my.membermap_layer)*2,'/2')
    )as lr;
    if left_right_cnt=2 then
       return l_money;
    else
       return null;
    end if;
END;
$$;


--
-- Name: get_left_product_count(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_left_product_count(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
    mycount integer;
BEGIN
    select membermap_product_count+membermap_under_product_count into mycount from epmms_membermap as c
    where membermap_parent_id=member_id and membermap_order=1;
    return coalesce(mycount,0);
END;
$$;


--
-- Name: get_loc(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_loc(down_path text, up_path text) RETURNS integer
    LANGUAGE plpgsql IMMUTABLE
    AS $$
BEGIN
    if down_path=up_path then
       return null;
    end if;
    if down_path ='' then
       return null;
    end if;
    if up_path ='' then
       return null;
    end if;
    return cast(substr(down_path , length(up_path)+2 , 1) as integer);
EXCEPTION
WHEN invalid_text_representation THEN
     --raise exception 'down:%,up:%',down_path,up_path;
     return null;
END;
$$;


--
-- Name: get_order_under_product_count(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_order_under_product_count(member_id integer, member_order integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
  ret_count integer:=0;
BEGIN
  if member_order=1 then
     select left_product_count into ret_count from epmms_memberstatus where status_id=member_id;
  end if;
  if member_order=2 then
     select right_product_count into ret_count from epmms_memberstatus where status_id=member_id;
  end if;
  return ret_count;
END;
$$;


--
-- Name: get_order_under_product_count2(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_order_under_product_count2(member_id integer, member_order integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
  ret_count integer;
BEGIN
  ret_count:=(select membermap_bill_count+membermap_under_bill_count from epmms_membermap2 where membermap_parent_id=member_id
  and membermap_order=member_order and membermap_is_verify=1);
  return COALESCE(ret_count,0);
END;
$$;


--
-- Name: get_order_under_product_count3(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_order_under_product_count3(member_id integer, member_order integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
  ret_count integer;
BEGIN
  ret_count:=(select membermap_product_count+membermap_under_product_count from epmms_membermap where membermap_parent_id=member_id
  and membermap_order=member_order and membermap_is_verify=1);
  return COALESCE(ret_count,0);
END;
$$;


--
-- Name: get_order_under_product_count_date(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_order_under_product_count_date(member_id integer, member_order integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$

DECLARE

  left_product_count integer;

  right_product_count integer;

BEGIN

  perform reset_product_count(member_id);

 

  select left_product_count2,right_product_count2 into left_product_count,right_product_count from epmms_memberstatus where status_id=member_id;

  

  if member_order=1 then

  	return left_product_count;

  else

  	return right_product_count;

  end if;

END;

$$;


--
-- Name: get_order_under_product_count_date2(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_order_under_product_count_date2(member_id integer, member_order integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$

DECLARE

  left_product_count integer;

  right_product_count integer;

BEGIN

  select left_product_count3,right_product_count3 into left_product_count,right_product_count from epmms_memberstatus ;

  

  if member_order=1 then

  	return left_product_count;

  else

  	return right_product_count;

  end if;

END;

$$;


--
-- Name: get_over_currency(numeric, numeric, numeric); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_over_currency(award_total numeric, award_period numeric, award_over numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
BEGIN
award_total:=COALESCE(award_total,0);
award_period:=coalesce(award_period,0);
	case
		when award_total>award_over then
  		return award_period;
  	when award_total+award_period<=award_over then
  		return 0;
    when award_total+award_period>award_over then
    	return award_total+award_period-award_over;
  end case;
END;
$$;


--
-- Name: get_pairs(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_pairs(left_pair integer DEFAULT 0, left_bill integer DEFAULT 0, right_pair integer DEFAULT 0, right_bill integer DEFAULT 0, pair_type integer DEFAULT 1) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
	remain_left integer;
    remain_right integer;
    align_bill integer;
BEGIN
	remain_left:=left_bill-left_pair;
    remain_right:=right_bill-right_pair;
    if remain_left<remain_right then
    	align_bill=remain_right/pair_type;
    	return least(align_bill,remain_left);
	else
    	align_bill=remain_left/pair_type;
        return least(align_bill,remain_right);
    end if;
END;
$$;


--
-- Name: get_pairs_bill(integer, integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_pairs_bill(left_pair integer DEFAULT 0, left_bill integer DEFAULT 0, right_pair integer DEFAULT 0, right_bill integer DEFAULT 0, pair_type integer DEFAULT 1, dir integer DEFAULT 0) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
	remain_left integer;
    remain_right integer;
    align_bill integer;
    pairs integer;
BEGIN
	remain_left=left_bill-left_pair;
    remain_right=right_bill-right_pair;
    if remain_left<remain_right then
    	align_bill=remain_right/pair_type;
    	pairs=least(align_bill,remain_left);
        if dir=0 then
        	return pairs;
        else
        	return pairs*pair_type;
        end if;
	else
    	align_bill=remain_left/pair_type;
        pairs=least(align_bill,remain_right);
        if dir=0 then
        	return pairs*pair_type;
        else
        	return pairs;
        end if;
    end if;
END;
$$;


--
-- Name: get_pairs_bill_one(integer, integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_pairs_bill_one(left_pair integer DEFAULT 0, left_bill integer DEFAULT 0, right_pair integer DEFAULT 0, right_bill integer DEFAULT 0, pair_type integer DEFAULT 1, dir integer DEFAULT 0) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
	remain_left integer;
    remain_right integer;
    align_bill integer;
    pairs integer;
BEGIN
	remain_left=left_bill-left_pair;
    remain_right=right_bill-right_pair;
    if remain_left<remain_right then
    	if remain_left=0 then
        	pairs=0;
        else
    		pairs=iif(remain_right/remain_left>pair_type-1,1,0);
        end if;
        if dir=0 then
        	return pairs;
        else
        	return pairs*pair_type;
        end if;
	else
    	if remain_right=0 then
        	pairs=0;
        else
        	pairs=iif(remain_left/remain_right>pair_type-1,1,0);
        end if;
        if dir=0 then
        	return pairs*pair_type;
        else
        	return pairs;
        end if;
    end if;
END;
$$;


--
-- Name: get_pairs_one(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_pairs_one(left_pair integer DEFAULT 0, left_bill integer DEFAULT 0, right_pair integer DEFAULT 0, right_bill integer DEFAULT 0, pair_type integer DEFAULT 1) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
	remain_left integer;
    remain_right integer;
    align_bill integer;
BEGIN
	remain_left:=left_bill-left_pair;
    remain_right:=right_bill-right_pair;
    if remain_left<remain_right then
    	if remain_left=0 THEN
        	return 0;
        else
    		return iif(remain_right/remain_left>pair_type-1,1,0);
        end if;
	else
    	if remain_right=0 then
        	return 0;
        else
        	return iif(remain_left/remain_right>pair_type-1,1,0);
        end if;
    end if;
END;
$$;


--
-- Name: get_pond_no(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_pond_no(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
	pno integer=null;
BEGIN
  select c.pond_no into pno
  from epmms_config_pond as c
  where get_l_under_product_count(member_id)<@c.pond_achievement;
  return pno;
END;
$$;


--
-- Name: get_recommend_group(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_recommend_group(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
	g_id INTEGER;
BEGIN
	select g.groupmap_group_id into g_id
    from epmms_membermap as m,epmms_groupmap as g
    where membermap_id=member_id and g.groupmap_id=m.membermap_recommend_id;
    return g_id;
END;
$$;


--
-- Name: get_right_product_count(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_right_product_count(member_id integer) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
    mycount integer;
BEGIN
    select membermap_product_count+membermap_under_product_count into mycount from epmms_membermap as c
    where membermap_parent_id=member_id and membermap_order=2;
    return coalesce(mycount,0);
END;
$$;


--
-- Name: get_suffix(text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_suffix(long_path text, short_path text) RETURNS text
    LANGUAGE plpgsql
    AS $$
BEGIN
	RETURN right(long_path,length(long_path)-length(short_path));
END;
$$;


--
-- Name: get_sum_id(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_sum_id(award_type integer) RETURNS integer
    LANGUAGE plpgsql STABLE
    AS $$
DECLARE
  sum_type integer=null;
BEGIN
	select award_type_sum_type::integer into sum_type from epmms_award_type where award_type_id=award_type;
  return sum_type;
END;
$$;


--
-- Name: get_topped(numeric, numeric, numeric); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_topped(award_currency numeric, award_topped numeric, award_total numeric) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
BEGIN
award_currency:=coalesce(award_currency,0);
award_total:=coalesce(award_total,0);
	case
    when award_total>=award_topped then
    	return 0;
  	when award_currency+award_total<=award_topped then
    	return award_currency;
    WHEN award_currency+award_total> award_topped then
    	return award_topped-award_total;
    else
    	return 0;
  end case;
END;
$$;


--
-- Name: FUNCTION get_topped(award_currency numeric, award_topped numeric, award_total numeric); Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON FUNCTION public.get_topped(award_currency numeric, award_topped numeric, award_total numeric) IS '计算封顶';


--
-- Name: get_under_order(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_under_order(member_id integer, under_id integer) RETURNS integer
    LANGUAGE plpgsql STABLE
    AS $$
DECLARE
    under_order integer;
BEGIN
    select c.membermap_order into under_order from epmms_membermap as c,epmms_membermap as my
    where c.membermap_parent_id=member_id and my.membermap_id=under_id
    and my.membermap_path like c.membermap_path || '%';
    return under_order;
END;
$$;


--
-- Name: get_under_product_count_charge(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_under_product_count_charge(member_id integer, charge_id integer) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
BEGIN
  return COALESCE((select (membermap_product_count+membermap_under_product_count)+finance_award::integer/get_bill_money() from epmms_membermap,epmms_finance
   where membermap_id=member_id and finance_memberinfo_id=charge_id and finance_type=3),0);
END;
$$;


--
-- Name: get_upgrade_level(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_upgrade_level(new_member_id integer) RETURNS TABLE(member_level integer, member_level_name text)
    LANGUAGE plpgsql
    AS $$
BEGIN
    return query
    (select l.member_level_level,l.member_level_name from epmms_membermap as p,epmms_member_level as l
    where p.membermap_recommend_number>=2 and p.membermap_sub_number>=2 and coalesce(p.membermap_level,0)<1
    and p.membermap_id=new_member_id
    and l.member_level_level=1
    union all
    select l.member_level_level,l.member_level_name
    from epmms_award_config_upgrade as cfg,epmms_membermap as p,epmms_member_level as l
    where p.membermap_id=new_member_id
    and (select count(*) from epmms_membermap where membermap_path like p.membermap_path || '/%' and coalesce(membermap_level,0)>=cfg.award_config_level-1)>=2
    and coalesce(p.membermap_level,0)<cfg.award_config_level
    and cfg.award_config_level=l.member_level_level
    and award_config_level>=2);
END;
$$;


--
-- Name: get_upper_member(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_upper_member(member_id integer) RETURNS SETOF public.epmms_membermap
    LANGUAGE plpgsql STABLE
    AS $$
DECLARE
    s_sql text default '';
    o_sql text default '';
    my_layer integer;
    my_path text;
    i integer;
BEGIN
    select membermap_layer,membermap_path into my_layer,my_path from epmms_membermap where membermap_id=member_id;
    for i in 1..my_layer-1 loop
        o_sql='select * from epmms_membermap
where membermap_layer=' || i || ' and membermap_path=''' || left(my_path,i*2) || '''';
        s_sql:=s_sql || o_sql || iif(i<my_layer-1,' union all ','');
    end loop;
    --raise notice '%',s_sql;
    RETURN QUERY EXECUTE s_sql;
END;
$$;


--
-- Name: get_upper_member2(integer, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_upper_member2(my_layer integer, my_path text) RETURNS SETOF public.epmms_membermap
    LANGUAGE plpgsql
    AS $$
DECLARE
    s_sql text default '';
    o_sql text default '';
    i integer;
BEGIN
    for i in 1..my_layer-1 loop
        o_sql='select * from epmms_membermap
where membermap_layer=' || i || ' and membermap_path=''' || left(my_path,i*2) || '''';
        s_sql:=s_sql || o_sql || iif(i<my_layer-1,' union all ','');
    end loop;
    RETURN QUERY EXECUTE s_sql;
END;
$$;


--
-- Name: get_upper_member_recommend(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_upper_member_recommend(member_id integer) RETURNS SETOF public.epmms_membermap
    LANGUAGE plpgsql
    AS $$
DECLARE
    s_sql text default '';
    o_sql text default '';
    my_layer integer;
    my_path text;
    i integer;
BEGIN
    select membermap_recommend_layer,membermap_recommend_path into my_layer,my_path from epmms_membermap where membermap_id=member_id;
    for i in 1..my_layer-1 loop
        o_sql='select * from epmms_membermap
where membermap_recommend_layer=' || i || ' and membermap_recommend_path=''' || left(my_path,i*2) || '''';
        s_sql:=s_sql || o_sql || iif(i<my_layer-1,' union all ','');
    end loop;
    RETURN QUERY EXECUTE s_sql;
END;
$$;


--
-- Name: get_upper_member_recommend2(integer, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.get_upper_member_recommend2(my_layer integer, my_path text) RETURNS SETOF public.epmms_membermap
    LANGUAGE plpgsql
    AS $$
DECLARE
    s_sql text default '';
    o_sql text default '';
    i integer;
BEGIN
    for i in 1..my_layer-1 loop
        o_sql='select * from epmms_membermap
where membermap_recommend_layer=' || i || ' and membermap_recommend_path=''' || left(my_path,i*2) || '''';
        s_sql:=s_sql || o_sql || iif(i<my_layer-1,' union all ','');
    end loop;
    RETURN QUERY EXECUTE s_sql;
END;
$$;


--
-- Name: id2name(bigint); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.id2name(member_id bigint) RETURNS text
    LANGUAGE plpgsql IMMUTABLE
    AS $$
BEGIN
  return (select memberinfo_account from epmms_memberinfo where memberinfo_id=member_id);
END;
$$;


--
-- Name: iif(boolean, double precision, double precision); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.iif(boolean, double precision, double precision) RETURNS double precision
    LANGUAGE plpgsql IMMUTABLE
    AS $_$
DECLARE
	rtVal double precision;
BEGIN
	rtVal := (SELECT case $1 when true then $2 else $3 end);
	RETURN rtVal;
END;
$_$;


--
-- Name: iif(boolean, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.iif(boolean, integer, integer) RETURNS integer
    LANGUAGE plpgsql IMMUTABLE
    AS $_$
DECLARE
	rtVal integer;
BEGIN
	rtVal := (SELECT case $1 when true then $2 else $3 end);
	RETURN rtVal;
END;
$_$;


--
-- Name: iif(boolean, bigint, bigint); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.iif(boolean, bigint, bigint) RETURNS bigint
    LANGUAGE plpgsql IMMUTABLE
    AS $_$
DECLARE
	rtVal bigint;
BEGIN
	rtVal := (SELECT case $1 when true then $2 else $3 end);
	RETURN rtVal;
END;
$_$;


--
-- Name: iif(boolean, numeric, numeric); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.iif(boolean, numeric, numeric) RETURNS numeric
    LANGUAGE plpgsql IMMUTABLE
    AS $_$
DECLARE
	rtVal numeric;
BEGIN
	rtVal := (SELECT case $1 when true then $2 else $3 end);
	RETURN rtVal;
END;
$_$;


--
-- Name: iif(boolean, text, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.iif(boolean, text, text) RETURNS text
    LANGUAGE plpgsql IMMUTABLE
    AS $_$
DECLARE
	rtVal text;
BEGIN
	rtVal := (SELECT case $1 when true then $2 else $3 end);
	RETURN rtVal;
END;
$_$;


--
-- Name: is2plus4(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.is2plus4(member_id integer) RETURNS integer
    LANGUAGE plpgsql IMMUTABLE
    AS $$
BEGIN
  return (select count(*) from epmms_membermap as my,epmms_membermap as child
   where my.membermap_id=member_id 
   and child.membermap_path like my.membermap_path || '/%' 
   and child.membermap_layer-my.membermap_layer<=2 
   and child.membermap_membertype_level=4);
END;
$$;


--
-- Name: membermap_custom(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.membermap_custom(custom_days integer) RETURNS SETOF public.epmms_membermap
    LANGUAGE plpgsql
    AS $$
BEGIN
    return query select * from epmms_membermap where custom_day_first(custom_days,membermap_verify_date::date)=custom_day_first(custom_days)-custom_days;
END;
$$;


--
-- Name: month_calc(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.month_calc() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    perform epmms_verify_award_date(null,NULL,2,1,12);
    perform epmms_verify_award_group(null,NULL,2,2);
END;
$$;


--
-- Name: nextverify(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.nextverify() RETURNS bigint
    LANGUAGE plpgsql
    AS $$
BEGIN
	--使用序列不支持事务可以导致不连续，所以使用表来生成审核序列
	update epmms_system_status set system_status_verify_seq=system_status_verify_seq+1;
  return (select system_status_verify_seq from epmms_system_status limit 1);
END;
$$;


--
-- Name: nextverify2(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.nextverify2() RETURNS bigint
    LANGUAGE plpgsql
    AS $$
BEGIN
	--使用序列不支持事务可以导致不连续，所以使用表来生成审核序列
	update epmms_system_status set system_status_verify_seq2=system_status_verify_seq2+1;
  return (select system_status_verify_seq2 from epmms_system_status limit 1);
END;
$$;


--
-- Name: nextverify_groupmap(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.nextverify_groupmap() RETURNS bigint
    LANGUAGE plpgsql
    AS $$
BEGIN
	--使用序列不支持事务可以导致不连续，所以使用表来生成审核序列
	update epmms_system_status set system_status_groupmap_seq=system_status_groupmap_seq+1;
  return (select system_status_groupmap_seq from epmms_system_status limit 1);
END;
$$;


--
-- Name: nextverify_membermap3(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.nextverify_membermap3() RETURNS bigint
    LANGUAGE plpgsql
    AS $$
BEGIN
	--使用序列不支持事务可以导致不连续，所以使用表来生成审核序列
	update epmms_system_status set system_status_verify_seq2=system_status_verify_seq2+1;
    return (select system_status_verify_seq2 from epmms_system_status limit 1);
END;
$$;


--
-- Name: pv(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.pv() RETURNS numeric
    LANGUAGE plpgsql IMMUTABLE
    AS $$
BEGIN
	return coalesce((select award_config_currency from epmms_award_config where award_config_type_id=2)/100,1);
END;
$$;


--
-- Name: quarter_calc(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.quarter_calc() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    perform epmms_verify_member(null,nextval('award_period'),4);
END;
$$;


--
-- Name: reg7200(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.reg7200(award_type integer, award_period integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	dupMemer record;
BEGIN
	update epmms_memberstatus set reg7200=reg7200+abs(award_period_currency) from epmms_award_period
    where award_period_type_id=award_type
    and award_period_period=award_period
    and status_id=award_period_memberinfo_id;
END;
$$;


--
-- Name: reset_product_count(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.reset_product_count(member_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$

DECLARE

	my_date date;

    member_date date;

BEGIN

	select count2_date into my_date from epmms_memberstatus where status_id=member_id;

    if my_date is null then

    	return;

    end if;

    select membermap_verify_date into member_date from epmms_membermap where membermap_id=member_id;

	if get_date_period(member_date,my_date,get_config_award(612)::integer)<>get_date_period(member_date,current_date,get_config_award(612)::integer) then

    	update epmms_memberstatus set left_product_count2=0,right_product_count2=0,count2_date=current_date where status_id=member_id;

    end if;

    return;

END;

$$;


--
-- Name: send_message(text, text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.send_message(title text, content text, target integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
  member record;
  send_number integer;
BEGIN
    insert into epmms_messages(
    messages_title,
    messages_content,
    messages_sender_member_id,
    messages_receiver_member_id,
    messages_member_id
    ) values(
    title,
    content,
    null,
    target,
    null
    );
    perform epmms_send_message(currval('epmms_messages_messages_id_seq'));
END;
$$;


--
-- Name: set_car_finance(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.set_car_finance(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    update epmms_finance set finance_award=finance_award+membermap_money*0.1
     from epmms_membermap where finance_type=5 and finance_memberinfo_id=member_id
     and membermap_id=member_id;
END;
$$;


--
-- Name: set_foundation_0805(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.set_foundation_0805(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    update epmms_finance set finance_award=finance_award+award_config_founcation_score
    from epmms_award_config_foundation,epmms_membermap
    where membermap_id=member_id
    and membermap_membertype_level=award_config_member
    and finance_memberinfo_id=member_id
    and finance_type=3;
    update epmms_system_status set system_status_foundation=system_status_foundation+award_config_foundation_money
    from epmms_award_config_foundation,epmms_membermap
    where membermap_id=member_id
    and membermap_membertype_level=award_config_member;
END;
$$;


--
-- Name: set_group7_id(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.set_group7_id(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    update epmms_membermap set membermap_bond_id=get_group7_id(member_id) where membermap_id=member_id;
END;
$$;


--
-- Name: set_month_little_product_count(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.set_month_little_product_count(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    update epmms_memberstatus set month_little_product_count=0,month_little_date=now()
     where date_trunc('month',month_little_date)<>date_trunc('month',now());
    update epmms_memberstatus set month_little_product_count=month_little_product_count+
    iif(left_product_count>=right_product_count,right_product_count,left_product_count);
END;
$$;


--
-- Name: setdeal(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.setdeal(pbuy_id integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    pdeal_currency numeric(16,2);
    pbuy_currency numeric(16,2);
    pbuy_member_id integer;
    sale record;
BEGIN
    select buy_real_currency,buy_member_id into pbuy_currency,pbuy_member_id from epmms_buy where buy_id=pbuy_id;
    pdeal_currency:=pbuy_currency;
    for sale in (select * from epmms_sale where sale_date::date+iif(sale_type=0,1,get_config_award(364)::integer)<=current_date and sale_status<2 order by sale_id asc)
    loop
        if sale.sale_remain_currency>=pdeal_currency then
           update epmms_buy set buy_status=1,buy_date=now() where buy_id=pbuy_id;
           update epmms_sale set sale_status=iif(sale_remain_currency-pdeal_currency>0,1,2),sale_remain_currency=sale_remain_currency-pdeal_currency,sale_verify_date=now() where sale_id=sale.sale_id;
           insert into epmms_deal (deal_sale_id,deal_sale_member_id,deal_buy_id,deal_buy_member_id,deal_currency)values(sale.sale_id,sale.sale_member_id,pbuy_id,pbuy_member_id,pdeal_currency);
           pdeal_currency:=0;
           exit;
        else
           insert into epmms_deal (deal_sale_id,deal_sale_member_id,deal_buy_id,deal_buy_member_id,deal_currency)values(sale.sale_id,sale.sale_member_id,pbuy_id,pbuy_member_id,sale.sale_remain_currency);
           update epmms_sale set sale_status=2,sale_remain_currency=0,sale_verify_date=now() where sale_id=sale.sale_id;
           pdeal_currency:=pdeal_currency-sale.sale_remain_currency;
        end if;
    end loop;
    if pdeal_currency>0 then
       raise exception '提供金额不足';
       --update epmms_buy set buy_status=1,buy_date=now() where buy_id=pbuy_id;
       --insert into epmms_deal (deal_sale_id,deal_buy_id,deal_currency)values(null,pbuy_id,pdeal_currency);
       --pdeal_currency:=0;
    end if;
exception
    when raise_exception then
          return;
END;
$$;


--
-- Name: split_group(integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.split_group(groupid integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	group_id1 integer;
    group_id2 integer;
BEGIN
	insert into epmms_group (group_count)values(10);
    group_id1:=currval(pg_get_serial_sequence('epmms_group', 'group_id'));
    insert into epmms_group (group_count)values(10);
    group_id2:=currval(pg_get_serial_sequence('epmms_group', 'group_id'));
    update epmms_groupmap set groupmap_group_id=group_id1,groupmap_order=ceil(groupmap_order/2.0) where groupmap_order %2 <>0 and groupmap_group_id=groupid;
    update epmms_groupmap set groupmap_group_id=group_id2,groupmap_order=ceil(groupmap_order/2.0) where groupmap_order %2 =0 and groupmap_group_id=groupid;
    delete from epmms_group where group_id=groupid;
END;
$$;


--
-- Name: stat_under_count_parent(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.stat_under_count_parent(member_id integer, area_order integer) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
	child_id integer=null;
    under_count INTEGER=0;
BEGIN
	select membermap_id into child_id from epmms_membermap where
    membermap_order=area_order and membermap_parent_id=member_id;
    if child_id is not null then
    	select count(*) into under_count from epmms_membermap as my,epmms_membermap as under
        where my.membermap_id=child_id and under.membermap_path like my.membermap_path || '%';
    end if;
    return under_count;
END;
$$;


--
-- Name: stat_under_count_recommend(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.stat_under_count_recommend(member_id integer, area_order integer) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
	child_id integer=null;
    under_count integer=0;
BEGIN
	select membermap_id into child_id from epmms_membermap where
    membermap_order=area_order and membermap_parent_id=member_id;
    if child_id is not null then
    	select count(*) into under_count from epmms_membermap as my,epmms_membermap as under
        where my.membermap_id=child_id and under.membermap_path like my.membermap_path || '%'
        and under.membermap_recommend_path like my.membermap_recommend_path || '%';
    end if;
    return under_count;
END;
$$;


--
-- Name: stat_under_money_parent(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.stat_under_money_parent(member_id integer, area_order integer) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
	child_id integer=null;
    under_money numeric(16,2)=0;
BEGIN
	select membermap_id into child_id from epmms_membermap where
    membermap_order=area_order and membermap_parent_id=member_id;
    if child_id is not null then
    	select sum(under.membermap_money) into under_money from epmms_membermap as my,epmms_membermap as under
        where my.membermap_id=child_id and under.membermap_path like my.membermap_path || '%';
    end if;
    return under_money;
END;
$$;


--
-- Name: stat_under_money_recommend(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.stat_under_money_recommend(member_id integer, area_order integer) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
	child_id integer=null;
    under_money numeric(16,2)=0;
BEGIN
	select membermap_id into child_id from epmms_membermap where
    membermap_order=area_order and membermap_parent_id=member_id;
    if child_id is not null then
    	select sum(under.membermap_money) into under_money from epmms_membermap as my,epmms_membermap as under
        where my.membermap_id=child_id and under.membermap_path like my.membermap_path || '%'
        and under.membermap_recommend_path like my.membermap_recommend_path || '%';
    end if;
    return under_money;
END;
$$;


--
-- Name: test_found(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.test_found() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
	update epmms_memberinfo set memberinfo_memo='' where memberinfo_id=1;
    if found then
    	raise notice 'found';
    else
    	raise notice 'not found';
    end if;
	update epmms_memberinfo set memberinfo_memo='' where memberinfo_id=0;    
    if found then
    	raise notice 'found';
    else
    	raise notice 'not found';
    end if;
END;
$$;


--
-- Name: update_left_right_count(integer, text); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.update_left_right_count(member_id integer, my_path text) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  update  epmms_memberstatus  set left_count=left_count+iif(get_loc(my_path,p.membermap_path)=1,1,0)
  ,right_count=right_count+iif(get_loc(my_path,p.membermap_path)=2,1,0)
  from epmms_parent_relation as pr,epmms_membermap as p
  where pr.parent_relation_member_id=member_id
  and status_id=pr.parent_relation_upper_id
  and p.membermap_id=pr.parent_relation_upper_id;
END;
$$;


--
-- Name: update_left_right_layer(integer, text, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.update_left_right_layer(member_id integer, my_path text, product_count integer, my_layer integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    member_layer record;
BEGIN
  for member_layer in (select membermap_id,membermap_layer,membermap_path from epmms_parent_relation as pr,epmms_membermap as p where pr.parent_relation_member_id=member_id and p.membermap_id=pr.parent_relation_upper_id)
  loop
      if not exists(select * from epmms_layer where layer_member_id=member_layer.membermap_id and layer_layer=my_layer-member_layer.membermap_layer) then
         insert into epmms_layer(layer_member_id,layer_layer,layer_first_member,layer_first_order)values(member_layer.membermap_id,my_layer-member_layer.membermap_layer,member_id,get_loc(my_path,member_layer.membermap_path));
      end if;
  end loop;
  update  epmms_layer  set layer_left=layer_left+iif(get_loc(my_path,p.membermap_path)=1,iif(layer_left=0,product_count,0),0)
  ,layer_right=layer_right+iif(get_loc(my_path,p.membermap_path)=2,iif(layer_right=0,product_count,0),0),
  layer_little=least(layer_left+iif(get_loc(my_path,p.membermap_path)=1,iif(layer_left=0,product_count,0),0),layer_right+iif(get_loc(my_path,p.membermap_path)=2,iif(layer_right=0,product_count,0),0))
  from epmms_parent_relation as pr,epmms_membermap as p
  where pr.parent_relation_member_id=member_id
  and layer_member_id=pr.parent_relation_upper_id
  and p.membermap_id=pr.parent_relation_upper_id
  and my_layer-p.membermap_layer=layer_layer;

END;
$$;


--
-- Name: update_left_right_layer_count(integer, text, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.update_left_right_layer_count(member_id integer, my_path text, product_count integer, my_layer integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    member_layer record;
BEGIN
  for member_layer in (select membermap_id,membermap_layer,membermap_path from epmms_parent_relation as pr,epmms_membermap as p where pr.parent_relation_member_id=member_id and p.membermap_id=pr.parent_relation_upper_id)
  loop
      if not exists(select * from epmms_layer where layer_member_id=member_layer.membermap_id and layer_layer=my_layer-member_layer.membermap_layer) then
         insert into epmms_layer(layer_member_id,layer_layer,layer_first_member,layer_first_order)values(member_layer.membermap_id,my_layer-member_layer.membermap_layer,member_id,get_loc(my_path,member_layer.membermap_path));
      end if;
  end loop;
  update  epmms_layer  set layer_left_count=layer_left_count+iif(get_loc(my_path,p.membermap_path)=1,1,0)
  ,layer_right_count=layer_right_count+iif(get_loc(my_path,p.membermap_path)=2,1,0)
  from epmms_parent_relation as pr,epmms_membermap as p
  where pr.parent_relation_member_id=member_id
  and layer_member_id=pr.parent_relation_upper_id
  and p.membermap_id=pr.parent_relation_upper_id
  and my_layer-p.membermap_layer=layer_layer;
END;
$$;


--
-- Name: update_left_right_product_count(integer, text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.update_left_right_product_count(member_id integer, my_path text, product_count integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  update  epmms_memberstatus  set left_product_count=left_product_count+iif(get_loc(my_path,p.membermap_path)=1,product_count,0)
  ,right_product_count=right_product_count+iif(get_loc(my_path,p.membermap_path)=2,product_count,0),
  little_product_count=least(left_product_count+iif(get_loc(my_path,p.membermap_path)=1,product_count,0),right_product_count+iif(get_loc(my_path,p.membermap_path)=2,product_count,0))
  from epmms_parent_relation as pr,epmms_membermap as p
  where pr.parent_relation_member_id=member_id
  and status_id=pr.parent_relation_upper_id
  and p.membermap_id=pr.parent_relation_upper_id;
END;
$$;


--
-- Name: update_left_right_product_count2(integer, text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.update_left_right_product_count2(member_id integer, my_path text, product_count integer) RETURNS void
    LANGUAGE plpgsql
    AS $$

BEGIN

  perform reset_product_count(member_id);

  update  epmms_memberstatus  set left_product_count2=left_product_count2+iif(get_loc(my_path,p.membermap_path)=1,product_count,0)

  ,right_product_count2=right_product_count2+iif(get_loc(my_path,p.membermap_path)=2,product_count,0)

  from epmms_parent_relation as pr,epmms_membermap as p

  where pr.parent_relation_member_id=member_id

  and status_id=pr.parent_relation_upper_id

  and p.membermap_id=pr.parent_relation_upper_id;

END;

$$;


--
-- Name: update_left_right_product_count3(integer, text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.update_left_right_product_count3(member_id integer, my_path text, product_count integer) RETURNS void
    LANGUAGE plpgsql
    AS $$

BEGIN

  update  epmms_memberstatus  set left_product_count3=left_product_count3+iif(get_loc(my_path,p.membermap_path)=1,product_count,0)

  ,right_product_count3=right_product_count3+iif(get_loc(my_path,p.membermap_path)=2,product_count,0)

  from epmms_parent_relation as pr,epmms_membermap as p

  where pr.parent_relation_member_id=member_id

  and status_id=pr.parent_relation_upper_id

  and p.membermap_id=pr.parent_relation_upper_id;

END;

$$;


--
-- Name: update_left_right_product_count_160908(integer, text, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.update_left_right_product_count_160908(member_id integer, my_path text, product_count integer, my_layer integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  update  epmms_memberstatus  set left_product_count=left_product_count+iif(get_loc(my_path,p.membermap_path)=1,product_count,0)
  ,right_product_count=right_product_count+iif(get_loc(my_path,p.membermap_path)=2,product_count,0),
  little_product_count=least(left_product_count+iif(get_loc(my_path,p.membermap_path)=1,product_count,0),right_product_count+iif(get_loc(my_path,p.membermap_path)=2,product_count,0))
  from epmms_parent_relation as pr,epmms_membermap as p
  where pr.parent_relation_member_id=member_id
  and status_id=pr.parent_relation_upper_id
  and p.membermap_id=pr.parent_relation_upper_id
  and my_layer-p.membermap_layer>=6;
END;
$$;


--
-- Name: update_left_right_product_count_layer(integer, text, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.update_left_right_product_count_layer(member_id integer, my_path text, product_count integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    right_count integer;
    llittle integer;
    lpair integer;
BEGIN
    insert into epmms_test(source,info)
    select 'status1','right:' || right_product_count from epmms_memberstatus where status_id=1;
    insert into epmms_test(source,info)
    select 'layer1','pair:' || layer_pair from epmms_layer where layer_member_id=1 and layer_layer=3;
  update  epmms_memberstatus  set left_product_count=left_product_count+iif(get_loc(my_path,p.membermap_path)=1,product_count,0)
  ,right_product_count=right_product_count+iif(get_loc(my_path,p.membermap_path)=2,product_count,0),
  little_product_count=least(left_product_count+iif(get_loc(my_path,p.membermap_path)=1,product_count,0),right_product_count+iif(get_loc(my_path,p.membermap_path)=2,product_count,0))
  from epmms_parent_relation as pr,epmms_membermap as p
  where pr.parent_relation_member_id=member_id
  and status_id=pr.parent_relation_upper_id
  and p.membermap_id=pr.parent_relation_upper_id
  and not exists(select * from epmms_layer where layer_first_member=member_id and layer_member_id=status_id);
    insert into epmms_test(source,info)
    select 'status2','right:' || right_product_count from epmms_memberstatus where status_id=1;
  update  epmms_memberstatus  set left_product_count=left_product_count-iif(get_loc(my_path,p.membermap_path)=1,my.membermap_product_count,0)
  ,right_product_count=right_product_count-iif(get_loc(my_path,p.membermap_path)=2,my.membermap_product_count,0),
  little_product_count=least(left_product_count-iif(get_loc(my_path,p.membermap_path)=1,my.membermap_product_count,0),right_product_count-iif(get_loc(my_path,p.membermap_path)=2,my.membermap_product_count,0))
  from epmms_parent_relation as pr,epmms_membermap as p,epmms_layer as l,epmms_membermap as my
  where pr.parent_relation_member_id=member_id
  and status_id=pr.parent_relation_upper_id
  and p.membermap_id=pr.parent_relation_upper_id
  and l.layer_member_id=pr.parent_relation_upper_id
  and l.layer_little>0
  and l.layer_pair=0
  and my.membermap_id=member_id
  and l.layer_layer=my.membermap_layer-p.membermap_layer
  returning right_product_count-iif(get_loc(my_path,p.membermap_path)=2,my.membermap_product_count,0),l.layer_little,l.layer_pair
  into right_count,llittle,lpair;
  insert into epmms_test(source,info)values('update1','count:'|| right_count || 'little:' || llittle || 'lpair:'||lapir);

    insert into epmms_test(source,info)
    select 'status3','right:' || right_product_count from epmms_memberstatus where status_id=1;
END;
$$;


--
-- Name: update_left_right_product_count_non_first(integer, text, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.update_left_right_product_count_non_first(member_id integer, my_path text, product_count integer, member_layer integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  update  epmms_memberstatus  set left_product_count=left_product_count+product_count
  from epmms_parent_relation as pr,epmms_membermap as p,epmms_layer as l,epmms_membermap as my
  where pr.parent_relation_member_id=member_id
  and status_id=pr.parent_relation_upper_id
  and p.membermap_id=pr.parent_relation_upper_id
  and get_loc(my_path,p.membermap_path)=1
  and my.membermap_id=member_id
  and l.layer_member_id=p.membermap_id
  and member_layer-p.membermap_layer=l.layer_layer
  and l.layer_left_count>1;
  
  update  epmms_memberstatus  set right_product_count=right_product_count+product_count
  from epmms_parent_relation as pr,epmms_membermap as p,epmms_layer as l,epmms_membermap as my
  where pr.parent_relation_member_id=member_id
  and status_id=pr.parent_relation_upper_id
  and p.membermap_id=pr.parent_relation_upper_id
  and get_loc(my_path,p.membermap_path)=2
  and my.membermap_id=member_id
  and l.layer_member_id=p.membermap_id
  and member_layer-p.membermap_layer=l.layer_layer
  and l.layer_right_count>1;
  
  update  epmms_memberstatus  set little_product_count=least(left_product_count,right_product_count)
  from epmms_parent_relation as pr,epmms_membermap as p
  where pr.parent_relation_member_id=member_id
  and status_id=pr.parent_relation_upper_id
  and p.membermap_id=pr.parent_relation_upper_id; 
END;
$$;


--
-- Name: upgrade_level(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.upgrade_level(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    update epmms_membermap as l set membermap_level=up.award_config_upgrade
    from epmms_award_config_peiyu_upgrade as up
    where up.award_config_member_level is NULL
    and get_l_under_product_count(l.membermap_id)>=up.award_config_number
    and l.membermap_level is null;
    update epmms_membermap as l set membermap_level=up.award_config_upgrade
    from epmms_award_config_peiyu_upgrade as up
    where up.award_config_member_level is not NULL
    and (select count(*) from get_l_membermap(l.membermap_id) where membermap_level>=up.award_config_member_level)>=up.award_config_number
    and l.membermap_level<up.award_config_upgrade;
END;
$$;


--
-- Name: upgrade_level_0805(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.upgrade_level_0805(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    update epmms_membermap as p set membermap_level=1
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and get_l_under_product_count(p.membermap_id)*get_bill_money()>=150000
    and p.membermap_level is null;
    
    update epmms_membermap as p set membermap_level=2
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and (select count(*) from epmms_membermap where membermap_path like p.membermap_path || '%' and membermap_level>=1 and membermap_order=1)>=2
    and (select count(*) from epmms_membermap where membermap_path like p.membermap_path || '%' and membermap_level>=1 and membermap_order=2)>=2
    and p.membermap_level<=2;
    update epmms_membermap as p set membermap_level=3
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_path like p.membermap_path || '/%'
    and (select count(*) from epmms_membermap where membermap_path like p.membermap_path || '%' and membermap_level>=2 and membermap_order=1)>=2
    and (select count(*) from epmms_membermap where membermap_path like p.membermap_path || '%' and membermap_level>=2 and membermap_order=2)>=2
    and p.membermap_level<=3;

END;
$$;


--
-- Name: upgrade_level_140710(integer, integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.upgrade_level_140710(member_id integer, award_period integer, award_type integer, award_sum_type integer, award_calc_type integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    update epmms_membermap as p set membermap_level=1
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and (select count(*) from epmms_membermap where membermap_recommend_id=p.membermap_id and membermap_is_verify=1)=10
    and p.membermap_level is null;
    
    update epmms_membermap as p set membermap_level=2
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and (select count(*) from epmms_membermap where membermap_recommend_id=p.membermap_id and membermap_is_verify=1
    and membermap_level=1)=10
    and p.membermap_level<2;
    
    update epmms_membermap as p set membermap_level=3
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and (select count(*) from epmms_membermap where membermap_recommend_id=p.membermap_id and membermap_is_verify=1
    and membermap_level=2)=10
    and p.membermap_level<3;

    update epmms_membermap as p set membermap_level=4
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and (select count(*) from epmms_membermap where membermap_recommend_id=p.membermap_id and membermap_is_verify=1
    and membermap_level=3)=10
    and p.membermap_level<4;
    
    update epmms_membermap as p set membermap_level=5
    from epmms_membermap as my
    where my.membermap_id=member_id
    and my.membermap_recommend_path like p.membermap_recommend_path || '/%'
    and (select count(*) from epmms_membermap where membermap_recommend_id=p.membermap_id and membermap_is_verify=1
    and membermap_level=4)=10
    and p.membermap_level<5;
END;
$$;


--
-- Name: verify_group(integer, integer); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.verify_group(member_id integer, award_period integer) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
	group_cnt integer;
    mygroup_id integer;
BEGIN
	mygroup_id:=get_recommend_group(member_id);
    update epmms_group set group_count=group_count+1 where group_id=mygroup_id;
    select group_count into group_cnt from epmms_group where group_id=mygroup_id;
    insert into epmms_groupmap(groupmap_id,groupmap_group_id,groupmap_order)values(member_id,mygroup_id,group_cnt);
    if group_cnt>5 then
    	update epmms_groupmap set groupmap_order=iif(groupmap_order<=5,group_cnt-5+groupmap_order,groupmap_order-5) where groupmap_group_id=mygroup_id;
    end if;
    perform award_group5(mygroup_id,award_period,member_id,36);
	if group_cnt=20 then
    	perform split_group(mygroup_id);
    end if;
END;
$$;


--
-- Name: week_calc(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.week_calc() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    perform epmms_verify_award_date(null,NULL,1,1,11);
END;
$$;


--
-- Name: week_calc_615(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.week_calc_615() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    perform epmms_verify_award_date(null,NULL,1,1,15);
END;
$$;


--
-- Name: week_calc_65(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.week_calc_65() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    perform epmms_verify_award_date(null,NULL,1,1,16);
END;
$$;


--
-- Name: week_calc_bond(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.week_calc_bond() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    perform epmms_verify_award_date(null,NULL,1,1,14);
END;
$$;


--
-- Name: week_custom_calc(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.week_custom_calc() RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    award_period integer;
BEGIN
    award_period:=nextval('award_period');
    perform epmms_verify_award_group(null,award_period,1,1,1);
    perform epmms_verify_award_group(null,award_period,2,1,1);
    perform gen_finance_log();
END;
$$;


--
-- Name: year_calc(); Type: FUNCTION; Schema: public; Owner: -
--

CREATE FUNCTION public.year_calc() RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    perform epmms_verify_member(null,nextval('award_period'),5);
END;
$$;


--
-- Name: award_config_3070; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_3070 (
    award_config_id integer NOT NULL,
    award_config_ratio int4range,
    award_config_currency numeric(16,2)
);


--
-- Name: award_config_budian; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_budian (
    award_config_id integer NOT NULL,
    award_config_award_member integer,
    award_config_new_member integer,
    award_config_currency numeric(16,2)
);


--
-- Name: award_config_budian_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.award_config_budian_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_budian_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.award_config_budian_award_config_id_seq OWNED BY award.award_config_budian.award_config_id;


--
-- Name: award_config_day_futou; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_day_futou (
    award_config_id integer NOT NULL,
    award_config_level integer,
    award_config_days integer,
    award_config_money numeric(16,4) DEFAULT 0,
    award_config_percnet_finance numeric(5,4) DEFAULT 0
);


--
-- Name: COLUMN award_config_day_futou.award_config_percnet_finance; Type: COMMENT; Schema: award; Owner: -
--

COMMENT ON COLUMN award.award_config_day_futou.award_config_percnet_finance IS '基金比例';


--
-- Name: award_config_day_futou_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.award_config_day_futou_award_config_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_day_futou_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.award_config_day_futou_award_config_id_seq OWNED BY award.award_config_day_futou.award_config_id;


--
-- Name: award_config_dist; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_dist (
    award_config_id integer NOT NULL,
    award_config_agent_type integer,
    award_config_award numeric(4,0),
    award_config_layer integer
);


--
-- Name: award_config_dist_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.award_config_dist_award_config_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_dist_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.award_config_dist_award_config_id_seq OWNED BY award.award_config_dist.award_config_id;


--
-- Name: award_config_dot_layer; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_dot_layer (
    award_config_id integer NOT NULL,
    award_config_layer int4range,
    award_config_currency numeric(8,4),
    award_config_recommend int4range,
    award_config_membertype integer
);


--
-- Name: award_config_dot_layer2; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_dot_layer2 (
    award_config_id integer NOT NULL,
    award_config_layer int4range,
    award_config_currency numeric(16,2)
);


--
-- Name: award_config_dot_layer2_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.award_config_dot_layer2_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_dot_layer2_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.award_config_dot_layer2_award_config_id_seq OWNED BY award.award_config_dot_layer2.award_config_id;


--
-- Name: award_config_dot_layer_150919; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_dot_layer_150919 (
    award_config_id integer NOT NULL,
    award_config_layer int4range,
    award_config_currency numeric(8,4),
    award_config_recommend int4range
);


--
-- Name: award_config_dot_layer_150919_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.award_config_dot_layer_150919_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_dot_layer_150919_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.award_config_dot_layer_150919_award_config_id_seq OWNED BY award.award_config_dot_layer_150919.award_config_id;


--
-- Name: award_config_dot_layer_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.award_config_dot_layer_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_dot_layer_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.award_config_dot_layer_award_config_id_seq OWNED BY award.award_config_dot_layer.award_config_id;


--
-- Name: award_config_dot_limit; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_dot_limit (
    award_config_id integer NOT NULL,
    award_config_recommend int4range NOT NULL,
    award_config_limit numeric(16,3) NOT NULL
);


--
-- Name: award_config_dot_limit_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.award_config_dot_limit_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_dot_limit_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.award_config_dot_limit_award_config_id_seq OWNED BY award.award_config_dot_limit.award_config_id;


--
-- Name: award_config_dot_matrix2; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_dot_matrix2 (
    award_config_id integer NOT NULL,
    award_config_award_member integer,
    award_config_new_member integer,
    award_config_currency numeric(16,2)
);


--
-- Name: award_config_dot_matrix2_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.award_config_dot_matrix2_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_dot_matrix2_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.award_config_dot_matrix2_award_config_id_seq OWNED BY award.award_config_dot_matrix2.award_config_id;


--
-- Name: award_config_dot_recommend; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_dot_recommend (
    award_config_id integer NOT NULL,
    award_config_membertype integer NOT NULL,
    award_config_layer integer NOT NULL,
    award_config_currency numeric(16,2) NOT NULL
);


--
-- Name: award_config_dot_recommend_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.award_config_dot_recommend_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_dot_recommend_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.award_config_dot_recommend_award_config_id_seq OWNED BY award.award_config_dot_recommend.award_config_id;


--
-- Name: award_config_down_up; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_down_up (
    award_config_id integer NOT NULL,
    award_config_member integer,
    award_config_layer integer,
    award_config_currency numeric(16,2),
    award_config_recommend int4range
);


--
-- Name: award_config_dup; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_dup (
    award_config_id integer NOT NULL,
    award_config_total numrange,
    award_config_award numeric(8,4)
);


--
-- Name: award_config_fanli; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_fanli (
    award_config_id integer NOT NULL,
    award_config_membertype integer NOT NULL,
    award_config_currency numeric(16,2) NOT NULL,
    award_config_buy numeric(16,2)
);


--
-- Name: award_config_fenhong_level; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_fenhong_level (
    award_config_id integer NOT NULL,
    award_config_level integer,
    award_config_currency numeric(16,2),
    award_config_month_money numeric(16,2) DEFAULT 0
);


--
-- Name: award_config_fenhong_level_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.award_config_fenhong_level_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_fenhong_level_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.award_config_fenhong_level_award_config_id_seq OWNED BY award.award_config_fenhong_level.award_config_id;


--
-- Name: award_config_global_fenhong; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_global_fenhong (
    member_number integer NOT NULL,
    member_level integer NOT NULL,
    upgrade_level integer NOT NULL,
    df_currency numeric(16,4) NOT NULL,
    currency numeric(16,4) NOT NULL
);


--
-- Name: award_config_huzhu; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_huzhu (
    award_config_id integer NOT NULL,
    award_config_layer integer,
    award_config_currency numeric(16,2)
);


--
-- Name: award_config_huzhu_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.award_config_huzhu_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_huzhu_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.award_config_huzhu_award_config_id_seq OWNED BY award.award_config_huzhu.award_config_id;


--
-- Name: award_config_layer_pair_member; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_layer_pair_member (
    award_config_membertype integer NOT NULL,
    award_config_layer int4range,
    award_config_currency numeric(16,2) NOT NULL,
    award_config_id integer NOT NULL,
    award_config_recommend int4range
);


--
-- Name: award_config_leader_fenhong; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_leader_fenhong (
    member_number integer NOT NULL,
    level integer NOT NULL,
    currency numeric(16,2) NOT NULL
);


--
-- Name: award_config_leader_recommend; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_leader_recommend (
    award_config_id integer NOT NULL,
    award_config_membertype integer,
    award_config_recommend_layer integer,
    award_config_money numeric(8,4)
);


--
-- Name: award_config_leader_recommend2; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_leader_recommend2 (
    award_config_id integer NOT NULL,
    award_config_membertype integer,
    award_config_recommend_layer integer,
    award_config_money numeric(8,4)
);


--
-- Name: award_config_leader_recommend2_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.award_config_leader_recommend2_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_leader_recommend2_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.award_config_leader_recommend2_award_config_id_seq OWNED BY award.award_config_leader_recommend2.award_config_id;


--
-- Name: award_config_leader_recommend_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.award_config_leader_recommend_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_leader_recommend_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.award_config_leader_recommend_award_config_id_seq OWNED BY award.award_config_leader_recommend.award_config_id;


--
-- Name: award_config_manage; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_manage (
    award_layer integer NOT NULL,
    award_money numeric(16,2) DEFAULT 0 NOT NULL,
    award_type integer
);


--
-- Name: award_config_market; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_market (
    layer int4range NOT NULL,
    currency numeric(16,2) NOT NULL
);


--
-- Name: epmms_award_config_org_up_down; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_org_up_down (
    award_config_id integer NOT NULL,
    award_config_layer integer NOT NULL,
    award_config_membertype integer NOT NULL,
    award_config_currency numeric(16,2) NOT NULL
);


--
-- Name: award_config_org_up_down_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.award_config_org_up_down_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_org_up_down_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.award_config_org_up_down_award_config_id_seq OWNED BY public.epmms_award_config_org_up_down.award_config_id;


--
-- Name: award_config_org_up_down; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_org_up_down (
    award_config_id integer DEFAULT nextval('public.award_config_org_up_down_award_config_id_seq'::regclass) NOT NULL,
    award_config_layer integer NOT NULL,
    award_config_membertype integer NOT NULL,
    award_config_currency numeric(16,2) NOT NULL,
    award_config_recommend int4range
);


--
-- Name: award_config_recommend_type2; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_recommend_type2 (
    award_config_id integer NOT NULL,
    award_config_membertype integer NOT NULL,
    award_config_currency numeric(17,2)
);


--
-- Name: award_config_signing; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_signing (
    signing_type smallint NOT NULL,
    config_currency numeric(16,3),
    signing_refuse smallint,
    config_id integer NOT NULL,
    award_type integer
);


--
-- Name: award_config_static_fenghong_recommend; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_static_fenghong_recommend (
    award_config_id integer NOT NULL,
    award_config_recommend int4range,
    award_config_currency numeric(8,4),
    award_config_limit numeric(16,2)
);


--
-- Name: award_config_static_fenhong; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_static_fenhong (
    award_config_id integer NOT NULL,
    award_config_membertype integer,
    award_config_money numeric(8,4),
    award_config_limit numeric(16,2)
);


--
-- Name: award_config_static_fenhong_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.award_config_static_fenhong_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_static_fenhong_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.award_config_static_fenhong_award_config_id_seq OWNED BY award.award_config_static_fenhong.award_config_id;


--
-- Name: award_config_up_down_425; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_up_down_425 (
    award_config_id integer NOT NULL,
    award_config_recommend int4range NOT NULL,
    award_config_layer integer NOT NULL,
    award_config_currency numeric(16,2) NOT NULL
);


--
-- Name: award_config_up_down_425_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.award_config_up_down_425_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_up_down_425_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.award_config_up_down_425_award_config_id_seq OWNED BY award.award_config_up_down_425.award_config_id;


--
-- Name: award_config_upgrade; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_upgrade (
    award_config_id integer NOT NULL,
    little_currency numeric(16,2) DEFAULT 0 NOT NULL,
    down_number integer DEFAULT 0,
    down_level integer DEFAULT 0 NOT NULL,
    upgrade_level integer DEFAULT 0 NOT NULL
);


--
-- Name: award_config_upgrade_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.award_config_upgrade_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_upgrade_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.award_config_upgrade_award_config_id_seq OWNED BY award.award_config_upgrade.award_config_id;


--
-- Name: award_config_xingyu_futou; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_xingyu_futou (
    award_config_id integer NOT NULL,
    award_config_seqs integer[],
    award_config_money numeric(16,4),
    award_config_recommend_jin_number int4range
);


--
-- Name: award_config_xingyun; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_xingyun (
    award_config_id integer NOT NULL,
    award_config_membertype integer,
    award_config_currency numeric(16,4)
);


--
-- Name: award_config_xingyun_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.award_config_xingyun_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_xingyun_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.award_config_xingyun_award_config_id_seq OWNED BY award.award_config_xingyun.award_config_id;


--
-- Name: award_config_zhengka; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_config_zhengka (
    award_config_id integer NOT NULL,
    award_config_membertype integer,
    award_config_membertype_new integer,
    award_config_currency integer
);


--
-- Name: award_recommend_matrix; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.award_recommend_matrix (
    award_config_id integer NOT NULL,
    award_config_award_membertype integer,
    award_config_new_membertype integer,
    award_config_award numeric(16,4)
);


--
-- Name: award_recommend_matrix_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.award_recommend_matrix_award_config_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_recommend_matrix_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.award_recommend_matrix_award_config_id_seq OWNED BY award.award_recommend_matrix.award_config_id;


--
-- Name: dynamic_fenhong; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.dynamic_fenhong (
    award_config_id integer NOT NULL,
    membertype integer NOT NULL,
    billcount int4range NOT NULL,
    layers integer NOT NULL
);


--
-- Name: dynmmic_fenhong_percent; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.dynmmic_fenhong_percent (
    award_config_id integer NOT NULL,
    layers int4range NOT NULL,
    award_currency numeric(16,4) NOT NULL
);


--
-- Name: epmms_award_config_agent; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_agent (
    award_config_id integer NOT NULL,
    award_config_agent integer,
    award_config_currency numeric(16,2)
);


--
-- Name: epmms_award_config_agent_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_agent_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_agent_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_agent_award_config_id_seq OWNED BY public.epmms_award_config_agent.award_config_id;


--
-- Name: epmms_award_config_agent; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.epmms_award_config_agent (
    award_config_id integer DEFAULT nextval('public.epmms_award_config_agent_award_config_id_seq'::regclass) NOT NULL,
    award_config_agent integer,
    award_config_currency numeric(16,2)
);


--
-- Name: epmms_award_config_day_fenhong; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_day_fenhong (
    award_config_id integer NOT NULL,
    award_membertype integer NOT NULL,
    award_currency numeric(16,2) NOT NULL
);


--
-- Name: epmms_award_day_fenhong_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_day_fenhong_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_day_fenhong_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_day_fenhong_award_config_id_seq OWNED BY public.epmms_award_config_day_fenhong.award_config_id;


--
-- Name: epmms_award_config_day_fenhong; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.epmms_award_config_day_fenhong (
    award_config_id integer DEFAULT nextval('public.epmms_award_day_fenhong_award_config_id_seq'::regclass) NOT NULL,
    award_membertype integer NOT NULL,
    award_currency numeric(16,4) NOT NULL
);


--
-- Name: epmms_award_config_dif; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.epmms_award_config_dif (
    award_config_id integer NOT NULL,
    director_level integer NOT NULL,
    dif_award numeric(16,2),
    equal_award numeric(16,2),
    membertype integer
);


--
-- Name: COLUMN epmms_award_config_dif.director_level; Type: COMMENT; Schema: award; Owner: -
--

COMMENT ON COLUMN award.epmms_award_config_dif.director_level IS '董事级别';


--
-- Name: COLUMN epmms_award_config_dif.dif_award; Type: COMMENT; Schema: award; Owner: -
--

COMMENT ON COLUMN award.epmms_award_config_dif.dif_award IS '级差奖';


--
-- Name: COLUMN epmms_award_config_dif.equal_award; Type: COMMENT; Schema: award; Owner: -
--

COMMENT ON COLUMN award.epmms_award_config_dif.equal_award IS '平级奖';


--
-- Name: epmms_award_config_dot_matrix; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.epmms_award_config_dot_matrix (
    award_config_id integer NOT NULL,
    award_config_award_member integer NOT NULL,
    award_config_new_member integer NOT NULL,
    award_config_layer integer,
    award_config_currency numeric(16,2) NOT NULL
);


--
-- Name: epmms_award_config_dot_matrix_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.epmms_award_config_dot_matrix_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_dot_matrix_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.epmms_award_config_dot_matrix_award_config_id_seq OWNED BY award.epmms_award_config_dot_matrix.award_config_id;


--
-- Name: epmms_award_config_dot_matrix_left; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.epmms_award_config_dot_matrix_left (
    award_config_id integer NOT NULL,
    award_config_award_member integer NOT NULL,
    award_config_new_member integer NOT NULL,
    award_config_layer integer,
    award_config_currency numeric(16,2) NOT NULL
);


--
-- Name: epmms_award_config_dot_matrix_left_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.epmms_award_config_dot_matrix_left_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_dot_matrix_left_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.epmms_award_config_dot_matrix_left_award_config_id_seq OWNED BY award.epmms_award_config_dot_matrix_left.award_config_id;


--
-- Name: epmms_award_config_dot_matrix_recommend; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.epmms_award_config_dot_matrix_recommend (
    award_config_id integer NOT NULL,
    award_config_award_member integer NOT NULL,
    award_config_new_member integer NOT NULL,
    award_config_layer integer,
    award_config_currency numeric(16,2) NOT NULL
);


--
-- Name: epmms_award_config_dot_matrix_recommend_151204; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.epmms_award_config_dot_matrix_recommend_151204 (
    award_config_id integer NOT NULL,
    award_config_award_member integer NOT NULL,
    award_config_new_member integer NOT NULL,
    award_config_layer int4range,
    award_config_currency numeric(16,2) NOT NULL
);


--
-- Name: epmms_award_config_dot_matrix_recommend_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.epmms_award_config_dot_matrix_recommend_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_dot_matrix_recommend_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.epmms_award_config_dot_matrix_recommend_award_config_id_seq OWNED BY award.epmms_award_config_dot_matrix_recommend.award_config_id;


--
-- Name: epmms_award_config_dot_matrix_recommend_new_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.epmms_award_config_dot_matrix_recommend_new_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_dot_matrix_recommend_new_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.epmms_award_config_dot_matrix_recommend_new_award_config_id_seq OWNED BY award.epmms_award_config_dot_matrix_recommend_151204.award_config_id;


--
-- Name: epmms_award_config_layer_full_layer; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.epmms_award_config_layer_full_layer (
    award_config_id integer NOT NULL,
    award_config_layer integer NOT NULL,
    award_config_currency numeric(16,2) NOT NULL
);


--
-- Name: epmms_award_config_layer_full_layer_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.epmms_award_config_layer_full_layer_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_layer_full_layer_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.epmms_award_config_layer_full_layer_award_config_id_seq OWNED BY award.epmms_award_config_layer_full_layer.award_config_id;


--
-- Name: epmms_award_config_month_fenhong; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.epmms_award_config_month_fenhong (
    award_config_id integer NOT NULL,
    award_membertype integer NOT NULL,
    award_currency numeric(16,4) NOT NULL,
    award_config_limit numeric(16,2)
);


--
-- Name: epmms_award_config_month_fenhong_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.epmms_award_config_month_fenhong_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_month_fenhong_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.epmms_award_config_month_fenhong_award_config_id_seq OWNED BY award.epmms_award_config_month_fenhong.award_config_id;


--
-- Name: epmms_award_config_pair_member; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.epmms_award_config_pair_member (
    award_config_id integer NOT NULL,
    award_config_membertype integer NOT NULL,
    award_config_currency numeric(8,4) NOT NULL,
    award_config_diff numeric(16,2)
);


--
-- Name: TABLE epmms_award_config_pair_member; Type: COMMENT; Schema: award; Owner: -
--

COMMENT ON TABLE award.epmms_award_config_pair_member IS '1:1对碰';


--
-- Name: COLUMN epmms_award_config_pair_member.award_config_membertype; Type: COMMENT; Schema: award; Owner: -
--

COMMENT ON COLUMN award.epmms_award_config_pair_member.award_config_membertype IS '会员类型';


--
-- Name: COLUMN epmms_award_config_pair_member.award_config_currency; Type: COMMENT; Schema: award; Owner: -
--

COMMENT ON COLUMN award.epmms_award_config_pair_member.award_config_currency IS '奖金';


--
-- Name: epmms_award_config_pair_member_150919; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.epmms_award_config_pair_member_150919 (
    award_config_id integer NOT NULL,
    award_config_membertype integer NOT NULL,
    award_config_currency numeric(16,2) NOT NULL,
    award_config_diff numeric(16,2)
);


--
-- Name: TABLE epmms_award_config_pair_member_150919; Type: COMMENT; Schema: award; Owner: -
--

COMMENT ON TABLE award.epmms_award_config_pair_member_150919 IS '1:1对碰';


--
-- Name: COLUMN epmms_award_config_pair_member_150919.award_config_membertype; Type: COMMENT; Schema: award; Owner: -
--

COMMENT ON COLUMN award.epmms_award_config_pair_member_150919.award_config_membertype IS '会员类型';


--
-- Name: COLUMN epmms_award_config_pair_member_150919.award_config_currency; Type: COMMENT; Schema: award; Owner: -
--

COMMENT ON COLUMN award.epmms_award_config_pair_member_150919.award_config_currency IS '奖金';


--
-- Name: epmms_award_config_pair_member_150919_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.epmms_award_config_pair_member_150919_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_pair_member_150919_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.epmms_award_config_pair_member_150919_award_config_id_seq OWNED BY award.epmms_award_config_pair_member_150919.award_config_id;


--
-- Name: epmms_award_config_pair_member_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.epmms_award_config_pair_member_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_pair_member_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.epmms_award_config_pair_member_award_config_id_seq OWNED BY award.epmms_award_config_pair_member.award_config_id;


--
-- Name: epmms_award_config_prize; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.epmms_award_config_prize (
    award_config_id integer NOT NULL,
    award_config_name character varying(50) NOT NULL,
    award_config_total numeric(16,2) NOT NULL
);


--
-- Name: TABLE epmms_award_config_prize; Type: COMMENT; Schema: award; Owner: -
--

COMMENT ON TABLE award.epmms_award_config_prize IS 'A:B表示A大于等于且B大于等于
1、当 A:B=50:50 单    公司奖励一台多功能洗菜机(价值1980元）
2、当 A:B=250:250 单  公司奖励一部智能手机和电话卡（价值8000元）                                                                 
3、当 A:B=500:500 单  公司奖励一辆QQ汽车（价值3万元）
4、当A:B=1500:1500单 公司奖励一辆奔腾汽车（价值10万元）
5、当A:B=3000:3000单 公司奖励一辆奥迪汽车（价值20万元）
6、当A:B=5000:5000 单公司奖励宝马一辆或者海景房一套';


--
-- Name: epmms_award_config_prize_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.epmms_award_config_prize_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_prize_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.epmms_award_config_prize_award_config_id_seq OWNED BY award.epmms_award_config_prize.award_config_id;


--
-- Name: epmms_award_config_recommend; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.epmms_award_config_recommend (
    award_config_id integer NOT NULL,
    award_config_membertype integer NOT NULL,
    award_config_currency numeric(16,4) NOT NULL,
    award_config_membertype_new integer
);


--
-- Name: epmms_award_config_recommend2; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.epmms_award_config_recommend2 (
    award_config_id integer NOT NULL,
    award_config_membertype integer NOT NULL,
    award_config_currency numeric(16,2) NOT NULL,
    award_config_membertype_new integer
);


--
-- Name: epmms_award_config_recommend2_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.epmms_award_config_recommend2_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_recommend2_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.epmms_award_config_recommend2_award_config_id_seq OWNED BY award.epmms_award_config_recommend2.award_config_id;


--
-- Name: epmms_award_config_recommend3; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.epmms_award_config_recommend3 (
    award_config_id integer NOT NULL,
    award_config_membertype integer NOT NULL,
    award_config_currency numeric(16,2) NOT NULL,
    award_config_membertype_new integer
);


--
-- Name: epmms_award_config_recommend3_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.epmms_award_config_recommend3_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_recommend3_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.epmms_award_config_recommend3_award_config_id_seq OWNED BY award.epmms_award_config_recommend3.award_config_id;


--
-- Name: epmms_award_config_recommend_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.epmms_award_config_recommend_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_recommend_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.epmms_award_config_recommend_award_config_id_seq OWNED BY award.epmms_award_config_recommend.award_config_id;


--
-- Name: static_fenhong; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.static_fenhong (
    award_config_id integer NOT NULL,
    membertype integer NOT NULL,
    award_currency numeric(16,4) NOT NULL
);


--
-- Name: table_award_config_id_seq; Type: SEQUENCE; Schema: award; Owner: -
--

CREATE SEQUENCE award.table_award_config_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: table_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: award; Owner: -
--

ALTER SEQUENCE award.table_award_config_id_seq OWNED BY award.award_config_xingyu_futou.award_config_id;


--
-- Name: upgrade_child_condition; Type: TABLE; Schema: award; Owner: -
--

CREATE TABLE award.upgrade_child_condition (
    config_id integer NOT NULL,
    upgrade_level integer,
    child_number integer,
    child_level integer
);


--
-- Name: epmms_award_config_aixinjijin; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_aixinjijin (
    award_config_id integer NOT NULL,
    award_config_award_total numrange NOT NULL,
    award_config_currency numeric(16,2) NOT NULL
);


--
-- Name: award_config_aixinjijin_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.award_config_aixinjijin_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_aixinjijin_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.award_config_aixinjijin_award_config_id_seq OWNED BY public.epmms_award_config_aixinjijin.award_config_id;


--
-- Name: epmms_award_config_award_student; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_award_student (
    award_config_id integer NOT NULL,
    award_config_recommend int4range NOT NULL,
    award_config_layer int4range NOT NULL,
    award_config_condition int4range,
    award_config_currency numeric(16,2) NOT NULL,
    award_config_is_condition boolean
);


--
-- Name: award_config_award_student_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.award_config_award_student_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_award_student_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.award_config_award_student_award_config_id_seq OWNED BY public.epmms_award_config_award_student.award_config_id;


--
-- Name: epmms_award_config_chuangye; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_chuangye (
    award_config_id integer NOT NULL,
    award_config_layer integer NOT NULL,
    award_config_currency numeric(16,2) NOT NULL
);


--
-- Name: award_config_chuangye_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.award_config_chuangye_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_chuangye_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.award_config_chuangye_award_config_id_seq OWNED BY public.epmms_award_config_chuangye.award_config_id;


--
-- Name: epmms_award_config_corp_fenhong; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_corp_fenhong (
    award_config_id integer NOT NULL,
    award_config_award_currency numeric(16,2),
    award_config_level integer
);


--
-- Name: TABLE epmms_award_config_corp_fenhong; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_award_config_corp_fenhong IS '公司分红配置';


--
-- Name: COLUMN epmms_award_config_corp_fenhong.award_config_award_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config_corp_fenhong.award_config_award_currency IS '奖金';


--
-- Name: COLUMN epmms_award_config_corp_fenhong.award_config_level; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config_corp_fenhong.award_config_level IS '会员级别';


--
-- Name: award_config_corp_fenhong_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.award_config_corp_fenhong_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_corp_fenhong_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.award_config_corp_fenhong_award_config_id_seq OWNED BY public.epmms_award_config_corp_fenhong.award_config_id;


--
-- Name: epmms_award_config_gljt; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_gljt (
    award_config_id integer NOT NULL,
    award_config_member_type integer NOT NULL,
    award_config_currency numeric(16,2) NOT NULL
);


--
-- Name: award_config_gljt_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.award_config_gljt_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_gljt_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.award_config_gljt_award_config_id_seq OWNED BY public.epmms_award_config_gljt.award_config_id;


--
-- Name: epmms_award_config_guanli; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_guanli (
    award_config_id integer NOT NULL,
    award_config_new_member integer NOT NULL,
    award_config_award_member integer NOT NULL,
    award_config_currency numeric(16,2) NOT NULL
);


--
-- Name: award_config_guanli_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.award_config_guanli_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_guanli_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.award_config_guanli_award_config_id_seq OWNED BY public.epmms_award_config_guanli.award_config_id;


--
-- Name: epmms_award_config_guanli_upgrade; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_guanli_upgrade (
    award_config_id integer NOT NULL,
    award_config_level integer,
    award_config_number integer,
    award_config_membertype integer,
    award_config_memberlevel integer,
    award_config_income numeric(16,2),
    award_config_currency numeric(16,2)
);


--
-- Name: award_config_guanli_upgrade_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.award_config_guanli_upgrade_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_guanli_upgrade_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.award_config_guanli_upgrade_award_config_id_seq OWNED BY public.epmms_award_config_guanli_upgrade.award_config_id;


--
-- Name: epmms_award_config_layer_full; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_layer_full (
    award_config_id integer NOT NULL,
    award_config_layer integer NOT NULL,
    award_config_currency numeric(16,2) NOT NULL,
    award_config_count integer NOT NULL,
    award_config_recommend_number integer,
    award_config_type integer
);


--
-- Name: TABLE epmms_award_config_layer_full; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_award_config_layer_full IS '层奖';


--
-- Name: award_config_layer_full_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.award_config_layer_full_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_layer_full_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.award_config_layer_full_award_config_id_seq OWNED BY public.epmms_award_config_layer_full.award_config_id;


--
-- Name: epmms_config_pond; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_config_pond (
    award_config_id integer NOT NULL,
    pond_no integer NOT NULL,
    pond_assign numeric(16,2) NOT NULL,
    pond_period_topped numeric(16,2) NOT NULL,
    pond_all_topped numeric(16,2) NOT NULL,
    pond_achievement int4range NOT NULL
);


--
-- Name: COLUMN epmms_config_pond.pond_no; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_pond.pond_no IS '奖池编号';


--
-- Name: COLUMN epmms_config_pond.pond_assign; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_pond.pond_assign IS '分配比例';


--
-- Name: COLUMN epmms_config_pond.pond_period_topped; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_pond.pond_period_topped IS '单次封顶';


--
-- Name: COLUMN epmms_config_pond.pond_all_topped; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_pond.pond_all_topped IS '总封顶';


--
-- Name: COLUMN epmms_config_pond.pond_achievement; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_pond.pond_achievement IS '业绩条件';


--
-- Name: award_config_pond_pond_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.award_config_pond_pond_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: award_config_pond_pond_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.award_config_pond_pond_id_seq OWNED BY public.epmms_config_pond.award_config_id;


--
-- Name: award_period; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.award_period
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: charge; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.charge
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: ep_index; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW public.ep_index AS
 SELECT i.relname AS indname,
    i.relowner AS indowner,
    (idx.indrelid)::regclass AS indrelid,
    am.amname AS indam,
    idx.indkey,
    ARRAY( SELECT pg_get_indexdef(idx.indexrelid, (k.k + 1), true) AS pg_get_indexdef
           FROM generate_subscripts(idx.indkey, 1) k(k)
          ORDER BY k.k) AS indkey_names,
    (idx.indexprs IS NOT NULL) AS indexprs,
    (idx.indpred IS NOT NULL) AS indpred,
    idx.indisunique AS isunique
   FROM (((pg_index idx
     JOIN pg_class i ON ((i.oid = idx.indexrelid)))
     JOIN pg_am am ON ((i.relam = am.oid)))
     JOIN pg_namespace ns ON (((ns.oid = i.relnamespace) AND (ns.nspname = ANY (current_schemas(false))))));


--
-- Name: epmms_activation_record; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_activation_record (
    activation_id integer NOT NULL,
    activation_member_id integer NOT NULL,
    activation_add_time timestamp(0) without time zone DEFAULT now() NOT NULL
);


--
-- Name: TABLE epmms_activation_record; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_activation_record IS '激活金卡记录';


--
-- Name: COLUMN epmms_activation_record.activation_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_activation_record.activation_id IS '主键id';


--
-- Name: COLUMN epmms_activation_record.activation_member_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_activation_record.activation_member_id IS '会员id';


--
-- Name: COLUMN epmms_activation_record.activation_add_time; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_activation_record.activation_add_time IS '激活时间';


--
-- Name: epmms_activation_record_activation_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_activation_record_activation_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_activation_record_activation_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_activation_record_activation_id_seq OWNED BY public.epmms_activation_record.activation_id;


--
-- Name: epmms_agent; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_agent (
    agent_id integer DEFAULT nextval(('public.epmms_agent_agent_id_seq'::text)::regclass) NOT NULL,
    agent_memberinfo_id bigint NOT NULL,
    agent_memo character varying(200),
    agent_is_verify smallint DEFAULT 0 NOT NULL,
    agent_add_date timestamp(0) without time zone,
    agent_verify_date timestamp(0) without time zone,
    agent_type integer,
    agent_province text,
    agent_area text,
    agent_county text,
    agent_account character varying(50)
);


--
-- Name: COLUMN epmms_agent.agent_memberinfo_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_agent.agent_memberinfo_id IS '所属会员';


--
-- Name: COLUMN epmms_agent.agent_memo; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_agent.agent_memo IS '备注';


--
-- Name: COLUMN epmms_agent.agent_is_verify; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_agent.agent_is_verify IS '审核';


--
-- Name: COLUMN epmms_agent.agent_add_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_agent.agent_add_date IS '申请日期';


--
-- Name: COLUMN epmms_agent.agent_verify_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_agent.agent_verify_date IS '审核日期';


--
-- Name: COLUMN epmms_agent.agent_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_agent.agent_type IS '代理中心类型';


--
-- Name: COLUMN epmms_agent.agent_province; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_agent.agent_province IS '省';


--
-- Name: COLUMN epmms_agent.agent_area; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_agent.agent_area IS '市/地区';


--
-- Name: COLUMN epmms_agent.agent_county; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_agent.agent_county IS '县';


--
-- Name: COLUMN epmms_agent.agent_account; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_agent.agent_account IS '代理中心编号';


--
-- Name: epmms_agent_agent_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_agent_agent_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


--
-- Name: epmms_agent_type; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_agent_type (
    agent_type_level integer NOT NULL,
    agent_type_name character varying(20) NOT NULL
);


--
-- Name: COLUMN epmms_agent_type.agent_type_level; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_agent_type.agent_type_level IS '代理中心类型';


--
-- Name: COLUMN epmms_agent_type.agent_type_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_agent_type.agent_type_name IS '代理中心类型名';


--
-- Name: epmms_announcement; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_announcement (
    announcement_id integer NOT NULL,
    announcement_title text NOT NULL,
    announcement_content text NOT NULL,
    announcement_add_date timestamp(0) without time zone DEFAULT now(),
    announcement_mod_date timestamp(0) without time zone DEFAULT now() NOT NULL,
    announcement_userinfo_id bigint,
    announcement_class integer NOT NULL,
    log_id integer,
    log_category character varying(50),
    log_source character varying(50),
    log_operate character varying(50),
    log_target character varying(50),
    log_value character varying(50),
    log_info character varying(50),
    log_ip character varying(50),
    log_user character varying(50),
    log_role character varying(50),
    log_add_date character varying(50),
    log_status character varying(50)
);


--
-- Name: TABLE epmms_announcement; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_announcement IS '公告';


--
-- Name: COLUMN epmms_announcement.announcement_title; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_announcement.announcement_title IS '公告标题';


--
-- Name: COLUMN epmms_announcement.announcement_content; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_announcement.announcement_content IS '公告内容';


--
-- Name: COLUMN epmms_announcement.announcement_add_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_announcement.announcement_add_date IS '发布日期';


--
-- Name: COLUMN epmms_announcement.announcement_mod_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_announcement.announcement_mod_date IS '修改日期';


--
-- Name: COLUMN epmms_announcement.announcement_userinfo_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_announcement.announcement_userinfo_id IS '公告作者';


--
-- Name: COLUMN epmms_announcement.announcement_class; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_announcement.announcement_class IS '新闻分类';


--
-- Name: epmms_announcement_announcement_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_announcement_announcement_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_announcement_announcement_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_announcement_announcement_id_seq OWNED BY public.epmms_announcement.announcement_id;


--
-- Name: epmms_announcement_class; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_announcement_class (
    class_id integer NOT NULL,
    class_name character varying(20) NOT NULL,
    class_intro text,
    class_add_date timestamp(0) without time zone DEFAULT now(),
    class_sort integer DEFAULT 0 NOT NULL
);


--
-- Name: COLUMN epmms_announcement_class.class_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_announcement_class.class_name IS '分类标题';


--
-- Name: COLUMN epmms_announcement_class.class_intro; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_announcement_class.class_intro IS '分类说明';


--
-- Name: COLUMN epmms_announcement_class.class_add_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_announcement_class.class_add_date IS '添加日期';


--
-- Name: COLUMN epmms_announcement_class.class_sort; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_announcement_class.class_sort IS '排序';


--
-- Name: epmms_announcement_class_class_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_announcement_class_class_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_announcement_class_class_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_announcement_class_class_id_seq OWNED BY public.epmms_announcement_class.class_id;


--
-- Name: epmms_appropriate; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_appropriate (
    appropriate_id integer NOT NULL,
    appropriate_currency numeric(16,2) NOT NULL,
    appropriate_finance_type_id integer NOT NULL,
    appropriate_add_date timestamp(0) without time zone,
    appropriate_memberinfo_id integer,
    appropriate_type smallint NOT NULL
);


--
-- Name: TABLE epmms_appropriate; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_appropriate IS '公司拨款';


--
-- Name: COLUMN epmms_appropriate.appropriate_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_appropriate.appropriate_currency IS '拨款金额';


--
-- Name: COLUMN epmms_appropriate.appropriate_finance_type_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_appropriate.appropriate_finance_type_id IS '账户类型';


--
-- Name: COLUMN epmms_appropriate.appropriate_add_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_appropriate.appropriate_add_date IS '日期';


--
-- Name: COLUMN epmms_appropriate.appropriate_memberinfo_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_appropriate.appropriate_memberinfo_id IS '拨币会员';


--
-- Name: COLUMN epmms_appropriate.appropriate_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_appropriate.appropriate_type IS '操作';


--
-- Name: epmms_appropriate_appropriate_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_appropriate_appropriate_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_appropriate_appropriate_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_appropriate_appropriate_id_seq OWNED BY public.epmms_appropriate.appropriate_id;


--
-- Name: epmms_authassignment; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_authassignment (
    itemname character varying(64) NOT NULL,
    userid character varying(64) NOT NULL,
    bizrule text,
    data text
);


--
-- Name: epmms_authitem; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_authitem (
    name character varying(64) NOT NULL,
    type integer NOT NULL,
    description text,
    bizrule text,
    data text,
    add_date timestamp(0) without time zone DEFAULT now() NOT NULL,
    id integer NOT NULL
);


--
-- Name: COLUMN epmms_authitem.add_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_authitem.add_date IS '添加时间';


--
-- Name: epmms_authitem_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_authitem_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_authitem_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_authitem_id_seq OWNED BY public.epmms_authitem.id;


--
-- Name: epmms_authitemchild; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_authitemchild (
    parent character varying(64) NOT NULL,
    child character varying(64) NOT NULL
);


--
-- Name: epmms_award_config; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config (
    award_config_id integer DEFAULT nextval(('public.epmms_award_config_award_config_id_seq'::text)::regclass) NOT NULL,
    award_config_type_id bigint NOT NULL,
    award_config_currency numeric(16,4),
    award_config_is_percent smallint DEFAULT 0,
    award_config_add_date timestamp(0) without time zone DEFAULT now() NOT NULL,
    award_config_order integer
);


--
-- Name: COLUMN epmms_award_config.award_config_type_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config.award_config_type_id IS '奖金类型';


--
-- Name: COLUMN epmms_award_config.award_config_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config.award_config_currency IS '奖金额度';


--
-- Name: COLUMN epmms_award_config.award_config_is_percent; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config.award_config_is_percent IS '是否奖金百分比';


--
-- Name: COLUMN epmms_award_config.award_config_order; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config.award_config_order IS '排序';


--
-- Name: epmms_award_config_all_fenhong; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_all_fenhong (
    config_id integer NOT NULL,
    member_type integer NOT NULL,
    award_value numeric(16,2) NOT NULL
);


--
-- Name: TABLE epmms_award_config_all_fenhong; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_award_config_all_fenhong IS '新注册会员的7%平均分给所有金级会员
新注册会员的6%平均分给所有白金级会员
新注册会员的5%平均分给所有钻石级会员
新注册会员的2%平均分给所有干部会员
';


--
-- Name: COLUMN epmms_award_config_all_fenhong.member_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config_all_fenhong.member_type IS '会员类型';


--
-- Name: epmms_award_config_all_fenhong_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_all_fenhong_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_all_fenhong_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_all_fenhong_config_id_seq OWNED BY public.epmms_award_config_all_fenhong.config_id;


--
-- Name: epmms_award_config_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


--
-- Name: epmms_award_config_bonus; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_bonus (
    award_config_id integer NOT NULL,
    award_config_recommend_count int4range NOT NULL,
    award_config_recommend_layer int4range NOT NULL,
    award_config_currency numeric(16,3) NOT NULL
);


--
-- Name: epmms_award_config_bonus_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_bonus_award_config_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_bonus_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_bonus_award_config_id_seq OWNED BY public.epmms_award_config_bonus.award_config_id;


--
-- Name: epmms_award_config_dif; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_dif (
    award_config_id integer NOT NULL,
    director_level integer NOT NULL,
    dif_award numeric(16,2),
    equal_award numeric(16,2)
);


--
-- Name: COLUMN epmms_award_config_dif.director_level; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config_dif.director_level IS '董事级别';


--
-- Name: COLUMN epmms_award_config_dif.dif_award; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config_dif.dif_award IS '级差奖';


--
-- Name: COLUMN epmms_award_config_dif.equal_award; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config_dif.equal_award IS '平级奖';


--
-- Name: epmms_award_config_dot; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_dot (
    award_config_id integer NOT NULL,
    member_type integer NOT NULL,
    recommend_count int4range NOT NULL,
    recommend_layer integer NOT NULL,
    award_money numeric(16,2) NOT NULL
);


--
-- Name: TABLE epmms_award_config_dot; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_award_config_dot IS '接点关系下每上一单可获得相应数额的见点奖
新会员类型	推荐数	可拿的代数	奖金
金级	[0,1)	5	300
白金级	[0,1)	5	900
钻石级	[0,1)	5	2100
金级	[1,2)	8	300
白金级	[1,2)	8	900
钻石级	[1,2)	8	2100
金级	[2,3)	10	300
白金级	[2,3)	10	900
钻石级	[2,3)	10	2100
金级	[3,∞)	12	300
白金级	[3,∞)	12	900
钻石级	[3,∞)	12	2100';


--
-- Name: COLUMN epmms_award_config_dot.member_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config_dot.member_type IS '注册会员类型';


--
-- Name: COLUMN epmms_award_config_dot.recommend_count; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config_dot.recommend_count IS '推荐数';


--
-- Name: COLUMN epmms_award_config_dot.recommend_layer; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config_dot.recommend_layer IS '拿奖金的层数';


--
-- Name: COLUMN epmms_award_config_dot.award_money; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config_dot.award_money IS '奖金';


--
-- Name: epmms_award_config_dot_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_dot_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_dot_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_dot_award_config_id_seq OWNED BY public.epmms_award_config_dot.award_config_id;


--
-- Name: epmms_award_config_dot_fuwu; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_dot_fuwu (
    award_config_id integer NOT NULL,
    award_config_recommend int4range NOT NULL,
    award_config_layer int4range NOT NULL,
    award_config_currency numeric(16,2) NOT NULL
);


--
-- Name: epmms_award_config_dot_fuwu_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_dot_fuwu_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_dot_fuwu_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_dot_fuwu_award_config_id_seq OWNED BY public.epmms_award_config_dot_fuwu.award_config_id;


--
-- Name: epmms_award_config_dot_layer; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_dot_layer (
    award_config_id integer NOT NULL,
    award_config_layer integer NOT NULL,
    award_config_currency numeric(16,2)
);


--
-- Name: COLUMN epmms_award_config_dot_layer.award_config_layer; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config_dot_layer.award_config_layer IS '层数';


--
-- Name: COLUMN epmms_award_config_dot_layer.award_config_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config_dot_layer.award_config_currency IS '奖金';


--
-- Name: epmms_award_config_dot_layer_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_dot_layer_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_dot_layer_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_dot_layer_award_config_id_seq OWNED BY public.epmms_award_config_dot_layer.award_config_id;


--
-- Name: epmms_award_config_dot_matrix; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_dot_matrix (
    award_config_id integer NOT NULL,
    award_config_award_member integer NOT NULL,
    award_config_new_member integer NOT NULL,
    award_config_layer integer NOT NULL,
    award_config_currency numeric(16,2) NOT NULL
);


--
-- Name: epmms_award_config_dot_matrix_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_dot_matrix_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_dot_matrix_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_dot_matrix_award_config_id_seq OWNED BY public.epmms_award_config_dot_matrix.award_config_id;


--
-- Name: epmms_award_config_dot_member; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_dot_member (
    award_config_id integer NOT NULL,
    award_config_member integer,
    award_config_layer int4range,
    award_config_currency numeric(16,2)
);


--
-- Name: epmms_award_config_dot_member_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_dot_member_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_dot_member_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_dot_member_award_config_id_seq OWNED BY public.epmms_award_config_dot_member.award_config_id;


--
-- Name: epmms_award_config_down; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_down (
    award_config_id integer NOT NULL,
    award_config_layer integer NOT NULL,
    award_config_award_member integer NOT NULL,
    award_config_currency numeric(16,2) NOT NULL
);


--
-- Name: TABLE epmms_award_config_down; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_award_config_down IS '下拿上';


--
-- Name: epmms_award_config_down_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_down_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_down_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_down_award_config_id_seq OWNED BY public.epmms_award_config_down.award_config_id;


--
-- Name: epmms_award_config_dup_dot; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_dup_dot (
    award_config_id integer NOT NULL,
    recommend_count int4range NOT NULL,
    award_layer integer NOT NULL,
    award_money numeric(16,2)
);


--
-- Name: TABLE epmms_award_config_dup_dot; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_award_config_dup_dot IS '如重消关怀奖所述，推荐关系下面的会员购买产品时，可得相应的重消见点奖';


--
-- Name: COLUMN epmms_award_config_dup_dot.recommend_count; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config_dup_dot.recommend_count IS '推荐个数';


--
-- Name: COLUMN epmms_award_config_dup_dot.award_money; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config_dup_dot.award_money IS '奖金';


--
-- Name: epmms_award_config_dup_dot_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_dup_dot_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_dup_dot_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_dup_dot_award_config_id_seq OWNED BY public.epmms_award_config_dup_dot.award_config_id;


--
-- Name: epmms_award_config_foundation; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_foundation (
    award_config_id integer NOT NULL,
    award_config_foundation_money numeric(16,2) NOT NULL,
    award_config_founcation_score numeric(16,2) NOT NULL,
    award_config_member integer
);


--
-- Name: epmms_award_config_foundation_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_foundation_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_foundation_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_foundation_award_config_id_seq OWNED BY public.epmms_award_config_foundation.award_config_id;


--
-- Name: epmms_award_config_gl; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_gl (
    award_config_id integer NOT NULL,
    award_config_layer integer NOT NULL,
    award_config_currency numeric(16,2) NOT NULL,
    award_config_member integer
);


--
-- Name: TABLE epmms_award_config_gl; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_award_config_gl IS '下代产生组织奖时得管理奖如下:
会员    代数(接点关系下面)    奖金
2500    第1代    10%
5000    第1代    10%
5000    第2代    10%
10000    第1代    10%
10000    第2代    10%
10000    第3代    20%
20000    第1代    10%
20000    第2代    10%
20000    第3代    20%
20000    第4代    40%
';


--
-- Name: epmms_award_config_gl_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_gl_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_gl_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_gl_award_config_id_seq OWNED BY public.epmms_award_config_gl.award_config_id;


--
-- Name: epmms_award_config_gongpai; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_gongpai (
    award_config_id integer NOT NULL,
    award_config_new_member integer NOT NULL,
    award_config_currency numeric(16,2) NOT NULL
);


--
-- Name: TABLE epmms_award_config_gongpai; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_award_config_gongpai IS '每注册一个VIP会员给比他注册时间早的10个钻石会员60元
每注册一个钻石会员给比他注册时间早的10个钻石会员180元';


--
-- Name: epmms_award_config_gongpai_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_gongpai_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_gongpai_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_gongpai_award_config_id_seq OWNED BY public.epmms_award_config_gongpai.award_config_id;


--
-- Name: epmms_award_config_group; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_group (
    award_config_id integer NOT NULL,
    award_config_membertype integer NOT NULL,
    award_config_layer integer NOT NULL,
    award_config_currency numeric(16,2)
);


--
-- Name: TABLE epmms_award_config_group; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_award_config_group IS '接点关系下每注册一个拿10元,默认拿以下层数

会员    层数
会员    4
金卡    5
土豪    6
土豪金    7
此后每推荐1人,增加一层,最大10层
';


--
-- Name: epmms_award_config_group7; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_group7 (
    award_config_id integer NOT NULL,
    award_config_membertype integer NOT NULL,
    award_config_currency numeric(16,2)
);


--
-- Name: epmms_award_config_group7_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_group7_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_group7_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_group7_award_config_id_seq OWNED BY public.epmms_award_config_group7.award_config_id;


--
-- Name: epmms_award_config_group_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_group_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_group_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_group_award_config_id_seq OWNED BY public.epmms_award_config_group.award_config_id;


--
-- Name: epmms_award_config_huikui; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_huikui (
    award_config_id integer NOT NULL,
    award_config_layer integer,
    award_config_level integer,
    award_config_currency numeric(16,2)
);


--
-- Name: TABLE epmms_award_config_huikui; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_award_config_huikui IS '当某会员下面指定层上的会员升级时该会员可得奖金';


--
-- Name: epmms_award_config_huikui_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_huikui_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_huikui_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_huikui_award_config_id_seq OWNED BY public.epmms_award_config_huikui.award_config_id;


--
-- Name: epmms_award_config_layer; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_layer (
    award_config_id integer NOT NULL,
    award_config_layer integer NOT NULL,
    award_config_award_currency numeric(16,2) NOT NULL,
    award_config_type integer
);


--
-- Name: TABLE epmms_award_config_layer; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_award_config_layer IS '层奖';


--
-- Name: COLUMN epmms_award_config_layer.award_config_layer; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config_layer.award_config_layer IS '层数';


--
-- Name: COLUMN epmms_award_config_layer.award_config_award_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config_layer.award_config_award_currency IS '奖金';


--
-- Name: COLUMN epmms_award_config_layer.award_config_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config_layer.award_config_type IS '获奖会员类型';


--
-- Name: epmms_award_config_layer_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_layer_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_layer_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_layer_award_config_id_seq OWNED BY public.epmms_award_config_layer.award_config_id;


--
-- Name: epmms_award_config_layer_dot; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_layer_dot (
    award_config_id integer NOT NULL,
    award_config_layer integer NOT NULL,
    award_config_recommend_number int4range NOT NULL,
    award_config_currency numeric(16,2) NOT NULL
);


--
-- Name: TABLE epmms_award_config_layer_dot; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_award_config_layer_dot IS '各层见点奖不同';


--
-- Name: epmms_award_config_layer_dot_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_layer_dot_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_layer_dot_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_layer_dot_award_config_id_seq OWNED BY public.epmms_award_config_layer_dot.award_config_id;


--
-- Name: epmms_award_config_layer_recommend_dot; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_layer_recommend_dot (
    award_config_id integer NOT NULL,
    award_recommend_count int4range,
    award_layer int4range,
    award_currency numeric(16,2)
);


--
-- Name: TABLE epmms_award_config_layer_recommend_dot; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_award_config_layer_recommend_dot IS '每注册一个会员符合条件的拿
推荐数    层数(接点)    奖金
0    [1,10]    100
1    [1,12]    100
2    [1,15]    100
';


--
-- Name: epmms_award_config_layer_recommend_dot_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_layer_recommend_dot_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_layer_recommend_dot_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_layer_recommend_dot_award_config_id_seq OWNED BY public.epmms_award_config_layer_recommend_dot.award_config_id;


--
-- Name: epmms_award_config_leader_down; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_leader_down (
    award_config_id integer NOT NULL,
    award_config_member integer,
    award_config_layer int4range NOT NULL,
    award_config_currency numeric(16,2)
);


--
-- Name: epmms_award_config_leader_down_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_leader_down_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_leader_down_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_leader_down_award_config_id_seq OWNED BY public.epmms_award_config_leader_down.award_config_id;


--
-- Name: epmms_award_config_lingdao; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_lingdao (
    award_config_id integer NOT NULL,
    award_config_new_member integer NOT NULL,
    award_config_currency numeric(16,2) NOT NULL
);


--
-- Name: epmms_award_config_lingdao_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_lingdao_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_lingdao_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_lingdao_award_config_id_seq OWNED BY public.epmms_award_config_lingdao.award_config_id;


--
-- Name: epmms_award_config_org_down; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_org_down (
    award_config_id integer NOT NULL,
    recommend_count int4range NOT NULL,
    award_layer integer NOT NULL,
    award_money numeric(16,2) NOT NULL
);


--
-- Name: TABLE epmms_award_config_org_down; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_award_config_org_down IS '互动奖金的细节是这样：
推荐1-2人的时候 按照排列形式分为，

1代（左右各一个）时，互动奖为的5%（左右各一，2个人时 互动奖5%*2）

2代（一条线串排）时第二个（各代下级），互动奖为5%+4%

继续排3-4等等，以此类推直到9代下级为止（5代以下都是1% )';


--
-- Name: COLUMN epmms_award_config_org_down.recommend_count; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config_org_down.recommend_count IS '推荐数';


--
-- Name: COLUMN epmms_award_config_org_down.award_layer; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config_org_down.award_layer IS '拿奖金的层数';


--
-- Name: COLUMN epmms_award_config_org_down.award_money; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config_org_down.award_money IS '奖金';


--
-- Name: epmms_award_config_org_down_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_org_down_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_org_down_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_org_down_award_config_id_seq OWNED BY public.epmms_award_config_org_down.award_config_id;


--
-- Name: epmms_award_config_out; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_out (
    award_config_id integer NOT NULL,
    award_config_recommend integer,
    award_config_award numeric(16,2)
);


--
-- Name: COLUMN epmms_award_config_out.award_config_recommend; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config_out.award_config_recommend IS '推荐数';


--
-- Name: COLUMN epmms_award_config_out.award_config_award; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config_out.award_config_award IS '奖金达到该值时出局';


--
-- Name: epmms_award_config_out_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_out_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_out_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_out_award_config_id_seq OWNED BY public.epmms_award_config_out.award_config_id;


--
-- Name: epmms_award_config_pair_member; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_pair_member (
    award_config_id integer NOT NULL,
    award_config_membertype integer NOT NULL,
    award_config_currency numeric(16,2) NOT NULL,
    award_config_diff numeric(16,2)
);


--
-- Name: TABLE epmms_award_config_pair_member; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_award_config_pair_member IS '1:1对碰';


--
-- Name: COLUMN epmms_award_config_pair_member.award_config_membertype; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config_pair_member.award_config_membertype IS '会员类型';


--
-- Name: COLUMN epmms_award_config_pair_member.award_config_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_config_pair_member.award_config_currency IS '奖金';


--
-- Name: epmms_award_config_pair_member_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_pair_member_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_pair_member_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_pair_member_award_config_id_seq OWNED BY public.epmms_award_config_pair_member.award_config_id;


--
-- Name: epmms_award_config_peiyu_upgrade; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_peiyu_upgrade (
    award_config_id integer NOT NULL,
    award_config_number integer,
    award_config_member_level integer,
    award_config_upgrade integer
);


--
-- Name: epmms_award_config_peiyu_upgrade_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_peiyu_upgrade_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_peiyu_upgrade_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_peiyu_upgrade_award_config_id_seq OWNED BY public.epmms_award_config_peiyu_upgrade.award_config_id;


--
-- Name: epmms_award_config_prize; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_prize (
    award_config_id integer NOT NULL,
    award_config_name character varying(50) NOT NULL,
    award_config_total numeric(16,2) NOT NULL
);


--
-- Name: TABLE epmms_award_config_prize; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_award_config_prize IS 'A:B表示A大于等于且B大于等于
1、当 A:B=50:50 单    公司奖励一台多功能洗菜机(价值1980元）
2、当 A:B=250:250 单  公司奖励一部智能手机和电话卡（价值8000元）                                                                 
3、当 A:B=500:500 单  公司奖励一辆QQ汽车（价值3万元）
4、当A:B=1500:1500单 公司奖励一辆奔腾汽车（价值10万元）
5、当A:B=3000:3000单 公司奖励一辆奥迪汽车（价值20万元）
6、当A:B=5000:5000 单公司奖励宝马一辆或者海景房一套';


--
-- Name: epmms_award_config_prize_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_prize_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_prize_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_prize_award_config_id_seq OWNED BY public.epmms_award_config_prize.award_config_id;


--
-- Name: epmms_award_config_recommend; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_recommend (
    award_config_id integer NOT NULL,
    award_config_membertype integer DEFAULT 0 NOT NULL,
    award_config_currency numeric(16,2) NOT NULL
);


--
-- Name: epmms_award_config_recommend_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_recommend_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_recommend_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_recommend_award_config_id_seq OWNED BY public.epmms_award_config_recommend.award_config_id;


--
-- Name: epmms_award_config_recommend_layer; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_recommend_layer (
    award_config_id integer NOT NULL,
    award_config_recommend_layer int4range NOT NULL,
    award_config_currency numeric(16,2) NOT NULL
);


--
-- Name: epmms_award_config_recommend_layer_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_recommend_layer_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_recommend_layer_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_recommend_layer_award_config_id_seq OWNED BY public.epmms_award_config_recommend_layer.award_config_id;


--
-- Name: epmms_award_config_recommend_layer_dot; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_recommend_layer_dot (
    award_config_id integer NOT NULL,
    award_config_new_member integer NOT NULL,
    award_config_layer int4range NOT NULL,
    award_config_recommend int4range NOT NULL,
    award_config_currency numeric(16,2) NOT NULL
);


--
-- Name: epmms_award_config_recommend_level; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_recommend_level (
    award_config_id integer DEFAULT nextval(('public.epmms_award_config_recommend_level_award_config_id_seq'::text)::regclass) NOT NULL,
    award_config_level integer,
    award_config_recommend_layer integer,
    award_config_currency numeric(16,2)
);


--
-- Name: epmms_award_config_recommend_level_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_recommend_level_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


--
-- Name: epmms_award_config_share; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_share (
    award_config_id integer NOT NULL,
    award_config_member_count int4range NOT NULL,
    award_config_currency numeric(16,2) NOT NULL
);


--
-- Name: epmms_award_config_share_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_share_award_config_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_share_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_share_award_config_id_seq OWNED BY public.epmms_award_config_share.award_config_id;


--
-- Name: epmms_award_config_stock; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_stock (
    award_config_id integer NOT NULL,
    award_config_membertype integer NOT NULL,
    award_config_currency numeric(16,2) NOT NULL
);


--
-- Name: epmms_award_config_stock_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_stock_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_stock_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_stock_award_config_id_seq OWNED BY public.epmms_award_config_stock.award_config_id;


--
-- Name: epmms_award_config_student_out; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_student_out (
    award_config_recommend int4range NOT NULL,
    award_config_out_currency numeric(16,2)
);


--
-- Name: epmms_award_config_up; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_up (
    award_config_id integer NOT NULL,
    award_config_layer integer NOT NULL,
    award_config_award_member integer NOT NULL,
    award_config_currency numeric(16,2) NOT NULL
);


--
-- Name: epmms_award_config_up_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_up_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_up_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_up_award_config_id_seq OWNED BY public.epmms_award_config_up.award_config_id;


--
-- Name: epmms_award_config_upgrade; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_upgrade (
    award_config_id integer NOT NULL,
    award_config_layer integer,
    award_config_level integer NOT NULL,
    award_config_money numeric(16,2) NOT NULL
);


--
-- Name: epmms_award_config_upgrade_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_upgrade_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_upgrade_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_upgrade_award_config_id_seq OWNED BY public.epmms_award_config_upgrade.award_config_id;


--
-- Name: epmms_award_config_yeji; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_config_yeji (
    award_config_id integer NOT NULL,
    award_config_member integer NOT NULL,
    award_config_layer integer NOT NULL,
    award_config_currency numeric(16,2) NOT NULL,
    award_config_free_date integer,
    award_config_yeji integer NOT NULL
);


--
-- Name: epmms_award_config_yeji_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_config_yeji_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_config_yeji_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_config_yeji_award_config_id_seq OWNED BY public.epmms_award_config_yeji.award_config_id;


--
-- Name: epmms_award_day; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_day (
    award_day_id integer DEFAULT nextval(('public.epmms_award_day_award_day_id_seq'::text)::regclass) NOT NULL,
    award_day_date date NOT NULL,
    award_day_memberinfo_id bigint NOT NULL,
    award_day_currency numeric(16,2) NOT NULL,
    award_day_type_id bigint NOT NULL,
    award_day_add_date timestamp(0) without time zone DEFAULT now(),
    award_day_sum_type integer NOT NULL
);


--
-- Name: COLUMN epmms_award_day.award_day_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_day.award_day_date IS '日序号';


--
-- Name: COLUMN epmms_award_day.award_day_memberinfo_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_day.award_day_memberinfo_id IS '会员id';


--
-- Name: COLUMN epmms_award_day.award_day_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_day.award_day_currency IS '奖金额度';


--
-- Name: COLUMN epmms_award_day.award_day_type_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_day.award_day_type_id IS '奖金类型';


--
-- Name: COLUMN epmms_award_day.award_day_add_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_day.award_day_add_date IS '添加时间';


--
-- Name: epmms_award_day_award_day_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_day_award_day_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_day_sum; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_day_sum (
    award_day_sum_id integer DEFAULT nextval(('public.epmms_award_day_sum_award_day_sum_id_seq'::text)::regclass) NOT NULL,
    award_day_sum_memberinfo_id integer NOT NULL,
    award_day_sum_currency numeric(16,2) NOT NULL,
    award_day_sum_date date NOT NULL,
    award_day_sum_add_date timestamp(3) without time zone DEFAULT now(),
    award_day_sum_type integer DEFAULT 1,
    award_day_sum_is_withdrawals smallint DEFAULT 0 NOT NULL
);


--
-- Name: COLUMN epmms_award_day_sum.award_day_sum_memberinfo_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_day_sum.award_day_sum_memberinfo_id IS '来源用户';


--
-- Name: COLUMN epmms_award_day_sum.award_day_sum_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_day_sum.award_day_sum_currency IS '汇总金额';


--
-- Name: COLUMN epmms_award_day_sum.award_day_sum_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_day_sum.award_day_sum_date IS '天日期';


--
-- Name: COLUMN epmms_award_day_sum.award_day_sum_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_day_sum.award_day_sum_type IS '汇总类别';


--
-- Name: epmms_award_day_sum_all; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_day_sum_all (
    award_day_sum_id integer NOT NULL,
    award_day_sum_memberinfo_id integer NOT NULL,
    award_day_sum_currency numeric(16,2) NOT NULL,
    award_day_sum_date date NOT NULL,
    award_day_sum_add_date timestamp(3) without time zone DEFAULT now(),
    award_day_sum_is_withdrawals smallint DEFAULT 0 NOT NULL
);


--
-- Name: epmms_award_day_sum_all_award_day_sum_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_day_sum_all_award_day_sum_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_day_sum_all_award_day_sum_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_day_sum_all_award_day_sum_id_seq OWNED BY public.epmms_award_day_sum_all.award_day_sum_id;


--
-- Name: epmms_award_day_sum_award_day_sum_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_day_sum_award_day_sum_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_group; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_group (
    award_group_id integer NOT NULL,
    award_group_group integer DEFAULT 1 NOT NULL,
    award_group_type integer NOT NULL,
    award_group_calc integer[] DEFAULT '{0}'::integer[]
);


--
-- Name: TABLE epmms_award_group; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_award_group IS '奖金组配置';


--
-- Name: COLUMN epmms_award_group.award_group_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_group.award_group_type IS '奖金类型';


--
-- Name: COLUMN epmms_award_group.award_group_calc; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_group.award_group_calc IS '结算方式';


--
-- Name: epmms_award_group_award_group_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_group_award_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_group_award_group_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_group_award_group_id_seq OWNED BY public.epmms_award_group.award_group_id;


--
-- Name: epmms_award_month; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_month (
    award_month_id integer DEFAULT nextval(('public.epmms_award_month_award_month_id_seq'::text)::regclass) NOT NULL,
    award_month_date date NOT NULL,
    award_month_memberinfo_id integer NOT NULL,
    award_month_currency numeric(16,2) NOT NULL,
    award_month_type_id integer NOT NULL,
    award_month_add_date timestamp(0) without time zone DEFAULT now(),
    award_month_sum_type integer NOT NULL
);


--
-- Name: COLUMN epmms_award_month.award_month_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_month.award_month_date IS '月序号';


--
-- Name: COLUMN epmms_award_month.award_month_memberinfo_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_month.award_month_memberinfo_id IS '会员id';


--
-- Name: COLUMN epmms_award_month.award_month_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_month.award_month_currency IS '奖金额度';


--
-- Name: COLUMN epmms_award_month.award_month_type_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_month.award_month_type_id IS '奖金类型';


--
-- Name: COLUMN epmms_award_month.award_month_add_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_month.award_month_add_date IS '添加日期';


--
-- Name: epmms_award_month_award_month_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_month_award_month_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_month_sum; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_month_sum (
    award_month_sum_id integer DEFAULT nextval(('public.epmms_award_month_sum_award_month_sum_id_seq'::text)::regclass) NOT NULL,
    award_month_sum_memberinfo_id integer NOT NULL,
    award_month_sum_currency numeric(16,2) NOT NULL,
    award_month_sum_date date NOT NULL,
    award_month_sum_add_date timestamp(0) without time zone DEFAULT now(),
    award_month_sum_type integer DEFAULT 1,
    award_month_sum_is_withdrawals smallint DEFAULT 0 NOT NULL
);


--
-- Name: COLUMN epmms_award_month_sum.award_month_sum_memberinfo_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_month_sum.award_month_sum_memberinfo_id IS '来源用户';


--
-- Name: COLUMN epmms_award_month_sum.award_month_sum_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_month_sum.award_month_sum_currency IS '汇总金额';


--
-- Name: COLUMN epmms_award_month_sum.award_month_sum_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_month_sum.award_month_sum_date IS '月日期';


--
-- Name: COLUMN epmms_award_month_sum.award_month_sum_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_month_sum.award_month_sum_type IS '汇总分类';


--
-- Name: epmms_award_month_sum_all; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_month_sum_all (
    award_month_sum_id integer NOT NULL,
    award_month_sum_memberinfo_id integer NOT NULL,
    award_month_sum_currency numeric(16,2) NOT NULL,
    award_month_sum_date date NOT NULL,
    award_month_sum_add_date timestamp(0) without time zone DEFAULT now(),
    award_month_sum_is_withdrawals smallint DEFAULT 0 NOT NULL
);


--
-- Name: COLUMN epmms_award_month_sum_all.award_month_sum_memberinfo_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_month_sum_all.award_month_sum_memberinfo_id IS '来源用户';


--
-- Name: COLUMN epmms_award_month_sum_all.award_month_sum_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_month_sum_all.award_month_sum_currency IS '汇总金额';


--
-- Name: COLUMN epmms_award_month_sum_all.award_month_sum_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_month_sum_all.award_month_sum_date IS '月日期';


--
-- Name: epmms_award_month_sum_all_award_month_sum_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_month_sum_all_award_month_sum_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_month_sum_all_award_month_sum_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_month_sum_all_award_month_sum_id_seq OWNED BY public.epmms_award_month_sum_all.award_month_sum_id;


--
-- Name: epmms_award_month_sum_award_month_sum_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_month_sum_award_month_sum_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_year_sum; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_year_sum (
    award_year_sum_id integer NOT NULL,
    award_year_sum_memberinfo_id integer NOT NULL,
    award_year_sum_currency numeric(16,2),
    award_year_sum_date date NOT NULL,
    award_year_sum_add_date timestamp(0) without time zone DEFAULT now(),
    award_year_sum_type integer NOT NULL
);


--
-- Name: COLUMN epmms_award_year_sum.award_year_sum_memberinfo_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_year_sum.award_year_sum_memberinfo_id IS '获奖会员';


--
-- Name: COLUMN epmms_award_year_sum.award_year_sum_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_year_sum.award_year_sum_currency IS '年小计';


--
-- Name: COLUMN epmms_award_year_sum.award_year_sum_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_year_sum.award_year_sum_date IS '年度的第一天';


--
-- Name: COLUMN epmms_award_year_sum.award_year_sum_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_year_sum.award_year_sum_type IS '汇总类型';


--
-- Name: epmms_award_month_year_sum_award_year_sum_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_month_year_sum_award_year_sum_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_month_year_sum_award_year_sum_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_month_year_sum_award_year_sum_id_seq OWNED BY public.epmms_award_year_sum.award_year_sum_id;


--
-- Name: epmms_award_period; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_period (
    award_period_id integer DEFAULT nextval(('public.epmms_award_period_award_period_id_seq'::text)::regclass) NOT NULL,
    award_period_period integer NOT NULL,
    award_period_memberinfo_id integer NOT NULL,
    award_period_currency numeric(16,4) NOT NULL,
    award_period_type_id integer NOT NULL,
    award_period_add_date timestamp(0) without time zone DEFAULT now() NOT NULL,
    award_period_sum_type integer NOT NULL,
    award_period_type2 integer
);


--
-- Name: COLUMN epmms_award_period.award_period_period; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_period.award_period_period IS '期次';


--
-- Name: COLUMN epmms_award_period.award_period_memberinfo_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_period.award_period_memberinfo_id IS '会员id';


--
-- Name: COLUMN epmms_award_period.award_period_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_period.award_period_currency IS '奖金额度';


--
-- Name: COLUMN epmms_award_period.award_period_type_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_period.award_period_type_id IS '奖金类型';


--
-- Name: epmms_award_period_award_period_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_period_award_period_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_period_sum; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_period_sum (
    award_period_sum_id integer DEFAULT nextval(('public.epmms_award_period_sum_award_period_sum_id_seq'::text)::regclass) NOT NULL,
    award_period_sum_memberinfo_id integer NOT NULL,
    award_period_sum_src_memberinfo_id integer,
    award_period_sum_currency numeric(16,2) DEFAULT 0.00 NOT NULL,
    award_period_sum_period integer NOT NULL,
    award_period_sum_add_date timestamp(0) without time zone DEFAULT now(),
    award_period_sum_type integer DEFAULT 1,
    award_period_sum_src_memberinfo_id_b integer
);


--
-- Name: COLUMN epmms_award_period_sum.award_period_sum_memberinfo_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_period_sum.award_period_sum_memberinfo_id IS '来源用户';


--
-- Name: COLUMN epmms_award_period_sum.award_period_sum_src_memberinfo_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_period_sum.award_period_sum_src_memberinfo_id IS '来源会员id';


--
-- Name: COLUMN epmms_award_period_sum.award_period_sum_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_period_sum.award_period_sum_currency IS '汇总金额';


--
-- Name: COLUMN epmms_award_period_sum.award_period_sum_period; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_period_sum.award_period_sum_period IS '期次';


--
-- Name: COLUMN epmms_award_period_sum.award_period_sum_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_period_sum.award_period_sum_type IS '汇总分类';


--
-- Name: epmms_award_period_sum_award_period_sum_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_period_sum_award_period_sum_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_total; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_total (
    award_total_id integer DEFAULT nextval(('public.epmms_award_total_award_total_id_seq'::text)::regclass) NOT NULL,
    award_total_memberinfo_id integer NOT NULL,
    award_total_currency numeric(16,2) DEFAULT 0 NOT NULL,
    award_total_type_id integer NOT NULL,
    award_total_add_date timestamp(0) without time zone DEFAULT now(),
    award_total_sum_type integer NOT NULL
);


--
-- Name: COLUMN epmms_award_total.award_total_memberinfo_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_total.award_total_memberinfo_id IS '会员id';


--
-- Name: COLUMN epmms_award_total.award_total_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_total.award_total_currency IS '奖金额度';


--
-- Name: COLUMN epmms_award_total.award_total_type_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_total.award_total_type_id IS '奖金类型';


--
-- Name: epmms_award_total_award_total_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_total_award_total_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_total_sum; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_total_sum (
    award_total_sum_id integer DEFAULT nextval(('public.epmms_award_total_sum_award_total_sum_id_seq'::text)::regclass) NOT NULL,
    award_total_sum_memberinfo_id integer NOT NULL,
    award_total_sum_currency numeric(16,2) NOT NULL,
    award_total_sum_add_date timestamp(0) without time zone DEFAULT now(),
    award_total_sum_type integer DEFAULT 1
);


--
-- Name: COLUMN epmms_award_total_sum.award_total_sum_memberinfo_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_total_sum.award_total_sum_memberinfo_id IS '来源用户';


--
-- Name: COLUMN epmms_award_total_sum.award_total_sum_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_total_sum.award_total_sum_currency IS '汇总金额';


--
-- Name: COLUMN epmms_award_total_sum.award_total_sum_add_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_total_sum.award_total_sum_add_date IS '添加日期';


--
-- Name: COLUMN epmms_award_total_sum.award_total_sum_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_total_sum.award_total_sum_type IS '汇总分类';


--
-- Name: epmms_award_total_sum_award_total_sum_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_total_sum_award_total_sum_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_type; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_type (
    award_type_id integer NOT NULL,
    award_type_name character varying(10) NOT NULL,
    award_type_desc text,
    award_type_is_enable smallint DEFAULT 1 NOT NULL,
    award_type_class character varying(40),
    award_type_order integer DEFAULT 0,
    award_is_calc smallint DEFAULT 1 NOT NULL,
    award_type_is_upgrade smallint DEFAULT 0,
    award_time character varying(20)
);


--
-- Name: COLUMN epmms_award_type.award_type_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_type.award_type_name IS '奖金名称';


--
-- Name: COLUMN epmms_award_type.award_type_desc; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_type.award_type_desc IS '奖金描述';


--
-- Name: COLUMN epmms_award_type.award_type_is_enable; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_type.award_type_is_enable IS '是否启用，只需启用客户需要的奖金制度';


--
-- Name: COLUMN epmms_award_type.award_type_class; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_type.award_type_class IS '实现该算法的php类或sql函数';


--
-- Name: COLUMN epmms_award_type.award_type_order; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_type.award_type_order IS '奖金显示顺序';


--
-- Name: COLUMN epmms_award_type.award_is_calc; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_type.award_is_calc IS '是否通过存储过程计算';


--
-- Name: COLUMN epmms_award_type.award_type_is_upgrade; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_type.award_type_is_upgrade IS '是否支持升级';


--
-- Name: epmms_award_week; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_week (
    award_week_id integer DEFAULT nextval(('public.epmms_award_week_award_week_id_seq'::text)::regclass) NOT NULL,
    award_week_date date NOT NULL,
    award_week_memberinfo_id integer NOT NULL,
    award_week_currency numeric(16,2) NOT NULL,
    award_week_type_id integer NOT NULL,
    award_week_add_date timestamp(0) without time zone DEFAULT now(),
    award_week_sum_type integer NOT NULL
);


--
-- Name: COLUMN epmms_award_week.award_week_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_week.award_week_date IS '星期序号';


--
-- Name: COLUMN epmms_award_week.award_week_memberinfo_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_week.award_week_memberinfo_id IS '会员id';


--
-- Name: COLUMN epmms_award_week.award_week_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_week.award_week_currency IS '奖金额度';


--
-- Name: COLUMN epmms_award_week.award_week_type_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_week.award_week_type_id IS '奖金类型';


--
-- Name: COLUMN epmms_award_week.award_week_add_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_week.award_week_add_date IS '添加时间';


--
-- Name: epmms_award_week_award_week_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_week_award_week_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_week_sum; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_week_sum (
    award_week_sum_id integer DEFAULT nextval(('public.epmms_award_week_sum_award_week_sum_id_seq'::text)::regclass) NOT NULL,
    award_week_sum_memberinfo_id integer NOT NULL,
    award_week_sum_currency numeric(16,2) NOT NULL,
    award_week_sum_date date NOT NULL,
    award_week_sum_add_date timestamp(3) without time zone DEFAULT now(),
    award_week_sum_type integer DEFAULT 1 NOT NULL,
    award_week_sum_is_withdrawals smallint DEFAULT 0 NOT NULL
);


--
-- Name: COLUMN epmms_award_week_sum.award_week_sum_memberinfo_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_week_sum.award_week_sum_memberinfo_id IS '来源用户';


--
-- Name: COLUMN epmms_award_week_sum.award_week_sum_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_week_sum.award_week_sum_currency IS '汇总金额';


--
-- Name: COLUMN epmms_award_week_sum.award_week_sum_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_week_sum.award_week_sum_date IS '周日期';


--
-- Name: COLUMN epmms_award_week_sum.award_week_sum_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_week_sum.award_week_sum_type IS '汇总类型';


--
-- Name: epmms_award_week_sum_all; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_week_sum_all (
    award_week_sum_id integer NOT NULL,
    award_week_sum_memberinfo_id integer NOT NULL,
    award_week_sum_currency numeric(16,2) NOT NULL,
    award_week_sum_date date NOT NULL,
    award_week_sum_add_date timestamp(3) without time zone DEFAULT now(),
    award_week_sum_is_withdrawals smallint DEFAULT 0 NOT NULL
);


--
-- Name: COLUMN epmms_award_week_sum_all.award_week_sum_memberinfo_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_week_sum_all.award_week_sum_memberinfo_id IS '来源用户';


--
-- Name: COLUMN epmms_award_week_sum_all.award_week_sum_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_week_sum_all.award_week_sum_currency IS '汇总金额';


--
-- Name: COLUMN epmms_award_week_sum_all.award_week_sum_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_week_sum_all.award_week_sum_date IS '周日期';


--
-- Name: epmms_award_week_sum_all_award_week_sum_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_week_sum_all_award_week_sum_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_week_sum_all_award_week_sum_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_week_sum_all_award_week_sum_id_seq OWNED BY public.epmms_award_week_sum_all.award_week_sum_id;


--
-- Name: epmms_award_week_sum_award_week_sum_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_week_sum_award_week_sum_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_year; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_award_year (
    award_year_id integer NOT NULL,
    award_year_date date NOT NULL,
    award_year_memberinfo_id integer NOT NULL,
    award_year_currency numeric(16,2),
    award_year_type_id integer NOT NULL,
    award_year_add_date timestamp(0) without time zone DEFAULT now(),
    award_year_sum_type integer NOT NULL
);


--
-- Name: COLUMN epmms_award_year.award_year_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_year.award_year_date IS '年份的第一天';


--
-- Name: COLUMN epmms_award_year.award_year_memberinfo_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_year.award_year_memberinfo_id IS '获奖会员';


--
-- Name: COLUMN epmms_award_year.award_year_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_year.award_year_currency IS '奖金';


--
-- Name: COLUMN epmms_award_year.award_year_type_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_award_year.award_year_type_id IS '奖金类型';


--
-- Name: epmms_award_year_award_year_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_award_year_award_year_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_award_year_award_year_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_award_year_award_year_id_seq OWNED BY public.epmms_award_year.award_year_id;


--
-- Name: epmms_backup; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_backup (
    backup_id integer NOT NULL,
    backup_name character varying(200) NOT NULL,
    backup_add_date timestamp(0) without time zone DEFAULT now(),
    backup_remark text,
    backup_file text NOT NULL,
    backup_type smallint DEFAULT 0 NOT NULL
);


--
-- Name: TABLE epmms_backup; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_backup IS '备份恢复';


--
-- Name: COLUMN epmms_backup.backup_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_backup.backup_name IS '备份名称';


--
-- Name: COLUMN epmms_backup.backup_add_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_backup.backup_add_date IS '备份日期';


--
-- Name: COLUMN epmms_backup.backup_remark; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_backup.backup_remark IS '备注';


--
-- Name: COLUMN epmms_backup.backup_file; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_backup.backup_file IS '备份文件';


--
-- Name: COLUMN epmms_backup.backup_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_backup.backup_type IS '备份类型
0自动备份
1人工备份';


--
-- Name: epmms_backup_backup_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_backup_backup_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_backup_backup_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_backup_backup_id_seq OWNED BY public.epmms_backup.backup_id;


--
-- Name: epmms_bank; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_bank (
    bank_id integer DEFAULT nextval(('public.epmms_bank_bank_id_seq'::text)::regclass) NOT NULL,
    bank_name character varying(50) NOT NULL,
    bank_is_preset smallint DEFAULT 0,
    bank_is_enable smallint DEFAULT 1 NOT NULL
);


--
-- Name: COLUMN epmms_bank.bank_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_bank.bank_name IS '银行名称';


--
-- Name: COLUMN epmms_bank.bank_is_preset; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_bank.bank_is_preset IS '是否刷定编辑';


--
-- Name: COLUMN epmms_bank.bank_is_enable; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_bank.bank_is_enable IS '是否启用';


--
-- Name: epmms_bank_bank_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_bank_bank_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


--
-- Name: epmms_bankaccount; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_bankaccount (
    bankaccount_id integer DEFAULT nextval(('public.epmms_bankaccount_bankaccount_id_seq'::text)::regclass) NOT NULL,
    bankaccount_bank_id integer NOT NULL,
    bankaccount_account character varying(20) NOT NULL,
    bankaccount_provience character varying(20),
    bankaccount_area character varying(20),
    bankaccount_branch character varying(50),
    bankaccount_mobi character varying(20),
    bankaccount_phone character varying(20),
    bankaccount_qq character varying(50),
    bankaccount_is_enable smallint DEFAULT 1 NOT NULL,
    bankaccount_name character varying(50) NOT NULL
);


--
-- Name: COLUMN epmms_bankaccount.bankaccount_bank_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_bankaccount.bankaccount_bank_id IS '所属银行';


--
-- Name: COLUMN epmms_bankaccount.bankaccount_account; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_bankaccount.bankaccount_account IS '银行帐号';


--
-- Name: COLUMN epmms_bankaccount.bankaccount_provience; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_bankaccount.bankaccount_provience IS '银行所在省';


--
-- Name: COLUMN epmms_bankaccount.bankaccount_area; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_bankaccount.bankaccount_area IS '银行所在市/地区';


--
-- Name: COLUMN epmms_bankaccount.bankaccount_branch; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_bankaccount.bankaccount_branch IS '银行分行地址';


--
-- Name: COLUMN epmms_bankaccount.bankaccount_mobi; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_bankaccount.bankaccount_mobi IS '电话';


--
-- Name: COLUMN epmms_bankaccount.bankaccount_phone; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_bankaccount.bankaccount_phone IS '联系电话';


--
-- Name: COLUMN epmms_bankaccount.bankaccount_qq; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_bankaccount.bankaccount_qq IS 'QQ号';


--
-- Name: COLUMN epmms_bankaccount.bankaccount_is_enable; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_bankaccount.bankaccount_is_enable IS '是否启用';


--
-- Name: COLUMN epmms_bankaccount.bankaccount_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_bankaccount.bankaccount_name IS '银行开户名';


--
-- Name: epmms_bankaccount_bankaccount_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_bankaccount_bankaccount_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


--
-- Name: epmms_buy; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_buy (
    buy_id integer NOT NULL,
    buy_member_id integer,
    buy_currency numeric(16,2),
    buy_date timestamp(0) without time zone,
    buy_money numeric(16,2),
    buy_status smallint DEFAULT 0 NOT NULL,
    buy_tax numeric(16,0) DEFAULT 0 NOT NULL,
    buy_real_currency numeric(16,2) DEFAULT 0,
    buy_type smallint,
    buy_remain_currency numeric(16,2) DEFAULT 0 NOT NULL
);


--
-- Name: COLUMN epmms_buy.buy_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_buy.buy_type IS '方案类型';


--
-- Name: epmms_buy_buy_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_buy_buy_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_buy_buy_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_buy_buy_id_seq OWNED BY public.epmms_buy.buy_id;


--
-- Name: epmms_cap_award; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_cap_award (
    cap_award_id integer NOT NULL,
    cap_award_type integer NOT NULL,
    cap_award_money numeric(16,2),
    cap_award_date_type character varying(20)
);


--
-- Name: TABLE epmms_cap_award; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_cap_award IS '每个奖金的封顶';


--
-- Name: COLUMN epmms_cap_award.cap_award_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_cap_award.cap_award_type IS '奖金类型';


--
-- Name: COLUMN epmms_cap_award.cap_award_money; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_cap_award.cap_award_money IS '封顶值';


--
-- Name: COLUMN epmms_cap_award.cap_award_date_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_cap_award.cap_award_date_type IS '日期单位';


--
-- Name: epmms_cap_award_cap_award_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_cap_award_cap_award_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_cap_award_cap_award_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_cap_award_cap_award_id_seq OWNED BY public.epmms_cap_award.cap_award_id;


--
-- Name: epmms_cap_member_award; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_cap_member_award (
    cap_member_id integer NOT NULL,
    cap_member_type_id integer,
    cap_member_award_type integer NOT NULL,
    cap_member_award_money numeric(16,2),
    cap_member_date_type text
);


--
-- Name: TABLE epmms_cap_member_award; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_cap_member_award IS '每个会员类型奖金的封顶';


--
-- Name: COLUMN epmms_cap_member_award.cap_member_type_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_cap_member_award.cap_member_type_id IS '会员类型';


--
-- Name: COLUMN epmms_cap_member_award.cap_member_award_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_cap_member_award.cap_member_award_type IS '奖金类型';


--
-- Name: COLUMN epmms_cap_member_award.cap_member_award_money; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_cap_member_award.cap_member_award_money IS '封顶值';


--
-- Name: COLUMN epmms_cap_member_award.cap_member_date_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_cap_member_award.cap_member_date_type IS '时间单位';


--
-- Name: epmms_cap_member_award_cap_member_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_cap_member_award_cap_member_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_cap_member_award_cap_member_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_cap_member_award_cap_member_id_seq OWNED BY public.epmms_cap_member_award.cap_member_id;


--
-- Name: epmms_cap_member_cap_sum_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_cap_member_cap_sum_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


--
-- Name: epmms_cap_member_sum; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_cap_member_sum (
    cap_member_id integer DEFAULT nextval(('public.epmms_cap_member_cap_sum_id_seq'::text)::regclass) NOT NULL,
    cap_member_type_id integer,
    cap_member_money numeric(16,2),
    cap_member_date_type text,
    cap_member_sum_type integer[]
);


--
-- Name: TABLE epmms_cap_member_sum; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_cap_member_sum IS '每个奖金的封顶
封顶计算是要顺序的,注意把较小的时间单位放前面(主键)
汇总分组可以是多个,用数组表示';


--
-- Name: COLUMN epmms_cap_member_sum.cap_member_type_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_cap_member_sum.cap_member_type_id IS '会员类型';


--
-- Name: COLUMN epmms_cap_member_sum.cap_member_money; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_cap_member_sum.cap_member_money IS '封顶值';


--
-- Name: COLUMN epmms_cap_member_sum.cap_member_date_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_cap_member_sum.cap_member_date_type IS '时间单位';


--
-- Name: epmms_cap_sum; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_cap_sum (
    cap_sum_id integer NOT NULL,
    cap_sum_sum_type integer[],
    cap_sum_money numeric(16,2),
    cap_sum_date_type character varying(20)
);


--
-- Name: TABLE epmms_cap_sum; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_cap_sum IS '每个奖金的封顶';


--
-- Name: COLUMN epmms_cap_sum.cap_sum_sum_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_cap_sum.cap_sum_sum_type IS '汇总类型';


--
-- Name: COLUMN epmms_cap_sum.cap_sum_money; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_cap_sum.cap_sum_money IS '封顶值';


--
-- Name: COLUMN epmms_cap_sum.cap_sum_date_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_cap_sum.cap_sum_date_type IS '日期单位
period,day,week,month';


--
-- Name: epmms_cap_sum_cap_award_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_cap_sum_cap_award_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_cap_sum_cap_award_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_cap_sum_cap_award_id_seq OWNED BY public.epmms_cap_sum.cap_sum_id;


--
-- Name: epmms_charge; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_charge (
    charge_id integer DEFAULT nextval(('public.epmms_charge_charge_id_seq'::text)::regclass) NOT NULL,
    charge_sn character(10) DEFAULT public.epmms_next_sn() NOT NULL,
    charge_memberinfo_id integer NOT NULL,
    charge_currency numeric(16,2) NOT NULL,
    charge_is_verify smallint DEFAULT 0 NOT NULL,
    charge_add_date timestamp(0) without time zone DEFAULT now(),
    charge_bank_id integer NOT NULL,
    charge_bank_account character varying(20) NOT NULL,
    charge_bank_address text,
    charge_bank_sn text,
    charge_bank_date timestamp(0) without time zone,
    charge_bank_account_name character varying(50) NOT NULL,
    charge_finance_type_id integer DEFAULT 2,
    charge_remark text,
    charge_verify_date timestamp(0) without time zone,
    charge_type smallint DEFAULT 0
);


--
-- Name: COLUMN epmms_charge.charge_sn; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_charge.charge_sn IS '充值流水号';


--
-- Name: COLUMN epmms_charge.charge_memberinfo_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_charge.charge_memberinfo_id IS '代理中心id';


--
-- Name: COLUMN epmms_charge.charge_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_charge.charge_currency IS '充值金额';


--
-- Name: COLUMN epmms_charge.charge_is_verify; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_charge.charge_is_verify IS '是否已审核';


--
-- Name: COLUMN epmms_charge.charge_add_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_charge.charge_add_date IS '申请日期';


--
-- Name: COLUMN epmms_charge.charge_bank_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_charge.charge_bank_id IS '汇款银行';


--
-- Name: COLUMN epmms_charge.charge_bank_account; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_charge.charge_bank_account IS '汇款帐号';


--
-- Name: COLUMN epmms_charge.charge_bank_address; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_charge.charge_bank_address IS '银行地址';


--
-- Name: COLUMN epmms_charge.charge_bank_sn; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_charge.charge_bank_sn IS '银行流水号';


--
-- Name: COLUMN epmms_charge.charge_bank_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_charge.charge_bank_date IS '汇款日期';


--
-- Name: COLUMN epmms_charge.charge_bank_account_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_charge.charge_bank_account_name IS '银行户名';


--
-- Name: COLUMN epmms_charge.charge_finance_type_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_charge.charge_finance_type_id IS '充值的帐户类型';


--
-- Name: COLUMN epmms_charge.charge_remark; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_charge.charge_remark IS '备注';


--
-- Name: COLUMN epmms_charge.charge_verify_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_charge.charge_verify_date IS '审核日期';


--
-- Name: epmms_charge_charge_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_charge_charge_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_config_auth; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_config_auth (
    config_auth_id integer NOT NULL,
    config_auth_autologin smallint DEFAULT 1 NOT NULL,
    config_auth_timeout integer DEFAULT 600 NOT NULL,
    config_auth_autologin2 smallint DEFAULT 1 NOT NULL,
    config_auth_timeout2 integer DEFAULT 30 NOT NULL,
    config_auth_captcha smallint DEFAULT 1 NOT NULL
);


--
-- Name: COLUMN epmms_config_auth.config_auth_autologin; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_auth.config_auth_autologin IS '自动登录';


--
-- Name: COLUMN epmms_config_auth.config_auth_timeout; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_auth.config_auth_timeout IS '登录超时';


--
-- Name: COLUMN epmms_config_auth.config_auth_autologin2; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_auth.config_auth_autologin2 IS '二级密码自动登录';


--
-- Name: COLUMN epmms_config_auth.config_auth_timeout2; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_auth.config_auth_timeout2 IS '二级密码超时';


--
-- Name: COLUMN epmms_config_auth.config_auth_captcha; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_auth.config_auth_captcha IS '验证码验证方式';


--
-- Name: epmms_config_award_differential; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_config_award_differential (
    award_config_id integer NOT NULL,
    award_config_l_bill int4range,
    award_config_level integer,
    award_config_currency numeric(16,2)
);


--
-- Name: epmms_config_award_differential_award_differential_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_config_award_differential_award_differential_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_config_award_differential_award_differential_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_config_award_differential_award_differential_id_seq OWNED BY public.epmms_config_award_differential.award_config_id;


--
-- Name: epmms_config_backup; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_config_backup (
    config_backup_id integer NOT NULL,
    config_backup_days integer,
    config_backup_count integer
);


--
-- Name: TABLE epmms_config_backup; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_config_backup IS '备份配置';


--
-- Name: COLUMN epmms_config_backup.config_backup_days; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_backup.config_backup_days IS '备份保留的天数';


--
-- Name: COLUMN epmms_config_backup.config_backup_count; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_backup.config_backup_count IS '备份保留的个数';


--
-- Name: epmms_config_backup_config_backup_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_config_backup_config_backup_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_config_backup_config_backup_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_config_backup_config_backup_id_seq OWNED BY public.epmms_config_backup.config_backup_id;


--
-- Name: epmms_config_dif_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_config_dif_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_config_dif_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_config_dif_award_config_id_seq OWNED BY public.epmms_award_config_dif.award_config_id;


--
-- Name: epmms_config_dot_m_l_r_award_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_config_dot_m_l_r_award_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_config_dot_m_l_r_award_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_config_dot_m_l_r_award_config_id_seq OWNED BY public.epmms_award_config_recommend_layer_dot.award_config_id;


--
-- Name: epmms_config_jackpot; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_config_jackpot (
    config_jackpot_id integer NOT NULL,
    config_jackpot_start_balance numeric(16,4) DEFAULT 0 NOT NULL,
    config_jackpot_lucky_balance numeric(16,4) DEFAULT 0 NOT NULL,
    config_jackpot_end_balance numeric(16,4) DEFAULT 0 NOT NULL,
    config_jackpot_fund numeric(16,4) DEFAULT 0 NOT NULL,
    config_jackpot_start_order_ratio numeric(16,2) DEFAULT 0 NOT NULL,
    config_jackpot_lucky_order_ratio numeric(16,2) DEFAULT 0 NOT NULL,
    config_jackpot_end_order_ratio numeric(16,2) DEFAULT 0 NOT NULL,
    config_jackpot_start_time integer NOT NULL,
    config_jackpot_end_time integer NOT NULL,
    config_jackpot_number integer DEFAULT 0 NOT NULL
);


--
-- Name: COLUMN epmms_config_jackpot.config_jackpot_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_jackpot.config_jackpot_id IS '主键id';


--
-- Name: COLUMN epmms_config_jackpot.config_jackpot_start_balance; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_jackpot.config_jackpot_start_balance IS '首单奖池金额';


--
-- Name: COLUMN epmms_config_jackpot.config_jackpot_lucky_balance; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_jackpot.config_jackpot_lucky_balance IS '幸运奖池金额';


--
-- Name: COLUMN epmms_config_jackpot.config_jackpot_end_balance; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_jackpot.config_jackpot_end_balance IS '尾单奖池金额';


--
-- Name: COLUMN epmms_config_jackpot.config_jackpot_fund; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_jackpot.config_jackpot_fund IS '发展基金';


--
-- Name: COLUMN epmms_config_jackpot.config_jackpot_start_order_ratio; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_jackpot.config_jackpot_start_order_ratio IS '首单比例';


--
-- Name: COLUMN epmms_config_jackpot.config_jackpot_lucky_order_ratio; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_jackpot.config_jackpot_lucky_order_ratio IS '幸运比例';


--
-- Name: COLUMN epmms_config_jackpot.config_jackpot_end_order_ratio; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_jackpot.config_jackpot_end_order_ratio IS '尾单比例';


--
-- Name: COLUMN epmms_config_jackpot.config_jackpot_start_time; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_jackpot.config_jackpot_start_time IS '开始时间';


--
-- Name: COLUMN epmms_config_jackpot.config_jackpot_end_time; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_jackpot.config_jackpot_end_time IS '结束时间';


--
-- Name: COLUMN epmms_config_jackpot.config_jackpot_number; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_jackpot.config_jackpot_number IS '期数';


--
-- Name: epmms_config_map; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_config_map (
    config_map_id real DEFAULT nextval(('public.epmms_config_map_config_map_id_seq'::text)::regclass) NOT NULL,
    config_map_levels integer DEFAULT 3 NOT NULL,
    config_map_branch integer DEFAULT 3 NOT NULL,
    config_map_orientation public.orientation DEFAULT 'top'::public.orientation NOT NULL,
    config_map_tree_levels integer DEFAULT 3 NOT NULL
);


--
-- Name: COLUMN epmms_config_map.config_map_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_map.config_map_id IS '标识';


--
-- Name: COLUMN epmms_config_map.config_map_levels; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_map.config_map_levels IS '组织结构图的层数';


--
-- Name: COLUMN epmms_config_map.config_map_branch; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_map.config_map_branch IS '组织结构图的分支数';


--
-- Name: COLUMN epmms_config_map.config_map_orientation; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_map.config_map_orientation IS '组织结构图的方向';


--
-- Name: COLUMN epmms_config_map.config_map_tree_levels; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_map.config_map_tree_levels IS '树状图的层数';


--
-- Name: epmms_config_map_config_map_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_config_map_config_map_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_config_site; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_config_site (
    config_site_id integer NOT NULL,
    config_site_title character varying(50),
    config_site_domain character varying(50),
    config_site_keyword character varying(200),
    config_site_desc character varying(200),
    config_site_deny_robots smallint DEFAULT 1 NOT NULL,
    config_site_is_enable smallint DEFAULT 0 NOT NULL
);


--
-- Name: COLUMN epmms_config_site.config_site_title; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_site.config_site_title IS '网站标题';


--
-- Name: COLUMN epmms_config_site.config_site_domain; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_site.config_site_domain IS '网站域名';


--
-- Name: COLUMN epmms_config_site.config_site_keyword; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_site.config_site_keyword IS '关键字';


--
-- Name: COLUMN epmms_config_site.config_site_desc; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_site.config_site_desc IS '搜索引擎描述';


--
-- Name: COLUMN epmms_config_site.config_site_deny_robots; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_site.config_site_deny_robots IS '是否阻止机器人';


--
-- Name: COLUMN epmms_config_site.config_site_is_enable; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_site.config_site_is_enable IS '是否启用站点
1启用，0关闭';


--
-- Name: epmms_config_sms; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_config_sms (
    config_sms_id integer DEFAULT nextval(('public.epmms_config_sms_config_sms_id_seq'::text)::regclass) NOT NULL,
    config_sms_is_verify smallint DEFAULT 0,
    config_sms_is_award smallint DEFAULT 1,
    config_sms_award text,
    config_sms_verify text,
    config_sms_is_register smallint DEFAULT 1,
    config_sms_register text
);


--
-- Name: COLUMN epmms_config_sms.config_sms_is_verify; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_sms.config_sms_is_verify IS '是否激活时发送短信';


--
-- Name: COLUMN epmms_config_sms.config_sms_is_award; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_sms.config_sms_is_award IS '是否发奖金时发送短信';


--
-- Name: COLUMN epmms_config_sms.config_sms_award; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_sms.config_sms_award IS '奖金短信内容';


--
-- Name: COLUMN epmms_config_sms.config_sms_verify; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_sms.config_sms_verify IS '审核短信模板';


--
-- Name: COLUMN epmms_config_sms.config_sms_is_register; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_sms.config_sms_is_register IS '是否发送注册短信';


--
-- Name: COLUMN epmms_config_sms.config_sms_register; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_sms.config_sms_register IS '注册短信模板';


--
-- Name: epmms_config_sms_config_sms_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_config_sms_config_sms_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


--
-- Name: epmms_config_smtp; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_config_smtp (
    config_smtp_id integer NOT NULL,
    config_smtp_server character varying(50) NOT NULL,
    config_smtp_port integer DEFAULT 25 NOT NULL,
    config_smtp_account character varying(50) NOT NULL,
    config_smtp_password character varying(50) NOT NULL,
    config_smtp_email character varying(50) NOT NULL,
    config_smtp_enable smallint DEFAULT 0 NOT NULL
);


--
-- Name: COLUMN epmms_config_smtp.config_smtp_enable; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_smtp.config_smtp_enable IS '是否启用邮件通知';


--
-- Name: epmms_config_withdrawals; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_config_withdrawals (
    config_withdrawals_id integer NOT NULL,
    config_withdrawals_type smallint DEFAULT 0 NOT NULL,
    config_withdrawals_scale integer DEFAULT 0 NOT NULL,
    config_withdrawals_tax numeric(2,2),
    config_withdrawals_tax_cap numeric(16,2),
    config_withdrawals_min numeric(16,2)
);


--
-- Name: COLUMN epmms_config_withdrawals.config_withdrawals_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_withdrawals.config_withdrawals_type IS '手续费方式';


--
-- Name: COLUMN epmms_config_withdrawals.config_withdrawals_scale; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_config_withdrawals.config_withdrawals_scale IS '提现倍数';


--
-- Name: epmms_config_withdrawals_config_withdrawals_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_config_withdrawals_config_withdrawals_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_config_withdrawals_config_withdrawals_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_config_withdrawals_config_withdrawals_id_seq OWNED BY public.epmms_config_withdrawals.config_withdrawals_id;


--
-- Name: epmms_deal; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_deal (
    deal_id integer NOT NULL,
    deal_sale_id integer,
    deal_buy_id integer NOT NULL,
    deal_currency numeric(16,2),
    deal_date timestamp(0) without time zone DEFAULT now(),
    deal_image text,
    deal_status smallint DEFAULT 0 NOT NULL,
    deal_image_date timestamp(0) without time zone,
    deal_verify_date timestamp(0) without time zone,
    deal_sale_member_id integer,
    deal_buy_member_id integer,
    deal_count integer DEFAULT 0 NOT NULL,
    deal_type smallint DEFAULT 0 NOT NULL
);


--
-- Name: epmms_deal_deal_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_deal_deal_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_deal_deal_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_deal_deal_id_seq OWNED BY public.epmms_deal.deal_id;


--
-- Name: epmms_dup; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_dup (
    dup_id integer NOT NULL,
    dup_member_id integer NOT NULL,
    dup_money numeric(16,2) NOT NULL,
    dup_is_verify smallint DEFAULT 0 NOT NULL,
    dup_add_date timestamp(0) without time zone DEFAULT now(),
    dup_verify_date timestamp(0) without time zone
);


--
-- Name: epmms_dup_dup_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_dup_dup_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_dup_dup_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_dup_dup_id_seq OWNED BY public.epmms_dup.dup_id;


--
-- Name: epmms_finance; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_finance (
    finance_id integer DEFAULT nextval(('public.epmms_finance_finance_id_seq'::text)::regclass) NOT NULL,
    finance_award numeric(16,4) DEFAULT 0.00 NOT NULL,
    finance_mod_date timestamp(0) without time zone DEFAULT now(),
    finance_type integer DEFAULT 1 NOT NULL,
    finance_memberinfo_id integer NOT NULL
);


--
-- Name: TABLE epmms_finance; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_finance IS '保存会员的帐户金额
一个会员可有多个帐户';


--
-- Name: COLUMN epmms_finance.finance_award; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_finance.finance_award IS '帐上奖金';


--
-- Name: COLUMN epmms_finance.finance_mod_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_finance.finance_mod_date IS '更新日期';


--
-- Name: COLUMN epmms_finance.finance_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_finance.finance_type IS '帐户类型';


--
-- Name: COLUMN epmms_finance.finance_memberinfo_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_finance.finance_memberinfo_id IS '会员';


--
-- Name: epmms_finance_finance_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_finance_finance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_finance_type; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_finance_type (
    finance_type_id integer NOT NULL,
    finance_type_name character varying(50),
    finance_type_withdrawals smallint DEFAULT 0 NOT NULL,
    finance_type_charge smallint DEFAULT 0 NOT NULL
);


--
-- Name: TABLE epmms_finance_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_finance_type IS '汇总分类';


--
-- Name: COLUMN epmms_finance_type.finance_type_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_finance_type.finance_type_name IS '帐户类型';


--
-- Name: epmms_foundation; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_foundation (
    foundation_id integer NOT NULL,
    foundation_member_id integer NOT NULL,
    foundation_currency numeric(16,2) NOT NULL,
    foundation_tax numeric(16,2) NOT NULL,
    foundation_real_currency numeric(16,2) NOT NULL,
    foundation_reamrk text,
    foundation_is_verify smallint DEFAULT 0 NOT NULL,
    foundation_add_date timestamp(0) without time zone DEFAULT now() NOT NULL,
    foundation_verify_date timestamp(0) without time zone
);


--
-- Name: TABLE epmms_foundation; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_foundation IS '信用基金';


--
-- Name: COLUMN epmms_foundation.foundation_member_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_foundation.foundation_member_id IS '会员';


--
-- Name: COLUMN epmms_foundation.foundation_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_foundation.foundation_currency IS '申请金额';


--
-- Name: COLUMN epmms_foundation.foundation_tax; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_foundation.foundation_tax IS '手续费';


--
-- Name: COLUMN epmms_foundation.foundation_real_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_foundation.foundation_real_currency IS '实发金额';


--
-- Name: COLUMN epmms_foundation.foundation_reamrk; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_foundation.foundation_reamrk IS '备注';


--
-- Name: COLUMN epmms_foundation.foundation_is_verify; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_foundation.foundation_is_verify IS '审核状态';


--
-- Name: COLUMN epmms_foundation.foundation_add_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_foundation.foundation_add_date IS '申请时间';


--
-- Name: COLUMN epmms_foundation.foundation_verify_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_foundation.foundation_verify_date IS '审核时间';


--
-- Name: epmms_foundation_foundation_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_foundation_foundation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_foundation_foundation_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_foundation_foundation_id_seq OWNED BY public.epmms_foundation.foundation_id;


--
-- Name: epmms_futou; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_futou (
    futou_id integer NOT NULL,
    futou_member_id integer NOT NULL,
    futou_deduct1 numeric(16,2) DEFAULT 0,
    futou_deduct2 numeric(16,2) DEFAULT 0 NOT NULL,
    futou_deduct3 numeric(16,2) DEFAULT 0 NOT NULL,
    futou_deduct4 numeric(16,2) DEFAULT 0 NOT NULL,
    futou_deduct numeric(16,2) DEFAULT 0 NOT NULL,
    futou_add_date timestamp(0) without time zone DEFAULT now()
);
ALTER TABLE ONLY public.epmms_futou ALTER COLUMN futou_member_id SET STATISTICS 0;
ALTER TABLE ONLY public.epmms_futou ALTER COLUMN futou_deduct SET STATISTICS 0;


--
-- Name: TABLE epmms_futou; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_futou IS '复投';


--
-- Name: COLUMN epmms_futou.futou_member_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_futou.futou_member_id IS '会员';


--
-- Name: COLUMN epmms_futou.futou_deduct1; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_futou.futou_deduct1 IS '奖金币';


--
-- Name: COLUMN epmms_futou.futou_deduct2; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_futou.futou_deduct2 IS '注册币';


--
-- Name: COLUMN epmms_futou.futou_deduct3; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_futou.futou_deduct3 IS '赞助劵商基金';


--
-- Name: COLUMN epmms_futou.futou_deduct4; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_futou.futou_deduct4 IS '提拔公益基金';


--
-- Name: COLUMN epmms_futou.futou_deduct; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_futou.futou_deduct IS '复投金额';


--
-- Name: COLUMN epmms_futou.futou_add_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_futou.futou_add_date IS '复投日期';


--
-- Name: epmms_futou_futou_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_futou_futou_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_futou_futou_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_futou_futou_id_seq OWNED BY public.epmms_futou.futou_id;


--
-- Name: epmms_game_charge; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_game_charge (
    charge_id integer NOT NULL,
    charge_recommend integer NOT NULL,
    charge_name character varying(20) NOT NULL,
    charge_phone character varying(20),
    charge_age integer,
    charge_account character varying(50) NOT NULL,
    charge_money numeric(16,2) NOT NULL,
    charge_add_date timestamp(0) with time zone DEFAULT now(),
    charge_is_verify smallint DEFAULT 0 NOT NULL,
    charge_verify_date timestamp(0) without time zone
);


--
-- Name: COLUMN epmms_game_charge.charge_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_game_charge.charge_name IS '姓名';


--
-- Name: COLUMN epmms_game_charge.charge_phone; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_game_charge.charge_phone IS '电话';


--
-- Name: COLUMN epmms_game_charge.charge_age; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_game_charge.charge_age IS '年龄';


--
-- Name: COLUMN epmms_game_charge.charge_account; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_game_charge.charge_account IS '充值账号';


--
-- Name: COLUMN epmms_game_charge.charge_money; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_game_charge.charge_money IS '充值金额';


--
-- Name: epmms_game_charge_charge_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_game_charge_charge_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_game_charge_charge_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_game_charge_charge_id_seq OWNED BY public.epmms_game_charge.charge_id;


--
-- Name: group_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.group_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: SEQUENCE group_seq; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON SEQUENCE public.group_seq IS '组创建序列';


--
-- Name: epmms_group; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_group (
    group_id integer NOT NULL,
    group_count integer DEFAULT 0 NOT NULL,
    group_seq integer DEFAULT nextval('public.group_seq'::regclass) NOT NULL,
    group_add_date timestamp(0) without time zone DEFAULT now()
);


--
-- Name: COLUMN epmms_group.group_count; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_group.group_count IS '成员数';


--
-- Name: COLUMN epmms_group.group_seq; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_group.group_seq IS '组的创建顺序';


--
-- Name: epmms_group_group_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_group_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_group_group_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_group_group_id_seq OWNED BY public.epmms_group.group_id;


--
-- Name: epmms_groupmap; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_groupmap (
    groupmap_id integer DEFAULT nextval(('public.epmms_groupmap_groupmap_id_seq'::text)::regclass) NOT NULL,
    groupmap_group_id integer,
    groupmap_order integer,
    groupmap_verify_date timestamp(0) without time zone DEFAULT now(),
    groupmap_award_date timestamp(0) without time zone,
    groupmap_award_count integer DEFAULT 0,
    groupmap_group_date timestamp(0) without time zone DEFAULT now(),
    groupmap_award_period integer,
    groupmap_is_award smallint DEFAULT 0 NOT NULL,
    groupmap_member_id integer NOT NULL,
    groupmap_name character varying(20)
);


--
-- Name: COLUMN epmms_groupmap.groupmap_group_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_groupmap.groupmap_group_id IS '所属的组';


--
-- Name: COLUMN epmms_groupmap.groupmap_order; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_groupmap.groupmap_order IS '组中的位置';


--
-- Name: COLUMN epmms_groupmap.groupmap_verify_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_groupmap.groupmap_verify_date IS '审核时间';


--
-- Name: COLUMN epmms_groupmap.groupmap_award_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_groupmap.groupmap_award_date IS '最后拿奖金日期';


--
-- Name: COLUMN epmms_groupmap.groupmap_award_count; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_groupmap.groupmap_award_count IS '拿奖金次数';


--
-- Name: COLUMN epmms_groupmap.groupmap_group_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_groupmap.groupmap_group_date IS '加入组的时间';


--
-- Name: COLUMN epmms_groupmap.groupmap_award_period; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_groupmap.groupmap_award_period IS '最后一次实发奖金的期次';


--
-- Name: COLUMN epmms_groupmap.groupmap_is_award; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_groupmap.groupmap_is_award IS '奖金是否实发';


--
-- Name: epmms_groupmap_groupmap_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_groupmap_groupmap_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


--
-- Name: epmms_help; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_help (
    help_id integer NOT NULL,
    help_type character varying(20),
    help_title text,
    help_content text,
    help_mod_date timestamp(0) without time zone DEFAULT now()
);


--
-- Name: TABLE epmms_help; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_help IS '帮助及使用教程';


--
-- Name: COLUMN epmms_help.help_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_help.help_id IS '帮助';


--
-- Name: COLUMN epmms_help.help_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_help.help_type IS '类型';


--
-- Name: COLUMN epmms_help.help_title; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_help.help_title IS '标题';


--
-- Name: COLUMN epmms_help.help_content; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_help.help_content IS '内容';


--
-- Name: COLUMN epmms_help.help_mod_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_help.help_mod_date IS '修改日期';


--
-- Name: epmms_help_help_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_help_help_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_help_help_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_help_help_id_seq OWNED BY public.epmms_help.help_id;


--
-- Name: epmms_jackpot_info; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_jackpot_info (
    info_id integer NOT NULL,
    info_start_time timestamp(0) without time zone DEFAULT now() NOT NULL,
    info_end_time timestamp(0) without time zone DEFAULT now() NOT NULL,
    info_start_balance numeric(16,4) DEFAULT 0 NOT NULL,
    info_lucky_balance numeric(16,4) DEFAULT 0 NOT NULL,
    info_end_balance numeric(16,4) DEFAULT 0 NOT NULL,
    info_number integer NOT NULL
);


--
-- Name: TABLE epmms_jackpot_info; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_jackpot_info IS '奖池信息';


--
-- Name: COLUMN epmms_jackpot_info.info_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_jackpot_info.info_id IS '主键id';


--
-- Name: COLUMN epmms_jackpot_info.info_start_time; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_jackpot_info.info_start_time IS '开始时间';


--
-- Name: COLUMN epmms_jackpot_info.info_end_time; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_jackpot_info.info_end_time IS '结束时间';


--
-- Name: COLUMN epmms_jackpot_info.info_start_balance; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_jackpot_info.info_start_balance IS '首单奖池金额';


--
-- Name: COLUMN epmms_jackpot_info.info_lucky_balance; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_jackpot_info.info_lucky_balance IS '幸运奖池金额';


--
-- Name: COLUMN epmms_jackpot_info.info_end_balance; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_jackpot_info.info_end_balance IS '尾单奖池金额';


--
-- Name: COLUMN epmms_jackpot_info.info_number; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_jackpot_info.info_number IS '期数';


--
-- Name: epmms_jackpot_info_info_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_jackpot_info_info_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_jackpot_info_info_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_jackpot_info_info_id_seq OWNED BY public.epmms_jackpot_info.info_id;


--
-- Name: epmms_jackpot_win_record; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_jackpot_win_record (
    jackpot_id integer NOT NULL,
    jackpot_member_id integer NOT NULL,
    jackpot_money numeric(16,4),
    jackpot_type integer,
    jackpot_start_time integer,
    jackpot_end_time integer,
    jackpot_number integer NOT NULL
);


--
-- Name: TABLE epmms_jackpot_win_record; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_jackpot_win_record IS '竞买抽奖获奖记录';


--
-- Name: COLUMN epmms_jackpot_win_record.jackpot_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_jackpot_win_record.jackpot_id IS '主键id';


--
-- Name: COLUMN epmms_jackpot_win_record.jackpot_member_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_jackpot_win_record.jackpot_member_id IS '会员id';


--
-- Name: COLUMN epmms_jackpot_win_record.jackpot_money; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_jackpot_win_record.jackpot_money IS '获得金额';


--
-- Name: COLUMN epmms_jackpot_win_record.jackpot_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_jackpot_win_record.jackpot_type IS '类型 1 首单奖 2 幸运奖 3 尾单奖';


--
-- Name: COLUMN epmms_jackpot_win_record.jackpot_start_time; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_jackpot_win_record.jackpot_start_time IS '开始时间';


--
-- Name: COLUMN epmms_jackpot_win_record.jackpot_end_time; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_jackpot_win_record.jackpot_end_time IS '结束时间';


--
-- Name: COLUMN epmms_jackpot_win_record.jackpot_number; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_jackpot_win_record.jackpot_number IS '期数';


--
-- Name: epmms_jackpot_win_record_jackpot_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_jackpot_win_record_jackpot_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_jackpot_win_record_jackpot_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_jackpot_win_record_jackpot_id_seq OWNED BY public.epmms_jackpot_win_record.jackpot_id;


--
-- Name: epmms_layer; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_layer (
    layer_id integer NOT NULL,
    layer_member_id integer NOT NULL,
    layer_layer integer NOT NULL,
    layer_left integer DEFAULT 0 NOT NULL,
    layer_right integer DEFAULT 0 NOT NULL,
    layer_little integer DEFAULT 0 NOT NULL,
    layer_pair integer DEFAULT 0 NOT NULL,
    layer_first_member integer,
    layer_first_order integer,
    layer_current_pair integer DEFAULT 0 NOT NULL,
    layer_left_count integer DEFAULT 0 NOT NULL,
    layer_right_count integer DEFAULT 0 NOT NULL
);


--
-- Name: epmms_layer_layer_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_layer_layer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_layer_layer_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_layer_layer_id_seq OWNED BY public.epmms_layer.layer_id;


--
-- Name: epmms_log; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_log (
    log_id integer DEFAULT nextval(('public.epmms_log_log_id_seq'::text)::regclass) NOT NULL,
    log_category character varying(50) NOT NULL,
    log_source character varying(50),
    log_operate character varying(50),
    log_target character varying(50),
    log_value numeric(16,2),
    log_info character varying(200),
    log_ip character varying(50),
    log_user character varying(50),
    log_role character varying(50),
    log_add_date timestamp(0) without time zone DEFAULT now(),
    log_status smallint
);


--
-- Name: COLUMN epmms_log.log_category; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_log.log_category IS '日志分类';


--
-- Name: COLUMN epmms_log.log_source; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_log.log_source IS '日志来源';


--
-- Name: COLUMN epmms_log.log_operate; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_log.log_operate IS '操作名称';


--
-- Name: COLUMN epmms_log.log_target; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_log.log_target IS '操作目标对象';


--
-- Name: COLUMN epmms_log.log_value; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_log.log_value IS '操作数据';


--
-- Name: COLUMN epmms_log.log_info; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_log.log_info IS '详细信息';


--
-- Name: COLUMN epmms_log.log_ip; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_log.log_ip IS '客户端ip';


--
-- Name: COLUMN epmms_log.log_user; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_log.log_user IS '用户名';


--
-- Name: COLUMN epmms_log.log_role; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_log.log_role IS '用户角色';


--
-- Name: COLUMN epmms_log.log_add_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_log.log_add_date IS '日期';


--
-- Name: COLUMN epmms_log.log_status; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_log.log_status IS '操作的结果，成功或失败';


--
-- Name: epmms_log_log_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_log_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_map_edit; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_map_edit (
    map_edit_id integer NOT NULL,
    map_edit_src_member_id integer NOT NULL,
    map_edit_dst_member_id integer,
    map_edit_add_date timestamp without time zone,
    map_edit_verify_date timestamp without time zone,
    map_edit_operate smallint NOT NULL,
    map_edit_info text,
    map_edit_is_verify smallint DEFAULT 0 NOT NULL,
    map_edit_type integer,
    map_edit_dst_order integer,
    map_edit_dst_recommend_id integer
);


--
-- Name: TABLE epmms_map_edit; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_map_edit IS '图谱编辑';


--
-- Name: COLUMN epmms_map_edit.map_edit_src_member_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_map_edit.map_edit_src_member_id IS '源会员id';


--
-- Name: COLUMN epmms_map_edit.map_edit_dst_member_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_map_edit.map_edit_dst_member_id IS '目标会员ID';


--
-- Name: COLUMN epmms_map_edit.map_edit_add_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_map_edit.map_edit_add_date IS '添加日期';


--
-- Name: COLUMN epmms_map_edit.map_edit_verify_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_map_edit.map_edit_verify_date IS '处理日期';


--
-- Name: COLUMN epmms_map_edit.map_edit_operate; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_map_edit.map_edit_operate IS '操作';


--
-- Name: COLUMN epmms_map_edit.map_edit_info; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_map_edit.map_edit_info IS '详情';


--
-- Name: COLUMN epmms_map_edit.map_edit_is_verify; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_map_edit.map_edit_is_verify IS '审核状态';


--
-- Name: COLUMN epmms_map_edit.map_edit_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_map_edit.map_edit_type IS '交换类型(接点关系或推荐关系)';


--
-- Name: COLUMN epmms_map_edit.map_edit_dst_order; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_map_edit.map_edit_dst_order IS '接点位置';


--
-- Name: COLUMN epmms_map_edit.map_edit_dst_recommend_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_map_edit.map_edit_dst_recommend_id IS '推荐人';


--
-- Name: epmms_map_edit_map_edit_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_map_edit_map_edit_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_map_edit_map_edit_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_map_edit_map_edit_id_seq OWNED BY public.epmms_map_edit.map_edit_id;


--
-- Name: epmms_member_level; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_member_level (
    member_level_level integer NOT NULL,
    member_level_name text NOT NULL
);


--
-- Name: COLUMN epmms_member_level.member_level_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_member_level.member_level_name IS '级别名称';


--
-- Name: epmms_member_upgrade; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_member_upgrade (
    member_upgrade_id integer NOT NULL,
    member_upgrade_member_id integer NOT NULL,
    member_upgrade_type integer NOT NULL,
    member_upgrade_is_verify smallint DEFAULT 0 NOT NULL,
    member_upgrade_add_date timestamp(0) without time zone,
    member_upgrade_verify_date timestamp(0) without time zone,
    member_upgrade_period integer,
    member_upgrade_old_type integer NOT NULL,
    member_upgrade_money numeric(16,2) NOT NULL
);


--
-- Name: COLUMN epmms_member_upgrade.member_upgrade_member_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_member_upgrade.member_upgrade_member_id IS '会员';


--
-- Name: COLUMN epmms_member_upgrade.member_upgrade_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_member_upgrade.member_upgrade_type IS '升级类型';


--
-- Name: COLUMN epmms_member_upgrade.member_upgrade_is_verify; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_member_upgrade.member_upgrade_is_verify IS '审核状态';


--
-- Name: COLUMN epmms_member_upgrade.member_upgrade_add_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_member_upgrade.member_upgrade_add_date IS '申请日期';


--
-- Name: COLUMN epmms_member_upgrade.member_upgrade_verify_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_member_upgrade.member_upgrade_verify_date IS '审核日期';


--
-- Name: COLUMN epmms_member_upgrade.member_upgrade_period; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_member_upgrade.member_upgrade_period IS '期次';


--
-- Name: COLUMN epmms_member_upgrade.member_upgrade_old_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_member_upgrade.member_upgrade_old_type IS '原';


--
-- Name: COLUMN epmms_member_upgrade.member_upgrade_money; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_member_upgrade.member_upgrade_money IS '升级金额';


--
-- Name: epmms_member_upgrade_member_upgrade_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_member_upgrade_member_upgrade_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_member_upgrade_member_upgrade_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_member_upgrade_member_upgrade_id_seq OWNED BY public.epmms_member_upgrade.member_upgrade_id;


--
-- Name: epmms_memberinfo; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_memberinfo (
    memberinfo_id integer DEFAULT nextval(('public.epmms_memberinfo_memberinfo_id_seq'::text)::regclass) NOT NULL,
    memberinfo_account character varying(50),
    memberinfo_password character varying(256),
    memberinfo_password2 character varying(256),
    memberinfo_name character varying(50),
    memberinfo_nickname character varying(50),
    memberinfo_email character varying(256),
    memberinfo_mobi character varying(50),
    memberinfo_phone character varying(50),
    memberinfo_qq character varying(256),
    memberinfo_msn character varying(256),
    memberinfo_sex smallint,
    memberinfo_idcard_type smallint,
    memberinfo_idcard text,
    memberinfo_zipcode character varying(20),
    memberinfo_birthday date,
    memberinfo_address_provience character varying(20),
    memberinfo_address_area character varying(20),
    memberinfo_address_county character varying(20),
    memberinfo_address_detail character varying(200),
    memberinfo_bank_id integer,
    memberinfo_bank_name character varying(50),
    memberinfo_bank_account character varying(50),
    memberinfo_bank_provience character varying(20),
    memberinfo_bank_area character varying(20),
    memberinfo_bank_branch character varying(50),
    memberinfo_question character varying(256),
    memberinfo_answer character varying(256),
    memberinfo_memo text,
    memberinfo_is_enable smallint DEFAULT 1,
    memberinfo_register_ip character varying(50),
    memberinfo_last_ip character varying(50),
    memberinfo_last_date timestamp(0) without time zone,
    memberinfo_add_date timestamp(0) without time zone,
    memberinfo_mod_date timestamp(0) without time zone,
    memberinfo_is_agent smallint DEFAULT 0,
    memberinfo_is_verify smallint DEFAULT 0,
    memberinfo_agent_id integer,
    memberinfo_postoffice character varying(200),
    memberinfo_init_password character varying(256),
    memberinfo_init_password2 character varying(256),
    memberinfo_type character varying(256)
);


--
-- Name: COLUMN epmms_memberinfo.memberinfo_account; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_account IS '会员帐号';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_password; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_password IS '一级密码';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_password2; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_password2 IS '二级密码';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_name IS '姓名';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_nickname; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_nickname IS '昵称';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_mobi; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_mobi IS '手机';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_phone; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_phone IS '电话';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_qq; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_qq IS 'qq';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_sex; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_sex IS '性别';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_idcard_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_idcard_type IS '证件类型';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_idcard; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_idcard IS '证明身份的证件号码';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_zipcode; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_zipcode IS '邮编';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_birthday; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_birthday IS '出生日期';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_address_provience; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_address_provience IS '省地址';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_address_area; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_address_area IS '市/地区地址';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_address_county; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_address_county IS '县地址';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_address_detail; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_address_detail IS '详细地址';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_bank_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_bank_id IS '银行';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_bank_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_bank_name IS '银行开户名';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_bank_account; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_bank_account IS '银行帐号';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_bank_provience; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_bank_provience IS '银行所在省';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_bank_area; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_bank_area IS '银行所在市/地区';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_bank_branch; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_bank_branch IS '银行支行地址';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_question; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_question IS '密保问题';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_answer; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_answer IS '密保答案';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_memo; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_memo IS '备注';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_is_enable; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_is_enable IS '是否启用该会员';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_register_ip; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_register_ip IS '注册时的ip地址';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_last_ip; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_last_ip IS '最后访问ip';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_last_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_last_date IS '最后登录日期';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_mod_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_mod_date IS '更新时间';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_is_agent; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_is_agent IS '是否代理中心';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_is_verify; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_is_verify IS '审核状态';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_postoffice; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_postoffice IS '邮局';


--
-- Name: COLUMN epmms_memberinfo.memberinfo_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo.memberinfo_type IS '类型';


--
-- Name: epmms_memberinfo_item; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_memberinfo_item (
    memberinfo_item_id integer DEFAULT nextval(('public.epmms_memberinfo_item_memberinfo_item_id_seq'::text)::regclass) NOT NULL,
    memberinfo_item_field character varying(50) NOT NULL,
    memberinfo_item_title character varying(50) NOT NULL,
    memberinfo_item_visible smallint DEFAULT 1 NOT NULL,
    memberinfo_item_required smallint DEFAULT 0 NOT NULL,
    memberinfo_item_update smallint DEFAULT 1,
    memberinfo_item_is_enable smallint DEFAULT 1,
    memberinfo_item_order integer DEFAULT 100000 NOT NULL,
    memberinfo_item_admin smallint DEFAULT 0,
    memberinfo_item_view smallint DEFAULT 1
);


--
-- Name: COLUMN epmms_memberinfo_item.memberinfo_item_field; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo_item.memberinfo_item_field IS '字段名称';


--
-- Name: COLUMN epmms_memberinfo_item.memberinfo_item_title; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo_item.memberinfo_item_title IS '项目标题';


--
-- Name: COLUMN epmms_memberinfo_item.memberinfo_item_visible; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo_item.memberinfo_item_visible IS '1显示，0隐藏';


--
-- Name: COLUMN epmms_memberinfo_item.memberinfo_item_required; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo_item.memberinfo_item_required IS '是否必填';


--
-- Name: COLUMN epmms_memberinfo_item.memberinfo_item_update; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo_item.memberinfo_item_update IS '是否可更新';


--
-- Name: COLUMN epmms_memberinfo_item.memberinfo_item_is_enable; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo_item.memberinfo_item_is_enable IS '是否开启';


--
-- Name: COLUMN epmms_memberinfo_item.memberinfo_item_admin; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo_item.memberinfo_item_admin IS '管理页面是否可见';


--
-- Name: COLUMN epmms_memberinfo_item.memberinfo_item_view; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberinfo_item.memberinfo_item_view IS '查看页面是否可见';


--
-- Name: epmms_memberinfo_item_memberinfo_item_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_memberinfo_item_memberinfo_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


--
-- Name: epmms_memberinfo_memberinfo_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_memberinfo_memberinfo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_membermap2; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_membermap2 (
    membermap_id integer DEFAULT nextval(('public.epmms_membermap2_membermap_id_seq'::text)::regclass) NOT NULL,
    membermap_parent_id integer,
    membermap_order integer,
    membermap_layer integer,
    membermap_path text,
    membermap_add_date timestamp(0) without time zone DEFAULT now(),
    membermap_bond_id integer,
    membermap_name character varying(50) NOT NULL,
    membermap_bond_info integer,
    membermap_child_number integer DEFAULT 0,
    membermap_layer_order numeric(50,0),
    membermap_is_verify smallint DEFAULT 0 NOT NULL,
    membermap_bill_count integer DEFAULT 0,
    membermap_membertype integer,
    membermap_under_bill_count integer DEFAULT 0,
    membermap_sub_bill_count integer DEFAULT 0,
    membermap_money numeric(16,2) DEFAULT 0,
    membermap_under_number integer DEFAULT 0 NOT NULL,
    membermap_is_active smallint DEFAULT 1 NOT NULL,
    membermap_recommend_id integer,
    membermap_period integer,
    membermap_verify_date timestamp(0) without time zone,
    membermap_recommend_number integer DEFAULT 0 NOT NULL,
    membermap_recommend_layer integer DEFAULT 0 NOT NULL,
    membermap_recommend_path text
);


--
-- Name: COLUMN epmms_membermap2.membermap_parent_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap2.membermap_parent_id IS '接点人';


--
-- Name: COLUMN epmms_membermap2.membermap_order; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap2.membermap_order IS '接点位置';


--
-- Name: COLUMN epmms_membermap2.membermap_layer; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap2.membermap_layer IS '接点层数';


--
-- Name: COLUMN epmms_membermap2.membermap_path; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap2.membermap_path IS '接点路径';


--
-- Name: COLUMN epmms_membermap2.membermap_add_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap2.membermap_add_date IS '添加日期';


--
-- Name: COLUMN epmms_membermap2.membermap_bond_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap2.membermap_bond_id IS '关联会员';


--
-- Name: COLUMN epmms_membermap2.membermap_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap2.membermap_name IS '节点名字';


--
-- Name: COLUMN epmms_membermap2.membermap_is_verify; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap2.membermap_is_verify IS '审核状态';


--
-- Name: epmms_membermap2_membermap_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_membermap2_membermap_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


--
-- Name: epmms_membermap3; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_membermap3 (
    membermap_id integer NOT NULL,
    membermap_name character varying(20),
    membermap_member_id integer NOT NULL,
    membermap_seq integer DEFAULT public.nextverify_membermap3() NOT NULL,
    membermap_is_active smallint DEFAULT 1 NOT NULL,
    membermap_add_date timestamp(0) without time zone DEFAULT now() NOT NULL
);


--
-- Name: COLUMN epmms_membermap3.membermap_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap3.membermap_name IS '标识名称';


--
-- Name: COLUMN epmms_membermap3.membermap_member_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap3.membermap_member_id IS '绑定会员';


--
-- Name: COLUMN epmms_membermap3.membermap_seq; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap3.membermap_seq IS '审核顺序';


--
-- Name: COLUMN epmms_membermap3.membermap_is_active; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap3.membermap_is_active IS '是否出局';


--
-- Name: COLUMN epmms_membermap3.membermap_add_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membermap3.membermap_add_date IS '审核时间';


--
-- Name: epmms_membermap3_membermap_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_membermap3_membermap_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_membermap3_membermap_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_membermap3_membermap_id_seq OWNED BY public.epmms_membermap3.membermap_id;


--
-- Name: epmms_membermap4; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_membermap4 (
    membermap_id integer NOT NULL,
    membermap_member_id integer,
    membermap_parent_id integer,
    membermap_layer integer,
    membermap_order smallint,
    membermap_path text,
    membermap_add_date timestamp(0) without time zone DEFAULT now(),
    membermap_name character varying(20),
    membermap_child_number integer DEFAULT 0,
    membermap_is_verify smallint DEFAULT 1 NOT NULL,
    membermap_layer_order numeric(16,0),
    membermap_is_active smallint DEFAULT 1 NOT NULL,
    membermap_gongpai_count integer DEFAULT 0 NOT NULL,
    membermap_bond_id integer,
    membermap_period integer
);


--
-- Name: epmms_membermap4_membermap_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_membermap4_membermap_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_membermap4_membermap_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_membermap4_membermap_id_seq OWNED BY public.epmms_membermap4.membermap_id;


--
-- Name: epmms_memberstatus; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_memberstatus (
    status_id integer NOT NULL,
    status_pair integer DEFAULT 0 NOT NULL,
    status_pair2 integer DEFAULT 0 NOT NULL,
    left_product_count integer DEFAULT 0 NOT NULL,
    right_product_count integer DEFAULT 0 NOT NULL,
    little_product_count integer DEFAULT 0 NOT NULL,
    left_count integer DEFAULT 0 NOT NULL,
    right_count integer DEFAULT 0 NOT NULL,
    status_award_period integer,
    left_product_count2 integer DEFAULT 0,
    right_product_count2 integer DEFAULT 0,
    count2_date date DEFAULT CURRENT_DATE,
    left_product_count3 integer DEFAULT 0,
    right_product_count3 integer DEFAULT 0,
    count3_date date DEFAULT CURRENT_DATE
);


--
-- Name: COLUMN epmms_memberstatus.status_pair; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberstatus.status_pair IS '当前对碰数';


--
-- Name: COLUMN epmms_memberstatus.left_count; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberstatus.left_count IS '左分支会员数';


--
-- Name: COLUMN epmms_memberstatus.right_count; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_memberstatus.right_count IS '右分支会员数';


--
-- Name: epmms_membertype; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_membertype (
    membertype_name character varying(50) NOT NULL,
    membertype_desc text,
    membertype_level integer NOT NULL,
    membertype_mod_date timestamp(0) without time zone,
    membertype_color character varying(20),
    membertype_money numeric(16,2) DEFAULT 0 NOT NULL,
    membertype_bill integer DEFAULT 1,
    membertype_agent_money numeric(16,2) DEFAULT 0 NOT NULL
);


--
-- Name: COLUMN epmms_membertype.membertype_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membertype.membertype_name IS '类型名称';


--
-- Name: COLUMN epmms_membertype.membertype_desc; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membertype.membertype_desc IS '说明';


--
-- Name: COLUMN epmms_membertype.membertype_level; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membertype.membertype_level IS '等级';


--
-- Name: COLUMN epmms_membertype.membertype_money; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membertype.membertype_money IS '会员报单金额(购物金额)';


--
-- Name: COLUMN epmms_membertype.membertype_bill; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_membertype.membertype_bill IS '购物积分';


--
-- Name: epmms_menu; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_menu (
    menu_id integer DEFAULT nextval(('public.epmms_menu_menu_id_seq'::text)::regclass) NOT NULL,
    menu_name character varying(50) NOT NULL,
    menu_url character varying(200),
    menu_pid integer,
    menu_order integer DEFAULT 0 NOT NULL,
    menu_mod_date timestamp without time zone
);


--
-- Name: COLUMN epmms_menu.menu_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_menu.menu_name IS '菜单显示名';


--
-- Name: COLUMN epmms_menu.menu_url; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_menu.menu_url IS '链接URL';


--
-- Name: COLUMN epmms_menu.menu_pid; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_menu.menu_pid IS '父级id';


--
-- Name: COLUMN epmms_menu.menu_order; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_menu.menu_order IS '排序';


--
-- Name: COLUMN epmms_menu.menu_mod_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_menu.menu_mod_date IS '菜单更新时间';


--
-- Name: epmms_menu_menu_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_menu_menu_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_messages; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_messages (
    messages_id integer NOT NULL,
    messages_title text NOT NULL,
    messages_content text NOT NULL,
    messages_add_date timestamp(0) without time zone DEFAULT now(),
    messages_sender_member_id integer,
    messages_receiver_member_id integer,
    messages_session integer,
    messages_member_id integer,
    messages_is_read smallint DEFAULT 0 NOT NULL
);


--
-- Name: TABLE epmms_messages; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_messages IS '站内信';


--
-- Name: COLUMN epmms_messages.messages_title; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_messages.messages_title IS '标题';


--
-- Name: COLUMN epmms_messages.messages_content; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_messages.messages_content IS '内容';


--
-- Name: COLUMN epmms_messages.messages_sender_member_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_messages.messages_sender_member_id IS '发件人';


--
-- Name: COLUMN epmms_messages.messages_receiver_member_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_messages.messages_receiver_member_id IS '收件人';


--
-- Name: COLUMN epmms_messages.messages_session; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_messages.messages_session IS '会话标识';


--
-- Name: COLUMN epmms_messages.messages_member_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_messages.messages_member_id IS '所属的会员';


--
-- Name: COLUMN epmms_messages.messages_is_read; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_messages.messages_is_read IS '是否已读';


--
-- Name: epmms_messages_messages_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_messages_messages_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_messages_messages_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_messages_messages_id_seq OWNED BY public.epmms_messages.messages_id;


--
-- Name: epmms_mybank; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_mybank (
    mybank_id integer NOT NULL,
    mybank_bank_id integer NOT NULL,
    mybank_name character varying(50) NOT NULL,
    mybank_account character varying(50) NOT NULL,
    mybank_memberinfo_id integer NOT NULL,
    mybank_add_date timestamp(0) without time zone DEFAULT CURRENT_TIMESTAMP,
    mybank_is_default boolean DEFAULT false,
    mybank_address character varying(50),
    mybank_memo character varying(50)
);


--
-- Name: COLUMN epmms_mybank.mybank_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_mybank.mybank_name IS '户名';


--
-- Name: COLUMN epmms_mybank.mybank_account; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_mybank.mybank_account IS '银行卡号';


--
-- Name: COLUMN epmms_mybank.mybank_is_default; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_mybank.mybank_is_default IS '默认银行卡';


--
-- Name: COLUMN epmms_mybank.mybank_address; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_mybank.mybank_address IS '开户支行';


--
-- Name: COLUMN epmms_mybank.mybank_memo; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_mybank.mybank_memo IS '备注';


--
-- Name: epmms_mybank_mybank_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_mybank_mybank_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_mybank_mybank_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_mybank_mybank_id_seq OWNED BY public.epmms_mybank.mybank_id;


--
-- Name: epmms_orders; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_orders (
    orders_id integer NOT NULL,
    orders_member_id integer NOT NULL,
    orders_currency numeric(16,2) DEFAULT 0 NOT NULL,
    orders_status text NOT NULL,
    orders_add_date timestamp(0) without time zone DEFAULT now(),
    orders_is_verify smallint DEFAULT 0,
    orders_verify_date timestamp(0) without time zone,
    orders_remark text,
    orders_sn character(10) DEFAULT public.epmms_next_sn() NOT NULL,
    orders_logistics_name character varying(100),
    orders_logistics_sn character varying(100),
    orders_price numeric(16,2) DEFAULT 0
);


--
-- Name: COLUMN epmms_orders.orders_member_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_orders.orders_member_id IS '会员';


--
-- Name: COLUMN epmms_orders.orders_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_orders.orders_currency IS '订单金额';


--
-- Name: COLUMN epmms_orders.orders_status; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_orders.orders_status IS '订单状态';


--
-- Name: COLUMN epmms_orders.orders_add_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_orders.orders_add_date IS '订单日期';


--
-- Name: COLUMN epmms_orders.orders_is_verify; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_orders.orders_is_verify IS '审核状态';


--
-- Name: COLUMN epmms_orders.orders_verify_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_orders.orders_verify_date IS '审核日期';


--
-- Name: COLUMN epmms_orders.orders_remark; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_orders.orders_remark IS '备注';


--
-- Name: COLUMN epmms_orders.orders_sn; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_orders.orders_sn IS '订单流水号';


--
-- Name: epmms_orders_orders_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_orders_orders_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_orders_orders_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_orders_orders_id_seq OWNED BY public.epmms_orders.orders_id;


--
-- Name: epmms_orders_product; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_orders_product (
    orders_product_id integer DEFAULT nextval(('public.epmms_orders_product_orders_product_id_seq'::text)::regclass) NOT NULL,
    orders_product_product_id integer NOT NULL,
    orders_product_price numeric(16,2) NOT NULL,
    orders_product_orders_id integer NOT NULL,
    orders_product_count integer DEFAULT 0 NOT NULL,
    orders_product_currency numeric(16,2) NOT NULL
);


--
-- Name: COLUMN epmms_orders_product.orders_product_product_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_orders_product.orders_product_product_id IS '产品';


--
-- Name: COLUMN epmms_orders_product.orders_product_price; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_orders_product.orders_product_price IS '产品价格';


--
-- Name: COLUMN epmms_orders_product.orders_product_orders_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_orders_product.orders_product_orders_id IS '订单id';


--
-- Name: COLUMN epmms_orders_product.orders_product_count; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_orders_product.orders_product_count IS '产品数量';


--
-- Name: COLUMN epmms_orders_product.orders_product_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_orders_product.orders_product_currency IS '产品金额';


--
-- Name: epmms_orders_product_orders_product_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_orders_product_orders_product_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


--
-- Name: epmms_parent_relation; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_parent_relation (
    parent_relation_member_id integer NOT NULL,
    parent_relation_upper_id integer NOT NULL
);


--
-- Name: COLUMN epmms_parent_relation.parent_relation_member_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_parent_relation.parent_relation_member_id IS '会员ID';


--
-- Name: COLUMN epmms_parent_relation.parent_relation_upper_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_parent_relation.parent_relation_upper_id IS '上级会员ID';


--
-- Name: epmms_pond; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_pond (
    pond_id integer NOT NULL,
    pond_no integer NOT NULL,
    pond_currency numeric(16,2) DEFAULT 0 NOT NULL
);


--
-- Name: COLUMN epmms_pond.pond_no; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_pond.pond_no IS '奖池编号';


--
-- Name: epmms_pond_member_currency; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_pond_member_currency (
    member_id integer NOT NULL,
    pond_no integer NOT NULL,
    all_topped numeric(16,2) DEFAULT 0 NOT NULL
);


--
-- Name: epmms_pond_pond_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_pond_pond_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_pond_pond_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_pond_pond_id_seq OWNED BY public.epmms_pond.pond_id;


--
-- Name: epmms_prize; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_prize (
    prize_id integer NOT NULL,
    prize_info character varying(50) NOT NULL,
    prize_is_verify smallint DEFAULT 0 NOT NULL,
    prize_verify_date timestamp(0) without time zone,
    prize_date timestamp(0) without time zone DEFAULT now() NOT NULL,
    prize_member_id integer NOT NULL,
    prize_id_id integer
);


--
-- Name: TABLE epmms_prize; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_prize IS '发放的奖品';


--
-- Name: epmms_prize_prize_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_prize_prize_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_prize_prize_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_prize_prize_id_seq OWNED BY public.epmms_prize.prize_id;


--
-- Name: epmms_product; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_product (
    product_id integer DEFAULT nextval(('public.epmms_product_product_id_seq'::text)::regclass) NOT NULL,
    product_name character varying(50) NOT NULL,
    product_title character varying(255) NOT NULL,
    product_price numeric(16,2) NOT NULL,
    product_info text,
    product_image_url character varying(1024) NOT NULL,
    product_mod_date timestamp(0) without time zone DEFAULT now() NOT NULL,
    product_stock integer DEFAULT 0 NOT NULL,
    product_sale_status smallint DEFAULT 1,
    product_sales_amount integer DEFAULT 0 NOT NULL,
    product_star numeric(8,2),
    product_class_id integer,
    product_cost numeric(10,2),
    product_credit smallint
);


--
-- Name: COLUMN epmms_product.product_title; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_product.product_title IS '产品全称标题';


--
-- Name: COLUMN epmms_product.product_price; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_product.product_price IS '产品价格';


--
-- Name: COLUMN epmms_product.product_info; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_product.product_info IS '产品介绍';


--
-- Name: COLUMN epmms_product.product_image_url; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_product.product_image_url IS '产品大图';


--
-- Name: COLUMN epmms_product.product_stock; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_product.product_stock IS '库存';


--
-- Name: COLUMN epmms_product.product_sale_status; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_product.product_sale_status IS '销售状态
0在售，1停售';


--
-- Name: COLUMN epmms_product.product_sales_amount; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_product.product_sales_amount IS '销售总量';


--
-- Name: COLUMN epmms_product.product_star; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_product.product_star IS '评级';


--
-- Name: COLUMN epmms_product.product_class_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_product.product_class_id IS '产品分类';


--
-- Name: COLUMN epmms_product.product_cost; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_product.product_cost IS '产品成本';


--
-- Name: COLUMN epmms_product.product_credit; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_product.product_credit IS '产品积分';


--
-- Name: epmms_product_class; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_product_class (
    product_class_id integer NOT NULL,
    product_name character varying(20) NOT NULL,
    product_info text,
    product_parent_id integer
);


--
-- Name: TABLE epmms_product_class; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_product_class IS '产品分类';


--
-- Name: COLUMN epmms_product_class.product_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_product_class.product_name IS '分类名称';


--
-- Name: COLUMN epmms_product_class.product_info; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_product_class.product_info IS '分类说明';


--
-- Name: COLUMN epmms_product_class.product_parent_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_product_class.product_parent_id IS '父分类';


--
-- Name: epmms_product_class_product_class_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_product_class_product_class_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_product_class_product_class_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_product_class_product_class_id_seq OWNED BY public.epmms_product_class.product_class_id;


--
-- Name: epmms_product_product_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_product_product_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


--
-- Name: epmms_ratio; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_ratio (
    ratio_id integer NOT NULL,
    ratio_value numeric(16,4),
    ratio_add_date timestamp(0) without time zone
);


--
-- Name: TABLE epmms_ratio; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_ratio IS '拨出比历史';


--
-- Name: COLUMN epmms_ratio.ratio_value; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_ratio.ratio_value IS '拨出比值';


--
-- Name: COLUMN epmms_ratio.ratio_add_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_ratio.ratio_add_date IS '添加日期';


--
-- Name: epmms_ratio_ratio_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_ratio_ratio_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_ratio_ratio_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_ratio_ratio_id_seq OWNED BY public.epmms_ratio.ratio_id;


--
-- Name: epmms_recommend_relation; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_recommend_relation (
    recommend_relation_member_id integer NOT NULL,
    recommend_relation_upper_id integer NOT NULL
);


--
-- Name: epmms_rights; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_rights (
    itemname character varying(64) NOT NULL,
    type integer NOT NULL,
    weight integer NOT NULL
);


--
-- Name: epmms_sale; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_sale (
    sale_id integer NOT NULL,
    sale_member_id integer NOT NULL,
    sale_currency numeric(16,2) NOT NULL,
    sale_date timestamp(0) without time zone DEFAULT now(),
    sale_money numeric(16,2),
    sale_remain_currency numeric(16,2) NOT NULL,
    sale_status smallint DEFAULT 0 NOT NULL,
    sale_verify_date timestamp(0) without time zone,
    sale_tax numeric(16,2),
    sale_dup numeric(16,2) DEFAULT 0 NOT NULL,
    sale_aixin numeric(16,2) DEFAULT 0 NOT NULL,
    sale_type smallint DEFAULT 0 NOT NULL
);


--
-- Name: COLUMN epmms_sale.sale_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_sale.sale_type IS '方案类型';


--
-- Name: epmms_sale_sale_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_sale_sale_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_sale_sale_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_sale_sale_id_seq OWNED BY public.epmms_sale.sale_id;


--
-- Name: epmms_signing; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_signing (
    signing_id integer NOT NULL,
    signing_member_id integer NOT NULL,
    signing_is_verify smallint DEFAULT 0 NOT NULL,
    signing_date date,
    signing_is_refund smallint DEFAULT 0 NOT NULL,
    signing_verify_date timestamp(0) without time zone,
    signing_type smallint DEFAULT 0 NOT NULL,
    signing_is_award smallint DEFAULT 0 NOT NULL
);


--
-- Name: COLUMN epmms_signing.signing_member_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_signing.signing_member_id IS '会员';


--
-- Name: COLUMN epmms_signing.signing_is_verify; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_signing.signing_is_verify IS '已签约';


--
-- Name: COLUMN epmms_signing.signing_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_signing.signing_date IS '最后签约时间';


--
-- Name: COLUMN epmms_signing.signing_is_refund; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_signing.signing_is_refund IS '是否已退款';


--
-- Name: COLUMN epmms_signing.signing_verify_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_signing.signing_verify_date IS '签约时间';


--
-- Name: COLUMN epmms_signing.signing_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_signing.signing_type IS '签约类型';


--
-- Name: epmms_signing_signing_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_signing_signing_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_signing_signing_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_signing_signing_id_seq OWNED BY public.epmms_signing.signing_id;


--
-- Name: epmms_star; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_star (
    star_id integer NOT NULL,
    star_product_id integer NOT NULL,
    star_member_id integer NOT NULL,
    star_grade numeric(8,2) NOT NULL,
    star_date timestamp(0) without time zone DEFAULT now() NOT NULL
);


--
-- Name: COLUMN epmms_star.star_product_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_star.star_product_id IS '产品';


--
-- Name: COLUMN epmms_star.star_member_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_star.star_member_id IS '会员';


--
-- Name: COLUMN epmms_star.star_grade; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_star.star_grade IS '评级';


--
-- Name: epmms_star_star_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_star_star_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_star_star_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_star_star_id_seq OWNED BY public.epmms_star.star_id;


--
-- Name: epmms_stock_trend; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_stock_trend (
    stock_trend_id integer NOT NULL,
    stock_trend_value numeric(16,2) NOT NULL,
    stock_trend_date timestamp(0) without time zone DEFAULT now(),
    stock_trend_memberinfo_id integer NOT NULL
);


--
-- Name: epmms_stock_trend_stock_trend_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_stock_trend_stock_trend_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_stock_trend_stock_trend_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_stock_trend_stock_trend_id_seq OWNED BY public.epmms_stock_trend.stock_trend_id;


--
-- Name: epmms_sum_config; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_sum_config (
    sum_config_id integer NOT NULL,
    sum_type_id integer NOT NULL,
    sum_config_date character varying(10) NOT NULL
);


--
-- Name: COLUMN epmms_sum_config.sum_type_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_sum_config.sum_type_id IS '汇总类型';


--
-- Name: COLUMN epmms_sum_config.sum_config_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_sum_config.sum_config_date IS '汇总日期';


--
-- Name: epmms_sum_config_sum_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_sum_config_sum_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_sum_config_sum_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_sum_config_sum_config_id_seq OWNED BY public.epmms_sum_config.sum_config_id;


--
-- Name: epmms_sum_type; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_sum_type (
    sum_type_id integer NOT NULL,
    sum_type_name character varying(50),
    sum_finance_type_id integer DEFAULT 1
);


--
-- Name: TABLE epmms_sum_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_sum_type IS '汇总分类';


--
-- Name: COLUMN epmms_sum_type.sum_type_name; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_sum_type.sum_type_name IS '汇总类型';


--
-- Name: COLUMN epmms_sum_type.sum_finance_type_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_sum_type.sum_finance_type_id IS '帐户类型';


--
-- Name: epmms_supplement; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_supplement (
    supplement_id integer NOT NULL,
    supplement_currency numeric(16,2) NOT NULL,
    supplement_member_id integer NOT NULL,
    supplement_date timestamp(0) without time zone DEFAULT now(),
    supplement_member_level integer
);


--
-- Name: TABLE epmms_supplement; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_supplement IS '续费或充值';


--
-- Name: epmms_supplement_supplement_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_supplement_supplement_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_supplement_supplement_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_supplement_supplement_id_seq OWNED BY public.epmms_supplement.supplement_id;


--
-- Name: epmms_system_status; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_system_status (
    system_status_id integer NOT NULL,
    system_status_expenses numeric(16,2) DEFAULT 0 NOT NULL,
    system_status_income numeric(16,2) DEFAULT 0 NOT NULL,
    system_status_last_verify timestamp(0) without time zone,
    system_status_start_date timestamp(0) without time zone,
    system_status_withdrawals numeric(16,2) DEFAULT 0,
    system_status_verify_seq integer DEFAULT 1 NOT NULL,
    system_status_groupmap_seq integer DEFAULT 1 NOT NULL,
    system_status_foundation numeric(16,2) DEFAULT 0 NOT NULL,
    system_status_verify_seq2 integer DEFAULT 0 NOT NULL,
    system_status_award_period integer DEFAULT 0 NOT NULL,
    system_status_mapedit smallint DEFAULT 0
);


--
-- Name: TABLE epmms_system_status; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_system_status IS '系统状态参数';


--
-- Name: COLUMN epmms_system_status.system_status_expenses; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_system_status.system_status_expenses IS '总支出';


--
-- Name: COLUMN epmms_system_status.system_status_income; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_system_status.system_status_income IS '总收入';


--
-- Name: COLUMN epmms_system_status.system_status_last_verify; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_system_status.system_status_last_verify IS '最后激活会员的时间';


--
-- Name: COLUMN epmms_system_status.system_status_start_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_system_status.system_status_start_date IS '系统启动时间';


--
-- Name: COLUMN epmms_system_status.system_status_withdrawals; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_system_status.system_status_withdrawals IS '已提现金额';


--
-- Name: COLUMN epmms_system_status.system_status_verify_seq; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_system_status.system_status_verify_seq IS '审核序列';


--
-- Name: COLUMN epmms_system_status.system_status_award_period; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_system_status.system_status_award_period IS '当前奖金结算的最后期次';


--
-- Name: epmms_system_status_system_status_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_system_status_system_status_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_system_status_system_status_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_system_status_system_status_id_seq OWNED BY public.epmms_system_status.system_status_id;


--
-- Name: epmms_transfer; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_transfer (
    transfer_id integer NOT NULL,
    transfer_src_member_id integer NOT NULL,
    transfer_src_finance_type integer NOT NULL,
    transfer_dst_member_id integer NOT NULL,
    transfer_dst_finance_type integer NOT NULL,
    transfer_currency numeric(16,2) NOT NULL,
    transfer_remark text,
    transfer_is_verify smallint DEFAULT 0 NOT NULL,
    transfer_add_date timestamp(0) without time zone DEFAULT now(),
    transfer_verify_date timestamp(0) without time zone,
    transfer_sn character(10) DEFAULT public.epmms_next_sn() NOT NULL,
    transfer_tax numeric(16,4) DEFAULT 0 NOT NULL
);


--
-- Name: TABLE epmms_transfer; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_transfer IS '转帐申请';


--
-- Name: COLUMN epmms_transfer.transfer_src_member_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_transfer.transfer_src_member_id IS '转出会员';


--
-- Name: COLUMN epmms_transfer.transfer_src_finance_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_transfer.transfer_src_finance_type IS '转出帐户类型';


--
-- Name: COLUMN epmms_transfer.transfer_dst_member_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_transfer.transfer_dst_member_id IS '转入会员';


--
-- Name: COLUMN epmms_transfer.transfer_dst_finance_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_transfer.transfer_dst_finance_type IS '转入帐户类型';


--
-- Name: COLUMN epmms_transfer.transfer_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_transfer.transfer_currency IS '转帐金额';


--
-- Name: COLUMN epmms_transfer.transfer_remark; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_transfer.transfer_remark IS '备注';


--
-- Name: COLUMN epmms_transfer.transfer_is_verify; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_transfer.transfer_is_verify IS '是否审核';


--
-- Name: COLUMN epmms_transfer.transfer_add_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_transfer.transfer_add_date IS '申请日期';


--
-- Name: COLUMN epmms_transfer.transfer_verify_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_transfer.transfer_verify_date IS '审核日期';


--
-- Name: COLUMN epmms_transfer.transfer_sn; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_transfer.transfer_sn IS '流水号';


--
-- Name: epmms_transfer_config; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_transfer_config (
    transfer_config_id integer NOT NULL,
    transfer_config_src_type integer[],
    transfer_config_dst_type integer[],
    transfer_config_src_role text[],
    transfer_config_dst_role text[],
    transfer_config_member_able smallint DEFAULT 1 NOT NULL,
    transfer_config_relation smallint DEFAULT 0 NOT NULL,
    transfer_config_tax numeric(4,3) DEFAULT 0 NOT NULL
);


--
-- Name: COLUMN epmms_transfer_config.transfer_config_src_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_transfer_config.transfer_config_src_type IS '转出账户类型';


--
-- Name: COLUMN epmms_transfer_config.transfer_config_dst_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_transfer_config.transfer_config_dst_type IS '转入账户类型';


--
-- Name: COLUMN epmms_transfer_config.transfer_config_src_role; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_transfer_config.transfer_config_src_role IS '转出会员身份';


--
-- Name: COLUMN epmms_transfer_config.transfer_config_dst_role; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_transfer_config.transfer_config_dst_role IS '转入会员身份';


--
-- Name: COLUMN epmms_transfer_config.transfer_config_member_able; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_transfer_config.transfer_config_member_able IS '会员间转账';


--
-- Name: COLUMN epmms_transfer_config.transfer_config_relation; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_transfer_config.transfer_config_relation IS '非上下级间转账';


--
-- Name: epmms_transfer_config_transfer_config_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_transfer_config_transfer_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_transfer_config_transfer_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_transfer_config_transfer_config_id_seq OWNED BY public.epmms_transfer_config.transfer_config_id;


--
-- Name: epmms_transfer_transfer_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_transfer_transfer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_transfer_transfer_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_transfer_transfer_id_seq OWNED BY public.epmms_transfer.transfer_id;


--
-- Name: epmms_userinfo; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_userinfo (
    userinfo_id integer DEFAULT nextval(('public.epmms_userinfo_userinfo_id_seq'::text)::regclass) NOT NULL,
    userinfo_account character varying(50) NOT NULL,
    userinfo_password character varying(256) NOT NULL,
    userinfo_password2 character varying(256) NOT NULL,
    userinfo_name character varying(50),
    userinfo_sex smallint,
    userinfo_email character varying(256),
    userinfo_mobi character varying(20),
    userinfo_jobtitle character varying(50),
    userinfo_role character varying(64) NOT NULL,
    userinfo_add_date timestamp without time zone DEFAULT now() NOT NULL
);


--
-- Name: COLUMN epmms_userinfo.userinfo_account; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_userinfo.userinfo_account IS '登录帐号';


--
-- Name: COLUMN epmms_userinfo.userinfo_jobtitle; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_userinfo.userinfo_jobtitle IS '工作职务';


--
-- Name: COLUMN epmms_userinfo.userinfo_role; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_userinfo.userinfo_role IS '用户权限角色';


--
-- Name: epmms_userinfo_userinfo_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_userinfo_userinfo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 2147483647
    CACHE 1;


--
-- Name: epmms_withdrawals; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.epmms_withdrawals (
    withdrawals_id integer NOT NULL,
    withdrawals_member_id integer NOT NULL,
    withdrawals_currency numeric(16,2) NOT NULL,
    withdrawals_add_date timestamp(0) without time zone DEFAULT now(),
    withdrawals_is_verify smallint DEFAULT 0 NOT NULL,
    withdrawals_verify_date timestamp(0) without time zone,
    withdrawals_remark text,
    withdrawals_finance_type_id integer NOT NULL,
    withdrawals_sn character(10) DEFAULT public.epmms_next_sn() NOT NULL,
    withdrawals_tax numeric(16,2) DEFAULT 0 NOT NULL,
    withdrawals_real_currency numeric(16,2) DEFAULT 0,
    withdrawals_type smallint
);
ALTER TABLE ONLY public.epmms_withdrawals ALTER COLUMN withdrawals_id SET STATISTICS 0;


--
-- Name: TABLE epmms_withdrawals; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TABLE public.epmms_withdrawals IS '提款申请';


--
-- Name: COLUMN epmms_withdrawals.withdrawals_member_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_withdrawals.withdrawals_member_id IS '提款会员';


--
-- Name: COLUMN epmms_withdrawals.withdrawals_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_withdrawals.withdrawals_currency IS '提款金额';


--
-- Name: COLUMN epmms_withdrawals.withdrawals_add_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_withdrawals.withdrawals_add_date IS '提款日期';


--
-- Name: COLUMN epmms_withdrawals.withdrawals_is_verify; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_withdrawals.withdrawals_is_verify IS '是否申核过';


--
-- Name: COLUMN epmms_withdrawals.withdrawals_verify_date; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_withdrawals.withdrawals_verify_date IS '申核日期';


--
-- Name: COLUMN epmms_withdrawals.withdrawals_remark; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_withdrawals.withdrawals_remark IS '备注';


--
-- Name: COLUMN epmms_withdrawals.withdrawals_finance_type_id; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_withdrawals.withdrawals_finance_type_id IS '提款帐户';


--
-- Name: COLUMN epmms_withdrawals.withdrawals_sn; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_withdrawals.withdrawals_sn IS '提现流水号';


--
-- Name: COLUMN epmms_withdrawals.withdrawals_tax; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_withdrawals.withdrawals_tax IS '手续费';


--
-- Name: COLUMN epmms_withdrawals.withdrawals_real_currency; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_withdrawals.withdrawals_real_currency IS '实收金额';


--
-- Name: COLUMN epmms_withdrawals.withdrawals_type; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON COLUMN public.epmms_withdrawals.withdrawals_type IS '次日/次周';


--
-- Name: epmms_withdrawals_withdrawals_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.epmms_withdrawals_withdrawals_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: epmms_withdrawals_withdrawals_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: -
--

ALTER SEQUENCE public.epmms_withdrawals_withdrawals_id_seq OWNED BY public.epmms_withdrawals.withdrawals_id;


--
-- Name: gen_member; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.gen_member
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: SEQUENCE gen_member; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON SEQUENCE public.gen_member IS '生成会员的account';


--
-- Name: membermap_add; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.membermap_add
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: membermap_day; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW public.membermap_day AS
 SELECT epmms_membermap.membermap_id,
    epmms_membermap.membermap_seq,
    epmms_membermap.membermap_parent_id,
    epmms_membermap.membermap_recommend_id,
    epmms_membermap.membermap_membertype_level,
    epmms_membermap.membermap_layer,
    epmms_membermap.membermap_order,
    epmms_membermap.membermap_path,
    epmms_membermap.membermap_recommend_path,
    epmms_membermap.membermap_recommend_number,
    epmms_membermap.membermap_recommend_under_number,
    epmms_membermap.membermap_child_number,
    epmms_membermap.membermap_sub_number,
    epmms_membermap.membermap_sub_product_count,
    epmms_membermap.membermap_recommend_under_product_count,
    epmms_membermap.membermap_product_count,
    epmms_membermap.membermap_agent_id,
    epmms_membermap.membermap_is_verify,
    epmms_membermap.membermap_verify_seq,
    epmms_membermap.membermap_is_agent,
    epmms_membermap.membermap_verify_date,
    epmms_membermap.membermap_verify_member_id,
    epmms_membermap.membermap_add_date,
    epmms_membermap.membermap_is_empty,
    epmms_membermap.membermap_money,
    epmms_membermap.membermap_bond_id,
    epmms_membermap.membermap_level,
    epmms_membermap.membermap_recommend_layer,
    epmms_membermap.membermap_period,
    epmms_membermap.membermap_membertype_level_old,
    epmms_membermap.membermap_is_active,
    epmms_membermap.membermap_is_delete,
    epmms_membermap.membermap_under_product_count,
    epmms_membermap.membermap_under_number,
    epmms_membermap.membermap_agent_number,
    epmms_membermap.membermap_agent_product_count,
    epmms_membermap.membermap_recommend_product_count
   FROM public.epmms_membermap
  WHERE ((epmms_membermap.membermap_is_verify = 1) AND (epmms_membermap.membermap_verify_date < date_trunc('day'::text, now())) AND (epmms_membermap.membermap_verify_date >= (date_trunc('day'::text, now()) - '1 day'::interval)));


--
-- Name: membermap_month; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW public.membermap_month AS
 SELECT epmms_membermap.membermap_id,
    epmms_membermap.membermap_seq,
    epmms_membermap.membermap_parent_id,
    epmms_membermap.membermap_recommend_id,
    epmms_membermap.membermap_membertype_level,
    epmms_membermap.membermap_layer,
    epmms_membermap.membermap_order,
    epmms_membermap.membermap_path,
    epmms_membermap.membermap_recommend_path,
    epmms_membermap.membermap_recommend_number,
    epmms_membermap.membermap_recommend_under_number,
    epmms_membermap.membermap_child_number,
    epmms_membermap.membermap_sub_number,
    epmms_membermap.membermap_sub_product_count,
    epmms_membermap.membermap_recommend_under_product_count,
    epmms_membermap.membermap_product_count,
    epmms_membermap.membermap_agent_id,
    epmms_membermap.membermap_is_verify,
    epmms_membermap.membermap_verify_seq,
    epmms_membermap.membermap_is_agent,
    epmms_membermap.membermap_verify_date,
    epmms_membermap.membermap_verify_member_id,
    epmms_membermap.membermap_add_date,
    epmms_membermap.membermap_is_empty,
    epmms_membermap.membermap_money,
    epmms_membermap.membermap_bond_id,
    epmms_membermap.membermap_level,
    epmms_membermap.membermap_recommend_layer,
    epmms_membermap.membermap_period,
    epmms_membermap.membermap_membertype_level_old,
    epmms_membermap.membermap_is_active,
    epmms_membermap.membermap_is_delete,
    epmms_membermap.membermap_under_product_count,
    epmms_membermap.membermap_under_number,
    epmms_membermap.membermap_agent_number,
    epmms_membermap.membermap_agent_product_count,
    epmms_membermap.membermap_recommend_product_count
   FROM public.epmms_membermap
  WHERE ((epmms_membermap.membermap_is_verify = 1) AND (epmms_membermap.membermap_verify_date < date_trunc('month'::text, now())) AND (epmms_membermap.membermap_verify_date >= (date_trunc('month'::text, now()) - '1 mon'::interval)));


--
-- Name: membermap_quarter; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW public.membermap_quarter AS
 SELECT epmms_membermap.membermap_id,
    epmms_membermap.membermap_seq,
    epmms_membermap.membermap_parent_id,
    epmms_membermap.membermap_recommend_id,
    epmms_membermap.membermap_membertype_level,
    epmms_membermap.membermap_layer,
    epmms_membermap.membermap_order,
    epmms_membermap.membermap_path,
    epmms_membermap.membermap_recommend_path,
    epmms_membermap.membermap_recommend_number,
    epmms_membermap.membermap_recommend_under_number,
    epmms_membermap.membermap_child_number,
    epmms_membermap.membermap_sub_number,
    epmms_membermap.membermap_sub_product_count,
    epmms_membermap.membermap_recommend_under_product_count,
    epmms_membermap.membermap_product_count,
    epmms_membermap.membermap_agent_id,
    epmms_membermap.membermap_is_verify,
    epmms_membermap.membermap_verify_seq,
    epmms_membermap.membermap_is_agent,
    epmms_membermap.membermap_verify_date,
    epmms_membermap.membermap_verify_member_id,
    epmms_membermap.membermap_add_date,
    epmms_membermap.membermap_is_empty,
    epmms_membermap.membermap_money,
    epmms_membermap.membermap_bond_id,
    epmms_membermap.membermap_level,
    epmms_membermap.membermap_recommend_layer,
    epmms_membermap.membermap_period,
    epmms_membermap.membermap_membertype_level_old,
    epmms_membermap.membermap_is_active,
    epmms_membermap.membermap_is_delete,
    epmms_membermap.membermap_under_product_count,
    epmms_membermap.membermap_under_number,
    epmms_membermap.membermap_agent_number,
    epmms_membermap.membermap_agent_product_count,
    epmms_membermap.membermap_recommend_product_count
   FROM public.epmms_membermap
  WHERE ((epmms_membermap.membermap_is_verify = 1) AND (epmms_membermap.membermap_verify_date < date_trunc('quarter'::text, now())) AND (epmms_membermap.membermap_verify_date >= (date_trunc('quarter'::text, now()) - '3 mons'::interval)));


--
-- Name: membermap_verify; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.membermap_verify
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: membermap_week; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW public.membermap_week AS
 SELECT epmms_membermap.membermap_id,
    epmms_membermap.membermap_seq,
    epmms_membermap.membermap_parent_id,
    epmms_membermap.membermap_recommend_id,
    epmms_membermap.membermap_membertype_level,
    epmms_membermap.membermap_layer,
    epmms_membermap.membermap_order,
    epmms_membermap.membermap_path,
    epmms_membermap.membermap_recommend_path,
    epmms_membermap.membermap_recommend_number,
    epmms_membermap.membermap_recommend_under_number,
    epmms_membermap.membermap_child_number,
    epmms_membermap.membermap_sub_number,
    epmms_membermap.membermap_sub_product_count,
    epmms_membermap.membermap_recommend_under_product_count,
    epmms_membermap.membermap_product_count,
    epmms_membermap.membermap_agent_id,
    epmms_membermap.membermap_is_verify,
    epmms_membermap.membermap_verify_seq,
    epmms_membermap.membermap_is_agent,
    epmms_membermap.membermap_verify_date,
    epmms_membermap.membermap_verify_member_id,
    epmms_membermap.membermap_add_date,
    epmms_membermap.membermap_is_empty,
    epmms_membermap.membermap_money,
    epmms_membermap.membermap_bond_id,
    epmms_membermap.membermap_level,
    epmms_membermap.membermap_recommend_layer,
    epmms_membermap.membermap_period,
    epmms_membermap.membermap_membertype_level_old,
    epmms_membermap.membermap_is_active,
    epmms_membermap.membermap_is_delete,
    epmms_membermap.membermap_under_product_count,
    epmms_membermap.membermap_under_number,
    epmms_membermap.membermap_agent_number,
    epmms_membermap.membermap_agent_product_count,
    epmms_membermap.membermap_recommend_product_count
   FROM public.epmms_membermap
  WHERE ((epmms_membermap.membermap_is_verify = 1) AND (epmms_membermap.membermap_verify_date < date_trunc('week'::text, now())) AND (epmms_membermap.membermap_verify_date >= (date_trunc('week'::text, now()) - '7 days'::interval)));


--
-- Name: membermap_week_615; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW public.membermap_week_615 AS
 SELECT epmms_membermap.membermap_id,
    epmms_membermap.membermap_seq,
    epmms_membermap.membermap_parent_id,
    epmms_membermap.membermap_recommend_id,
    epmms_membermap.membermap_membertype_level,
    epmms_membermap.membermap_layer,
    epmms_membermap.membermap_order,
    epmms_membermap.membermap_path,
    epmms_membermap.membermap_recommend_path,
    epmms_membermap.membermap_recommend_number,
    epmms_membermap.membermap_recommend_under_number,
    epmms_membermap.membermap_child_number,
    epmms_membermap.membermap_sub_number,
    epmms_membermap.membermap_sub_product_count,
    epmms_membermap.membermap_recommend_under_product_count,
    epmms_membermap.membermap_product_count,
    epmms_membermap.membermap_agent_id,
    epmms_membermap.membermap_is_verify,
    epmms_membermap.membermap_verify_seq,
    epmms_membermap.membermap_is_agent,
    epmms_membermap.membermap_verify_date,
    epmms_membermap.membermap_verify_member_id,
    epmms_membermap.membermap_add_date,
    epmms_membermap.membermap_is_empty,
    epmms_membermap.membermap_money,
    epmms_membermap.membermap_bond_id,
    epmms_membermap.membermap_level,
    epmms_membermap.membermap_recommend_layer,
    epmms_membermap.membermap_period,
    epmms_membermap.membermap_membertype_level_old,
    epmms_membermap.membermap_is_active,
    epmms_membermap.membermap_is_delete,
    epmms_membermap.membermap_under_product_count,
    epmms_membermap.membermap_under_number,
    epmms_membermap.membermap_agent_number,
    epmms_membermap.membermap_agent_product_count,
    epmms_membermap.membermap_recommend_product_count
   FROM public.epmms_membermap
  WHERE ((epmms_membermap.membermap_is_verify = 1) AND (epmms_membermap.membermap_add_date < date_trunc('week'::text, ('2015-06-22'::date)::timestamp with time zone)) AND (epmms_membermap.membermap_add_date >= (date_trunc('week'::text, ('2015-06-22'::date)::timestamp with time zone) - '7 days'::interval)));


--
-- Name: membermap_week_65; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW public.membermap_week_65 AS
 SELECT epmms_membermap.membermap_id,
    epmms_membermap.membermap_seq,
    epmms_membermap.membermap_parent_id,
    epmms_membermap.membermap_recommend_id,
    epmms_membermap.membermap_membertype_level,
    epmms_membermap.membermap_layer,
    epmms_membermap.membermap_order,
    epmms_membermap.membermap_path,
    epmms_membermap.membermap_recommend_path,
    epmms_membermap.membermap_recommend_number,
    epmms_membermap.membermap_recommend_under_number,
    epmms_membermap.membermap_child_number,
    epmms_membermap.membermap_sub_number,
    epmms_membermap.membermap_sub_product_count,
    epmms_membermap.membermap_recommend_under_product_count,
    epmms_membermap.membermap_product_count,
    epmms_membermap.membermap_agent_id,
    epmms_membermap.membermap_is_verify,
    epmms_membermap.membermap_verify_seq,
    epmms_membermap.membermap_is_agent,
    epmms_membermap.membermap_verify_date,
    epmms_membermap.membermap_verify_member_id,
    epmms_membermap.membermap_add_date,
    epmms_membermap.membermap_is_empty,
    epmms_membermap.membermap_money,
    epmms_membermap.membermap_bond_id,
    epmms_membermap.membermap_level,
    epmms_membermap.membermap_recommend_layer,
    epmms_membermap.membermap_period,
    epmms_membermap.membermap_membertype_level_old,
    epmms_membermap.membermap_is_active,
    epmms_membermap.membermap_is_delete,
    epmms_membermap.membermap_under_product_count,
    epmms_membermap.membermap_under_number,
    epmms_membermap.membermap_agent_number,
    epmms_membermap.membermap_agent_product_count,
    epmms_membermap.membermap_recommend_product_count
   FROM public.epmms_membermap
  WHERE ((epmms_membermap.membermap_is_verify = 1) AND (epmms_membermap.membermap_add_date < date_trunc('week'::text, ('2015-06-29'::date)::timestamp with time zone)) AND (epmms_membermap.membermap_add_date >= (date_trunc('week'::text, ('2015-06-29'::date)::timestamp with time zone) - '7 days'::interval)));


--
-- Name: membermap_year; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW public.membermap_year AS
 SELECT epmms_membermap.membermap_id,
    epmms_membermap.membermap_seq,
    epmms_membermap.membermap_parent_id,
    epmms_membermap.membermap_recommend_id,
    epmms_membermap.membermap_membertype_level,
    epmms_membermap.membermap_layer,
    epmms_membermap.membermap_order,
    epmms_membermap.membermap_path,
    epmms_membermap.membermap_recommend_path,
    epmms_membermap.membermap_recommend_number,
    epmms_membermap.membermap_recommend_under_number,
    epmms_membermap.membermap_child_number,
    epmms_membermap.membermap_sub_number,
    epmms_membermap.membermap_sub_product_count,
    epmms_membermap.membermap_recommend_under_product_count,
    epmms_membermap.membermap_product_count,
    epmms_membermap.membermap_agent_id,
    epmms_membermap.membermap_is_verify,
    epmms_membermap.membermap_verify_seq,
    epmms_membermap.membermap_is_agent,
    epmms_membermap.membermap_verify_date,
    epmms_membermap.membermap_verify_member_id,
    epmms_membermap.membermap_add_date,
    epmms_membermap.membermap_is_empty,
    epmms_membermap.membermap_money,
    epmms_membermap.membermap_bond_id,
    epmms_membermap.membermap_level,
    epmms_membermap.membermap_recommend_layer,
    epmms_membermap.membermap_period,
    epmms_membermap.membermap_membertype_level_old,
    epmms_membermap.membermap_is_active,
    epmms_membermap.membermap_is_delete,
    epmms_membermap.membermap_under_product_count,
    epmms_membermap.membermap_under_number,
    epmms_membermap.membermap_agent_number,
    epmms_membermap.membermap_agent_product_count,
    epmms_membermap.membermap_recommend_product_count
   FROM public.epmms_membermap
  WHERE ((epmms_membermap.membermap_is_verify = 1) AND (epmms_membermap.membermap_verify_date < date_trunc('year'::text, now())) AND (epmms_membermap.membermap_verify_date >= (date_trunc('year'::text, now()) - '1 year'::interval)));


--
-- Name: messages_session; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.messages_session
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: serial_number; Type: SEQUENCE; Schema: public; Owner: -
--

CREATE SEQUENCE public.serial_number
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


--
-- Name: SEQUENCE serial_number; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON SEQUENCE public.serial_number IS '财务流水号';


--
-- Name: week_bond; Type: VIEW; Schema: public; Owner: -
--

CREATE VIEW public.week_bond AS
 SELECT epmms_membermap.membermap_id,
    epmms_membermap.membermap_seq,
    epmms_membermap.membermap_parent_id,
    epmms_membermap.membermap_recommend_id,
    epmms_membermap.membermap_membertype_level,
    epmms_membermap.membermap_layer,
    epmms_membermap.membermap_order,
    epmms_membermap.membermap_path,
    epmms_membermap.membermap_recommend_path,
    epmms_membermap.membermap_recommend_number,
    epmms_membermap.membermap_recommend_under_number,
    epmms_membermap.membermap_child_number,
    epmms_membermap.membermap_sub_number,
    epmms_membermap.membermap_sub_product_count,
    epmms_membermap.membermap_recommend_under_product_count,
    epmms_membermap.membermap_product_count,
    epmms_membermap.membermap_agent_id,
    epmms_membermap.membermap_is_verify,
    epmms_membermap.membermap_verify_seq,
    epmms_membermap.membermap_is_agent,
    epmms_membermap.membermap_verify_date,
    epmms_membermap.membermap_verify_member_id,
    epmms_membermap.membermap_add_date,
    epmms_membermap.membermap_is_empty,
    epmms_membermap.membermap_money,
    epmms_membermap.membermap_bond_id,
    epmms_membermap.membermap_level,
    epmms_membermap.membermap_recommend_layer,
    epmms_membermap.membermap_period,
    epmms_membermap.membermap_membertype_level_old,
    epmms_membermap.membermap_is_active,
    epmms_membermap.membermap_is_delete,
    epmms_membermap.membermap_under_product_count,
    epmms_membermap.membermap_under_number,
    epmms_membermap.membermap_agent_number,
    epmms_membermap.membermap_agent_product_count,
    epmms_membermap.membermap_recommend_product_count,
    epmms_membermap.membermap_agent_type,
    epmms_membermap.membermap_layer_order,
    epmms_membermap.membermap_reg_member_id
   FROM public.epmms_membermap
  WHERE (epmms_membermap.membermap_bond_id = '-2'::integer);


--
-- Name: award_config_budian award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_budian ALTER COLUMN award_config_id SET DEFAULT nextval('award.award_config_budian_award_config_id_seq'::regclass);


--
-- Name: award_config_day_futou award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_day_futou ALTER COLUMN award_config_id SET DEFAULT nextval('award.award_config_day_futou_award_config_id_seq'::regclass);


--
-- Name: award_config_dist award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_dist ALTER COLUMN award_config_id SET DEFAULT nextval('award.award_config_dist_award_config_id_seq'::regclass);


--
-- Name: award_config_dot_layer award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_dot_layer ALTER COLUMN award_config_id SET DEFAULT nextval('award.award_config_dot_layer_award_config_id_seq'::regclass);


--
-- Name: award_config_dot_layer2 award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_dot_layer2 ALTER COLUMN award_config_id SET DEFAULT nextval('award.award_config_dot_layer2_award_config_id_seq'::regclass);


--
-- Name: award_config_dot_layer_150919 award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_dot_layer_150919 ALTER COLUMN award_config_id SET DEFAULT nextval('award.award_config_dot_layer_150919_award_config_id_seq'::regclass);


--
-- Name: award_config_dot_limit award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_dot_limit ALTER COLUMN award_config_id SET DEFAULT nextval('award.award_config_dot_limit_award_config_id_seq'::regclass);


--
-- Name: award_config_dot_matrix2 award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_dot_matrix2 ALTER COLUMN award_config_id SET DEFAULT nextval('award.award_config_dot_matrix2_award_config_id_seq'::regclass);


--
-- Name: award_config_dot_recommend award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_dot_recommend ALTER COLUMN award_config_id SET DEFAULT nextval('award.award_config_dot_recommend_award_config_id_seq'::regclass);


--
-- Name: award_config_fenhong_level award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_fenhong_level ALTER COLUMN award_config_id SET DEFAULT nextval('award.award_config_fenhong_level_award_config_id_seq'::regclass);


--
-- Name: award_config_huzhu award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_huzhu ALTER COLUMN award_config_id SET DEFAULT nextval('award.award_config_huzhu_award_config_id_seq'::regclass);


--
-- Name: award_config_leader_recommend award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_leader_recommend ALTER COLUMN award_config_id SET DEFAULT nextval('award.award_config_leader_recommend_award_config_id_seq'::regclass);


--
-- Name: award_config_leader_recommend2 award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_leader_recommend2 ALTER COLUMN award_config_id SET DEFAULT nextval('award.award_config_leader_recommend2_award_config_id_seq'::regclass);


--
-- Name: award_config_static_fenhong award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_static_fenhong ALTER COLUMN award_config_id SET DEFAULT nextval('award.award_config_static_fenhong_award_config_id_seq'::regclass);


--
-- Name: award_config_up_down_425 award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_up_down_425 ALTER COLUMN award_config_id SET DEFAULT nextval('award.award_config_up_down_425_award_config_id_seq'::regclass);


--
-- Name: award_config_upgrade award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_upgrade ALTER COLUMN award_config_id SET DEFAULT nextval('award.award_config_upgrade_award_config_id_seq'::regclass);


--
-- Name: award_config_xingyu_futou award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_xingyu_futou ALTER COLUMN award_config_id SET DEFAULT nextval('award.table_award_config_id_seq'::regclass);


--
-- Name: award_config_xingyun award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_xingyun ALTER COLUMN award_config_id SET DEFAULT nextval('award.award_config_xingyun_award_config_id_seq'::regclass);


--
-- Name: award_recommend_matrix award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_recommend_matrix ALTER COLUMN award_config_id SET DEFAULT nextval('award.award_recommend_matrix_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_dot_matrix award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_dot_matrix ALTER COLUMN award_config_id SET DEFAULT nextval('award.epmms_award_config_dot_matrix_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_dot_matrix_left award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_dot_matrix_left ALTER COLUMN award_config_id SET DEFAULT nextval('award.epmms_award_config_dot_matrix_left_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_dot_matrix_recommend award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_dot_matrix_recommend ALTER COLUMN award_config_id SET DEFAULT nextval('award.epmms_award_config_dot_matrix_recommend_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_dot_matrix_recommend_151204 award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_dot_matrix_recommend_151204 ALTER COLUMN award_config_id SET DEFAULT nextval('award.epmms_award_config_dot_matrix_recommend_new_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_layer_full_layer award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_layer_full_layer ALTER COLUMN award_config_id SET DEFAULT nextval('award.epmms_award_config_layer_full_layer_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_month_fenhong award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_month_fenhong ALTER COLUMN award_config_id SET DEFAULT nextval('award.epmms_award_config_month_fenhong_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_pair_member award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_pair_member ALTER COLUMN award_config_id SET DEFAULT nextval('award.epmms_award_config_pair_member_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_pair_member_150919 award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_pair_member_150919 ALTER COLUMN award_config_id SET DEFAULT nextval('award.epmms_award_config_pair_member_150919_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_prize award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_prize ALTER COLUMN award_config_id SET DEFAULT nextval('award.epmms_award_config_prize_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_recommend award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_recommend ALTER COLUMN award_config_id SET DEFAULT nextval('award.epmms_award_config_recommend_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_recommend2 award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_recommend2 ALTER COLUMN award_config_id SET DEFAULT nextval('award.epmms_award_config_recommend2_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_recommend3 award_config_id; Type: DEFAULT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_recommend3 ALTER COLUMN award_config_id SET DEFAULT nextval('award.epmms_award_config_recommend3_award_config_id_seq'::regclass);


--
-- Name: epmms_activation_record activation_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_activation_record ALTER COLUMN activation_id SET DEFAULT nextval('public.epmms_activation_record_activation_id_seq'::regclass);


--
-- Name: epmms_announcement announcement_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_announcement ALTER COLUMN announcement_id SET DEFAULT nextval('public.epmms_announcement_announcement_id_seq'::regclass);


--
-- Name: epmms_announcement_class class_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_announcement_class ALTER COLUMN class_id SET DEFAULT nextval('public.epmms_announcement_class_class_id_seq'::regclass);


--
-- Name: epmms_appropriate appropriate_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_appropriate ALTER COLUMN appropriate_id SET DEFAULT nextval('public.epmms_appropriate_appropriate_id_seq'::regclass);


--
-- Name: epmms_authitem id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_authitem ALTER COLUMN id SET DEFAULT nextval('public.epmms_authitem_id_seq'::regclass);


--
-- Name: epmms_award_config_agent award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_agent ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_agent_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_aixinjijin award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_aixinjijin ALTER COLUMN award_config_id SET DEFAULT nextval('public.award_config_aixinjijin_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_all_fenhong config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_all_fenhong ALTER COLUMN config_id SET DEFAULT nextval('public.epmms_award_config_all_fenhong_config_id_seq'::regclass);


--
-- Name: epmms_award_config_award_student award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_award_student ALTER COLUMN award_config_id SET DEFAULT nextval('public.award_config_award_student_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_bonus award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_bonus ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_bonus_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_chuangye award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_chuangye ALTER COLUMN award_config_id SET DEFAULT nextval('public.award_config_chuangye_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_corp_fenhong award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_corp_fenhong ALTER COLUMN award_config_id SET DEFAULT nextval('public.award_config_corp_fenhong_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_day_fenhong award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_day_fenhong ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_day_fenhong_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_dif award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_dif ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_config_dif_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_dot award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_dot ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_dot_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_dot_fuwu award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_dot_fuwu ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_dot_fuwu_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_dot_layer award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_dot_layer ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_dot_layer_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_dot_matrix award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_dot_matrix ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_dot_matrix_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_dot_member award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_dot_member ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_dot_member_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_down award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_down ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_down_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_dup_dot award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_dup_dot ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_dup_dot_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_foundation award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_foundation ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_foundation_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_gl award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_gl ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_gl_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_gljt award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_gljt ALTER COLUMN award_config_id SET DEFAULT nextval('public.award_config_gljt_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_gongpai award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_gongpai ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_gongpai_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_group award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_group ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_group_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_group7 award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_group7 ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_group7_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_guanli award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_guanli ALTER COLUMN award_config_id SET DEFAULT nextval('public.award_config_guanli_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_guanli_upgrade award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_guanli_upgrade ALTER COLUMN award_config_id SET DEFAULT nextval('public.award_config_guanli_upgrade_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_huikui award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_huikui ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_huikui_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_layer award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_layer ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_layer_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_layer_dot award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_layer_dot ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_layer_dot_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_layer_full award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_layer_full ALTER COLUMN award_config_id SET DEFAULT nextval('public.award_config_layer_full_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_layer_recommend_dot award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_layer_recommend_dot ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_layer_recommend_dot_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_leader_down award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_leader_down ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_leader_down_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_lingdao award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_lingdao ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_lingdao_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_org_down award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_org_down ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_org_down_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_org_up_down award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_org_up_down ALTER COLUMN award_config_id SET DEFAULT nextval('public.award_config_org_up_down_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_out award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_out ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_out_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_pair_member award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_pair_member ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_pair_member_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_peiyu_upgrade award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_peiyu_upgrade ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_peiyu_upgrade_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_prize award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_prize ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_prize_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_recommend award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_recommend ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_recommend_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_recommend_layer award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_recommend_layer ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_recommend_layer_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_recommend_layer_dot award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_recommend_layer_dot ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_config_dot_m_l_r_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_share award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_share ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_share_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_stock award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_stock ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_stock_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_up award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_up ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_up_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_upgrade award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_upgrade ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_upgrade_award_config_id_seq'::regclass);


--
-- Name: epmms_award_config_yeji award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_yeji ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_award_config_yeji_award_config_id_seq'::regclass);


--
-- Name: epmms_award_day_sum_all award_day_sum_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_day_sum_all ALTER COLUMN award_day_sum_id SET DEFAULT nextval('public.epmms_award_day_sum_all_award_day_sum_id_seq'::regclass);


--
-- Name: epmms_award_group award_group_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_group ALTER COLUMN award_group_id SET DEFAULT nextval('public.epmms_award_group_award_group_id_seq'::regclass);


--
-- Name: epmms_award_month_sum_all award_month_sum_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_month_sum_all ALTER COLUMN award_month_sum_id SET DEFAULT nextval('public.epmms_award_month_sum_all_award_month_sum_id_seq'::regclass);


--
-- Name: epmms_award_week_sum_all award_week_sum_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_week_sum_all ALTER COLUMN award_week_sum_id SET DEFAULT nextval('public.epmms_award_week_sum_all_award_week_sum_id_seq'::regclass);


--
-- Name: epmms_award_year award_year_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_year ALTER COLUMN award_year_id SET DEFAULT nextval('public.epmms_award_year_award_year_id_seq'::regclass);


--
-- Name: epmms_award_year_sum award_year_sum_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_year_sum ALTER COLUMN award_year_sum_id SET DEFAULT nextval('public.epmms_award_month_year_sum_award_year_sum_id_seq'::regclass);


--
-- Name: epmms_backup backup_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_backup ALTER COLUMN backup_id SET DEFAULT nextval('public.epmms_backup_backup_id_seq'::regclass);


--
-- Name: epmms_buy buy_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_buy ALTER COLUMN buy_id SET DEFAULT nextval('public.epmms_buy_buy_id_seq'::regclass);


--
-- Name: epmms_cap_award cap_award_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_cap_award ALTER COLUMN cap_award_id SET DEFAULT nextval('public.epmms_cap_award_cap_award_id_seq'::regclass);


--
-- Name: epmms_cap_member_award cap_member_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_cap_member_award ALTER COLUMN cap_member_id SET DEFAULT nextval('public.epmms_cap_member_award_cap_member_id_seq'::regclass);


--
-- Name: epmms_cap_sum cap_sum_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_cap_sum ALTER COLUMN cap_sum_id SET DEFAULT nextval('public.epmms_cap_sum_cap_award_id_seq'::regclass);


--
-- Name: epmms_config_award_differential award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_config_award_differential ALTER COLUMN award_config_id SET DEFAULT nextval('public.epmms_config_award_differential_award_differential_id_seq'::regclass);


--
-- Name: epmms_config_backup config_backup_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_config_backup ALTER COLUMN config_backup_id SET DEFAULT nextval('public.epmms_config_backup_config_backup_id_seq'::regclass);


--
-- Name: epmms_config_pond award_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_config_pond ALTER COLUMN award_config_id SET DEFAULT nextval('public.award_config_pond_pond_id_seq'::regclass);


--
-- Name: epmms_config_withdrawals config_withdrawals_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_config_withdrawals ALTER COLUMN config_withdrawals_id SET DEFAULT nextval('public.epmms_config_withdrawals_config_withdrawals_id_seq'::regclass);


--
-- Name: epmms_deal deal_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_deal ALTER COLUMN deal_id SET DEFAULT nextval('public.epmms_deal_deal_id_seq'::regclass);


--
-- Name: epmms_dup dup_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_dup ALTER COLUMN dup_id SET DEFAULT nextval('public.epmms_dup_dup_id_seq'::regclass);


--
-- Name: epmms_foundation foundation_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_foundation ALTER COLUMN foundation_id SET DEFAULT nextval('public.epmms_foundation_foundation_id_seq'::regclass);


--
-- Name: epmms_futou futou_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_futou ALTER COLUMN futou_id SET DEFAULT nextval('public.epmms_futou_futou_id_seq'::regclass);


--
-- Name: epmms_game_charge charge_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_game_charge ALTER COLUMN charge_id SET DEFAULT nextval('public.epmms_game_charge_charge_id_seq'::regclass);


--
-- Name: epmms_group group_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_group ALTER COLUMN group_id SET DEFAULT nextval('public.epmms_group_group_id_seq'::regclass);


--
-- Name: epmms_help help_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_help ALTER COLUMN help_id SET DEFAULT nextval('public.epmms_help_help_id_seq'::regclass);


--
-- Name: epmms_jackpot_info info_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_jackpot_info ALTER COLUMN info_id SET DEFAULT nextval('public.epmms_jackpot_info_info_id_seq'::regclass);


--
-- Name: epmms_jackpot_win_record jackpot_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_jackpot_win_record ALTER COLUMN jackpot_id SET DEFAULT nextval('public.epmms_jackpot_win_record_jackpot_id_seq'::regclass);


--
-- Name: epmms_layer layer_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_layer ALTER COLUMN layer_id SET DEFAULT nextval('public.epmms_layer_layer_id_seq'::regclass);


--
-- Name: epmms_map_edit map_edit_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_map_edit ALTER COLUMN map_edit_id SET DEFAULT nextval('public.epmms_map_edit_map_edit_id_seq'::regclass);


--
-- Name: epmms_member_upgrade member_upgrade_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_member_upgrade ALTER COLUMN member_upgrade_id SET DEFAULT nextval('public.epmms_member_upgrade_member_upgrade_id_seq'::regclass);


--
-- Name: epmms_membermap3 membermap_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap3 ALTER COLUMN membermap_id SET DEFAULT nextval('public.epmms_membermap3_membermap_id_seq'::regclass);


--
-- Name: epmms_membermap4 membermap_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap4 ALTER COLUMN membermap_id SET DEFAULT nextval('public.epmms_membermap4_membermap_id_seq'::regclass);


--
-- Name: epmms_messages messages_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_messages ALTER COLUMN messages_id SET DEFAULT nextval('public.epmms_messages_messages_id_seq'::regclass);


--
-- Name: epmms_mybank mybank_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_mybank ALTER COLUMN mybank_id SET DEFAULT nextval('public.epmms_mybank_mybank_id_seq'::regclass);


--
-- Name: epmms_orders orders_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_orders ALTER COLUMN orders_id SET DEFAULT nextval('public.epmms_orders_orders_id_seq'::regclass);


--
-- Name: epmms_pond pond_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_pond ALTER COLUMN pond_id SET DEFAULT nextval('public.epmms_pond_pond_id_seq'::regclass);


--
-- Name: epmms_prize prize_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_prize ALTER COLUMN prize_id SET DEFAULT nextval('public.epmms_prize_prize_id_seq'::regclass);


--
-- Name: epmms_product_class product_class_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_product_class ALTER COLUMN product_class_id SET DEFAULT nextval('public.epmms_product_class_product_class_id_seq'::regclass);


--
-- Name: epmms_ratio ratio_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_ratio ALTER COLUMN ratio_id SET DEFAULT nextval('public.epmms_ratio_ratio_id_seq'::regclass);


--
-- Name: epmms_sale sale_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_sale ALTER COLUMN sale_id SET DEFAULT nextval('public.epmms_sale_sale_id_seq'::regclass);


--
-- Name: epmms_signing signing_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_signing ALTER COLUMN signing_id SET DEFAULT nextval('public.epmms_signing_signing_id_seq'::regclass);


--
-- Name: epmms_star star_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_star ALTER COLUMN star_id SET DEFAULT nextval('public.epmms_star_star_id_seq'::regclass);


--
-- Name: epmms_stock_trend stock_trend_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_stock_trend ALTER COLUMN stock_trend_id SET DEFAULT nextval('public.epmms_stock_trend_stock_trend_id_seq'::regclass);


--
-- Name: epmms_sum_config sum_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_sum_config ALTER COLUMN sum_config_id SET DEFAULT nextval('public.epmms_sum_config_sum_config_id_seq'::regclass);


--
-- Name: epmms_supplement supplement_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_supplement ALTER COLUMN supplement_id SET DEFAULT nextval('public.epmms_supplement_supplement_id_seq'::regclass);


--
-- Name: epmms_system_status system_status_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_system_status ALTER COLUMN system_status_id SET DEFAULT nextval('public.epmms_system_status_system_status_id_seq'::regclass);


--
-- Name: epmms_transfer transfer_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_transfer ALTER COLUMN transfer_id SET DEFAULT nextval('public.epmms_transfer_transfer_id_seq'::regclass);


--
-- Name: epmms_transfer_config transfer_config_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_transfer_config ALTER COLUMN transfer_config_id SET DEFAULT nextval('public.epmms_transfer_config_transfer_config_id_seq'::regclass);


--
-- Name: epmms_withdrawals withdrawals_id; Type: DEFAULT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_withdrawals ALTER COLUMN withdrawals_id SET DEFAULT nextval('public.epmms_withdrawals_withdrawals_id_seq'::regclass);


--
-- Data for Name: award_config_3070; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_3070 (award_config_id, award_config_ratio, award_config_currency) FROM stdin;
1	[1,2)	0.30
2	[2,)	0.70
\.


--
-- Data for Name: award_config_budian; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_budian (award_config_id, award_config_award_member, award_config_new_member, award_config_currency) FROM stdin;
1	1	1	500.00
2	1	2	500.00
3	1	3	500.00
4	2	1	500.00
5	2	2	1000.00
7	3	1	500.00
8	3	2	1000.00
9	3	3	2000.00
6	2	3	1000.00
\.


--
-- Data for Name: award_config_day_futou; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_day_futou (award_config_id, award_config_level, award_config_days, award_config_money, award_config_percnet_finance) FROM stdin;
5	5	30	330.0000	0.1500
6	6	30	660.0000	0.1500
7	7	30	990.0000	0.1500
8	8	30	1200.0000	0.1500
10	10	30	2400.0000	0.2500
9	9	300	1800.0000	0.2500
11	11	30	3000.0000	0.2500
12	12	30	5000.0000	0.2500
13	13	300	10000.0000	0.2500
14	13	99999999	20000.0000	0.2500
1	1	30	200.0000	0.0500
2	2	30	500.0000	0.0500
3	3	30	1400.0000	0.0500
4	4	30	1800.0000	0.0500
\.


--
-- Data for Name: award_config_dist; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_dist (award_config_id, award_config_agent_type, award_config_award, award_config_layer) FROM stdin;
\.


--
-- Data for Name: award_config_dot_layer; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_dot_layer (award_config_id, award_config_layer, award_config_currency, award_config_recommend, award_config_membertype) FROM stdin;
10	[1,9)	2.0000	\N	1
1	[1,9)	8.0000	[0,1)	2
25	[1,9)	8.0000	\N	3
\.


--
-- Data for Name: award_config_dot_layer2; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_dot_layer2 (award_config_id, award_config_layer, award_config_currency) FROM stdin;
1	[1,2)	120.00
2	[2,3)	100.00
3	[3,4)	160.00
4	[4,5)	200.00
6	[5,6)	240.00
\.


--
-- Data for Name: award_config_dot_layer_150919; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_dot_layer_150919 (award_config_id, award_config_layer, award_config_currency, award_config_recommend) FROM stdin;
1	[6,7)	5000.0000	[0,1)
\.


--
-- Data for Name: award_config_dot_limit; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_dot_limit (award_config_id, award_config_recommend, award_config_limit) FROM stdin;
3	[0,1)	10000.000
4	[1,2)	30000.000
6	[2,3)	60000.000
7	[3,)	9999999999999.990
\.


--
-- Data for Name: award_config_dot_matrix2; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_dot_matrix2 (award_config_id, award_config_award_member, award_config_new_member, award_config_currency) FROM stdin;
1	1	1	70.00
2	1	2	1250.00
3	1	3	1250.00
4	2	1	1250.00
5	2	2	2500.00
6	2	3	2500.00
7	3	1	1250.00
8	3	2	2500.00
9	3	3	5000.00
\.


--
-- Data for Name: award_config_dot_recommend; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_dot_recommend (award_config_id, award_config_membertype, award_config_layer, award_config_currency) FROM stdin;
1	1	5	50.00
2	2	10	150.00
3	3	15	500.00
\.


--
-- Data for Name: award_config_down_up; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_down_up (award_config_id, award_config_member, award_config_layer, award_config_currency, award_config_recommend) FROM stdin;
1	2	1	0.10	[0,1)
2	3	1	0.10	[1,2)
3	4	1	0.10	[2,3)
4	4	2	0.05	[3,4)
5	5	1	0.10	[4,5)
6	5	2	0.05	[5,)
\.


--
-- Data for Name: award_config_dup; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_dup (award_config_id, award_config_total, award_config_award) FROM stdin;
\.


--
-- Data for Name: award_config_fanli; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_fanli (award_config_id, award_config_membertype, award_config_currency, award_config_buy) FROM stdin;
2	2	0.25	0.75
1	1	0.25	0.50
3	3	0.50	0.75
\.


--
-- Data for Name: award_config_fenhong_level; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_fenhong_level (award_config_id, award_config_level, award_config_currency, award_config_month_money) FROM stdin;
1	1	1000.00	10000.00
2	2	2000.00	30000.00
3	3	3000.00	100000.00
4	4	4000.00	300000.00
5	5	5000.00	1000000.00
6	6	6000.00	0.00
7	7	7000.00	0.00
\.


--
-- Data for Name: award_config_global_fenhong; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_global_fenhong (member_number, member_level, upgrade_level, df_currency, currency) FROM stdin;
2	6	1	10000.0000	20.0000
2	7	2	20000.0000	50.0000
2	8	3	30000.0000	100.0000
2	10	4	50000.0000	200.0000
2	9	5	40000.0000	300.0000
\.


--
-- Data for Name: award_config_huzhu; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_huzhu (award_config_id, award_config_layer, award_config_currency) FROM stdin;
1	1	200.00
2	2	400.00
3	3	800.00
4	4	1600.00
5	5	2500.00
\.


--
-- Data for Name: award_config_layer_pair_member; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_layer_pair_member (award_config_membertype, award_config_layer, award_config_currency, award_config_id, award_config_recommend) FROM stdin;
1	[1,10000000)	0.50	1	[1,10000000)
\.


--
-- Data for Name: award_config_leader_fenhong; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_leader_fenhong (member_number, level, currency) FROM stdin;
50	1	20.00
100	2	40.00
200	3	60.00
400	4	80.00
800	5	100.00
1600	6	120.00
\.


--
-- Data for Name: award_config_leader_recommend; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_leader_recommend (award_config_id, award_config_membertype, award_config_recommend_layer, award_config_money) FROM stdin;
1	1	1	0.0400
2	2	1	0.0400
3	2	2	0.0300
4	3	1	0.0400
5	3	2	0.0300
6	3	3	0.0200
7	4	1	0.0400
8	4	2	0.0300
9	4	3	0.0200
10	4	4	0.0100
\.


--
-- Data for Name: award_config_leader_recommend2; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_leader_recommend2 (award_config_id, award_config_membertype, award_config_recommend_layer, award_config_money) FROM stdin;
1	1	1	0.0500
2	1	2	0.1000
3	2	1	0.0500
4	2	2	0.1000
5	2	3	0.0300
6	3	1	0.0500
7	3	2	0.1000
8	3	3	0.0300
9	3	4	0.0300
10	3	5	0.0300
\.


--
-- Data for Name: award_config_manage; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_manage (award_layer, award_money, award_type) FROM stdin;
1	200.00	231
2	200.00	235
\.


--
-- Data for Name: award_config_market; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_market (layer, currency) FROM stdin;
[1,3)	1.00
[3,4)	0.50
[4,5)	0.40
[5,6)	0.30
[6,7)	0.20
[7,12)	0.10
\.


--
-- Data for Name: award_config_org_up_down; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_org_up_down (award_config_id, award_config_layer, award_config_membertype, award_config_currency, award_config_recommend) FROM stdin;
40	1	1	0.05	[3,4)
41	3	1	0.05	[3,4)
42	5	1	0.05	[3,4)
43	1	1	0.05	[4,5)
44	3	1	0.05	[4,5)
45	5	1	0.05	[4,5)
46	7	1	0.05	[4,5)
47	1	1	0.05	[5,6)
48	3	1	0.05	\N
39	10	1	0.05	[2,3)
15	10	1	0.05	[0,1)
38	10	1	0.05	[1,2)
\.


--
-- Data for Name: award_config_recommend_type2; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_recommend_type2 (award_config_id, award_config_membertype, award_config_currency) FROM stdin;
1	3	300.00
2	4	600.00
\.


--
-- Data for Name: award_config_signing; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_signing (signing_type, config_currency, signing_refuse, config_id, award_type) FROM stdin;
0	100.000	1	1	229
1	100.000	1	3	229
\.


--
-- Data for Name: award_config_static_fenghong_recommend; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_static_fenghong_recommend (award_config_id, award_config_recommend, award_config_currency, award_config_limit) FROM stdin;
1	[0,1)	0.0050	20000.00
2	[1,3)	0.0100	30000.00
3	[3,)	0.0150	50000.00
\.


--
-- Data for Name: award_config_static_fenhong; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_static_fenhong (award_config_id, award_config_membertype, award_config_money, award_config_limit) FROM stdin;
1	1	0.2000	7500.00
2	2	0.2000	15000.00
6	3	0.2000	45000.00
7	4	0.2000	75000.00
8	5	0.2000	\N
9	6	0.2000	\N
13	7	0.2000	\N
\.


--
-- Data for Name: award_config_up_down_425; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_up_down_425 (award_config_id, award_config_recommend, award_config_layer, award_config_currency) FROM stdin;
1	[1,2)	1	0.05
2	[2,3)	1	0.05
3	[2,3)	3	0.05
4	[3,4)	1	0.05
5	[3,4)	3	0.05
6	[3,4)	5	0.05
7	[4,5)	1	0.05
16	[4,5)	3	0.05
17	[4,5)	5	0.05
18	[4,5)	7	0.05
19	[5,)	1	0.05
20	[5,)	3	0.05
21	[5,)	5	0.05
22	[5,)	7	0.05
23	[5,)	9	0.05
\.


--
-- Data for Name: award_config_upgrade; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_upgrade (award_config_id, little_currency, down_number, down_level, upgrade_level) FROM stdin;
1	10000.00	0	0	1
2	60000.00	2	1	2
3	210000.00	2	2	3
4	1010000.00	2	3	4
5	2010000.00	2	4	5
6	4010000.00	2	5	6
\.


--
-- Data for Name: award_config_xingyu_futou; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_xingyu_futou (award_config_id, award_config_seqs, award_config_money, award_config_recommend_jin_number) FROM stdin;
1	{1,4,7}	8.0000	[0,2)
2	{1,2,4,5,7,8}	12.0000	[2,4)
3	{1,2,3,4,5,6,7,8,9}	20.0000	[4,)
\.


--
-- Data for Name: award_config_xingyun; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_xingyun (award_config_id, award_config_membertype, award_config_currency) FROM stdin;
1	1	0.1000
2	2	0.0300
3	3	0.0200
4	4	0.0100
5	5	0.0050
\.


--
-- Data for Name: award_config_zhengka; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_config_zhengka (award_config_id, award_config_membertype, award_config_membertype_new, award_config_currency) FROM stdin;
1	1	1	500
2	1	2	500
3	1	3	500
4	2	1	500
5	2	2	1000
6	2	3	1000
7	3	1	500
8	3	2	1000
9	3	3	1500
\.


--
-- Data for Name: award_recommend_matrix; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.award_recommend_matrix (award_config_id, award_config_award_membertype, award_config_new_membertype, award_config_award) FROM stdin;
1	1	2	1500.0000
2	1	3	0.0000
3	1	4	0.0500
4	1	5	0.1000
5	1	6	0.1500
7	2	2	1500.0000
8	2	3	0.0000
9	2	4	0.0500
10	2	5	0.1000
11	2	6	0.1500
14	3	4	0.1500
15	3	5	0.1500
16	3	6	0.1500
12	3	2	2000.0000
13	3	3	0.0000
17	4	2	2300.0000
18	4	3	300.0000
19	4	4	0.0800
20	4	5	0.1000
21	4	6	0.1500
22	5	2	2800.0000
24	5	4	0.0800
25	5	5	0.1000
23	5	3	800.0000
26	5	6	0.1500
27	6	2	3100.0000
28	6	3	1100.0000
30	6	4	0.0800
31	6	5	0.1000
32	6	6	0.1500
\.


--
-- Data for Name: dynamic_fenhong; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.dynamic_fenhong (award_config_id, membertype, billcount, layers) FROM stdin;
1	1	[1,2)	5
2	1	[2,3)	10
3	1	[3,4)	15
4	1	[4,5)	20
5	1	[5,)	25
6	2	[1,2)	7
7	2	[2,3)	15
8	2	[3,4)	25
10	3	[1,2)	10
9	2	[4,)	25
11	3	[2,)	25
12	4	[1,)	25
\.


--
-- Data for Name: dynmmic_fenhong_percent; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.dynmmic_fenhong_percent (award_config_id, layers, award_currency) FROM stdin;
2	[2,3)	0.2000
3	[3,11)	0.1000
4	[11,)	0.0500
1	[1,2)	0.1000
\.


--
-- Data for Name: epmms_award_config_agent; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.epmms_award_config_agent (award_config_id, award_config_agent, award_config_currency) FROM stdin;
4	1	12.00
6	2	100.00
8	3	100.00
\.


--
-- Data for Name: epmms_award_config_day_fenhong; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.epmms_award_config_day_fenhong (award_config_id, award_membertype, award_currency) FROM stdin;
7	2	0.0000
6	1	0.0000
8	3	0.0000
9	4	0.0000
10	5	0.0000
12	6	0.0000
13	7	0.0000
\.


--
-- Data for Name: epmms_award_config_dif; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.epmms_award_config_dif (award_config_id, director_level, dif_award, equal_award, membertype) FROM stdin;
2	2	0.06	0.02	1
1	1	0.03	0.02	1
3	3	0.09	0.02	1
4	4	0.12	0.02	1
5	5	0.15	0.02	2
6	6	0.18	0.02	2
7	7	0.21	0.02	2
8	8	0.24	0.02	2
9	9	0.27	0.02	3
\.


--
-- Data for Name: epmms_award_config_dot_matrix; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.epmms_award_config_dot_matrix (award_config_id, award_config_award_member, award_config_new_member, award_config_layer, award_config_currency) FROM stdin;
1	1	1	10	3.50
2	1	2	10	3.50
3	1	3	10	3.50
7	1	4	10	3.50
8	1	5	10	3.50
10	2	1	10	3.50
12	2	2	10	17.50
18	2	3	10	17.50
19	2	4	10	17.50
25	2	5	10	17.50
26	3	1	10	3.50
27	3	2	10	17.50
28	3	3	10	35.00
29	3	4	10	35.00
30	3	5	10	35.00
31	4	1	10	3.50
32	4	2	10	17.50
33	4	3	10	35.00
34	4	4	10	70.00
35	4	5	10	70.00
36	5	1	10	3.50
37	5	2	10	17.50
38	5	3	10	35.00
39	5	4	10	70.00
40	5	5	10	175.00
\.


--
-- Data for Name: epmms_award_config_dot_matrix_left; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.epmms_award_config_dot_matrix_left (award_config_id, award_config_award_member, award_config_new_member, award_config_layer, award_config_currency) FROM stdin;
1	1	1	8	1250.00
2	1	2	8	1250.00
3	1	3	8	1250.00
6	2	1	10	1250.00
7	2	2	10	2500.00
8	2	3	10	2500.00
10	3	1	13	1250.00
11	3	2	13	2500.00
12	3	3	13	5000.00
\.


--
-- Data for Name: epmms_award_config_dot_matrix_recommend; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.epmms_award_config_dot_matrix_recommend (award_config_id, award_config_award_member, award_config_new_member, award_config_layer, award_config_currency) FROM stdin;
1	1	1	1	2500.00
2	1	2	1	2500.00
3	1	3	1	2500.00
5	2	1	1	2500.00
6	2	2	1	5000.00
7	2	3	1	5000.00
8	3	1	1	2500.00
9	3	2	1	5000.00
10	3	3	1	7500.00
\.


--
-- Data for Name: epmms_award_config_dot_matrix_recommend_151204; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.epmms_award_config_dot_matrix_recommend_151204 (award_config_id, award_config_award_member, award_config_new_member, award_config_layer, award_config_currency) FROM stdin;
2	1	1	[1,11)	2.50
3	1	2	[1,11)	2.50
4	1	3	[1,11)	2.50
5	2	1	[1,21)	2.50
6	2	2	[1,21)	7.50
7	2	3	[1,21)	7.50
8	3	1	[6,31)	2.50
9	3	2	[6,31)	7.50
10	3	3	[6,31)	25.00
\.


--
-- Data for Name: epmms_award_config_layer_full_layer; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.epmms_award_config_layer_full_layer (award_config_id, award_config_layer, award_config_currency) FROM stdin;
1	1	3000.00
2	2	3000.00
\.


--
-- Data for Name: epmms_award_config_month_fenhong; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.epmms_award_config_month_fenhong (award_config_id, award_membertype, award_currency, award_config_limit) FROM stdin;
1	1	0.0500	10000.00
2	2	0.0300	62500.00
3	3	0.0300	250000.00
4	4	0.0300	1000000.00
5	5	0.0300	4000000.00
6	6	0.0300	2147483647.00
7	7	0.0500	2147483647.00
\.


--
-- Data for Name: epmms_award_config_pair_member; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.epmms_award_config_pair_member (award_config_id, award_config_membertype, award_config_currency, award_config_diff) FROM stdin;
1	1	0.0900	\N
19	2	0.0900	\N
34	3	0.0900	\N
\.


--
-- Data for Name: epmms_award_config_pair_member_150919; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.epmms_award_config_pair_member_150919 (award_config_id, award_config_membertype, award_config_currency, award_config_diff) FROM stdin;
1	1	50.00	4000.00
\.


--
-- Data for Name: epmms_award_config_prize; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.epmms_award_config_prize (award_config_id, award_config_name, award_config_total) FROM stdin;
1	10万元SUV	5000.00
2	H8	20000.00
3	X4	100000.00
\.


--
-- Data for Name: epmms_award_config_recommend; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.epmms_award_config_recommend (award_config_id, award_config_membertype, award_config_currency, award_config_membertype_new) FROM stdin;
14	3	0.0900	\N
1	1	0.0450	1
2	2	0.0900	2
\.


--
-- Data for Name: epmms_award_config_recommend2; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.epmms_award_config_recommend2 (award_config_id, award_config_membertype, award_config_currency, award_config_membertype_new) FROM stdin;
10	3	300.00	1
11	4	600.00	2
\.


--
-- Data for Name: epmms_award_config_recommend3; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.epmms_award_config_recommend3 (award_config_id, award_config_membertype, award_config_currency, award_config_membertype_new) FROM stdin;
13	1	10.00	\N
14	2	50.00	\N
10	3	100.00	1
11	4	200.00	2
\.


--
-- Data for Name: static_fenhong; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.static_fenhong (award_config_id, membertype, award_currency) FROM stdin;
1	1	80.0000
2	2	180.0000
3	3	380.0000
4	4	580.0000
\.


--
-- Data for Name: upgrade_child_condition; Type: TABLE DATA; Schema: award; Owner: -
--

COPY award.upgrade_child_condition (config_id, upgrade_level, child_number, child_level) FROM stdin;
1	2	1	1
2	3	1	1
3	3	1	2
4	4	1	1
5	4	1	2
6	4	1	3
7	5	3	1
8	5	1	2
9	5	1	3
10	5	1	4
\.


--
-- Data for Name: epmms_activation_record; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_activation_record (activation_id, activation_member_id, activation_add_time) FROM stdin;
\.


--
-- Data for Name: epmms_agent; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_agent (agent_id, agent_memberinfo_id, agent_memo, agent_is_verify, agent_add_date, agent_verify_date, agent_type, agent_province, agent_area, agent_county, agent_account) FROM stdin;
1	1	\N	1	2018-10-07 12:48:04	2018-10-07 12:48:08	1	北京市	\N	\N	\N
\.


--
-- Data for Name: epmms_agent_type; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_agent_type (agent_type_level, agent_type_name) FROM stdin;
1	会员工资号
2	会员号
3	会员复消号
\.


--
-- Data for Name: epmms_announcement; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_announcement (announcement_id, announcement_title, announcement_content, announcement_add_date, announcement_mod_date, announcement_userinfo_id, announcement_class, log_id, log_category, log_source, log_operate, log_target, log_value, log_info, log_ip, log_user, log_role, log_add_date, log_status) FROM stdin;
21	致辞公司家人:	<p>\r\n\t<span style="font-size:12px;">&nbsp; &nbsp; &nbsp; &nbsp;在互联网经济趋势浪潮下，应运而生的“企业联盟.社交电商”平台，本着利国、利民、利己、利社会的原则，让每一位消费者成为消费商，让消费者省钱、并能赚钱的，新型电子商务平台，其联合国内外多家知名企业，以高品质，低价位，健康无化工伤害的优质产品，走线下实体体验店+线上消费的运营模式，让每个家庭远离化工伤害、并让中国女性远离妇科疾病的，新型电子商务平台。</span>\r\n</p>	2018-11-22 23:36:31	2018-11-22 23:36:32	1	1	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N
\.


--
-- Data for Name: epmms_announcement_class; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_announcement_class (class_id, class_name, class_intro, class_add_date, class_sort) FROM stdin;
1	公告	\N	2014-08-28 04:47:07	1
\.


--
-- Data for Name: epmms_appropriate; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_appropriate (appropriate_id, appropriate_currency, appropriate_finance_type_id, appropriate_add_date, appropriate_memberinfo_id, appropriate_type) FROM stdin;
\.


--
-- Data for Name: epmms_authassignment; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_authassignment (itemname, userid, bizrule, data) FROM stdin;
epmms	1	\N	N;
\.


--
-- Data for Name: epmms_authitem; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_authitem (name, type, description, bizrule, data, add_date, id) FROM stdin;
Agent.Verify	0	审核代理中心	\N	N;	2014-01-07 16:27:16	1
Guest	2	未登录用户	\N	N;	2014-01-07 16:27:16	9
Memberinfo.Verify	0	审核会员	\N	N;	2014-01-07 16:27:16	13
Site.Error	0	\N	\N	N;	2014-01-07 16:27:16	24
Site.Login	0	\N	\N	N;	2014-01-07 16:27:16	26
Site.Logout	0	\N	\N	N;	2014-01-07 16:27:16	27
Site.Page	0	框架页	\N	N;	2014-01-07 16:27:16	28
auditor	2	审计员	\N	N;	2014-01-07 16:27:16	39
authenticated	2	已登录用户	\N	N;	2014-01-07 16:27:16	40
leader	2	领导	\N	N;	2014-01-07 16:27:16	41
member	2	会员	\N	N;	2014-01-07 16:27:16	42
Transfer.Verify	0	审核转帐申请	\N	N;	2014-01-07 16:27:16	47
Transfer.Index	0	管理转帐申请	\N	N;	2014-01-07 16:27:16	48
Charge.Create	0	申请充值	\N	N;	2014-01-07 16:27:16	50
Charge.Delete	0	删除充值申请	\N	N;	2014-01-07 16:27:16	51
Transfer.Create	0	申请转帐申请	\N	N;	2014-01-07 16:27:16	52
Transfer.Delete	0	删除转帐申请	\N	N;	2014-01-07 16:27:16	54
Charge.View	0	查看充值申请	\N	N;	2014-01-07 16:27:16	55
Charge.Verify	0	审核充值	\N	N;	2014-01-07 16:27:16	56
Charge.Index	0	管理充值申请	\N	N;	2014-01-07 16:27:16	58
ConfigSite.Update	0	修改站点设置	\N	N;	2014-01-07 16:27:16	74
ConfigAuth.Update	0	修改认证设置	\N	N;	2014-01-07 16:27:16	75
ConfigSmtp.Update	0	修改邮件通知设置	\N	N;	2014-01-07 16:27:16	76
Backup.Delete	0	删除备份	\N	N;	2014-01-07 16:27:16	77
Backup.Restore	0	恢复备份	\N	N;	2014-01-07 16:27:16	78
Backup.Create	0	添加备份	\N	N;	2014-01-07 16:27:16	79
Announcement.Update	0	修改新闻公告	\N	N;	2014-01-07 16:27:16	81
Announcement.Create	0	添加新闻公告	\N	N;	2014-01-07 16:27:16	82
Announcement.Delete	0	删除新闻公告	\N	N;	2014-01-07 16:27:16	83
Userinfo.Delete	0	删除管理员	\N	N;	2014-01-07 16:27:16	85
Agent.Delete	0	删除代理中心	\N	N;	2014-01-07 16:27:16	86
Agent.Register	0	申请代理中心	\N	N;	2014-01-07 16:27:16	87
Agent.Index	0	管理代理中心	\N	N;	2014-01-07 16:27:16	88
ConfigBackup.Update	0	修改备份设置	\N	N;	2014-01-07 16:27:16	94
Memberinfo.Clean	0	清空数据	\N	N;	2014-01-07 16:27:16	95
Userinfo.Create	0	添加管理员	\N	N;	2014-01-07 16:27:16	96
Agent.View	0	查看代理中心	\N	N;	2014-01-07 16:27:16	97
Bank.Create	0	添加银行	\N	N;	2014-01-07 16:27:16	98
Bank.Delete	0	删除银行	\N	N;	2014-01-07 16:27:16	99
Bank.Index	0	管理银行	\N	N;	2014-01-07 16:27:16	100
Memberinfo.Index	0	管理会员	\N	N;	2014-01-07 16:27:16	101
Userinfo.UpdatePassword	0	修改管理员密码	return user()->role=='leader' || $_REQUEST['id']==user()->id;	N;	2014-01-07 16:27:16	84
Announcement.View	0	查看新闻公告	\N	N;	2014-01-07 16:27:16	66
Announcement.List	0	浏览新闻公告	\N	N;	2014-01-07 16:27:16	68
Backup.Index	0	管理备份恢复	\N	N;	2014-01-07 16:27:16	73
Backup.View	0	查看备份	\N	N;	2014-01-07 16:27:16	72
Bank.Update	0	修改银行	\N	N;	2014-01-07 16:27:16	2
Bank.View	0	查看银行	\N	N;	2014-01-07 16:27:16	3
Bankaccount.Create	0	添加银行账号	\N	N;	2014-01-07 16:27:16	4
Bankaccount.Delete	0	删除银行账号	\N	N;	2014-01-07 16:27:16	5
Bankaccount.Index	0	管理银行账号	\N	N;	2014-01-07 16:27:16	6
Bankaccount.Update	0	修改银行账号	\N	N;	2014-01-07 16:27:16	7
Bankaccount.View	0	查看银行账号	\N	N;	2014-01-07 16:27:16	8
Help.Index	0	管理帮助	\N	N;	2014-01-07 16:27:16	71
Help.Update	0	修改帮助	\N	N;	2014-01-07 16:27:16	70
Help.View	0	查看帮助	\N	N;	2014-01-07 16:27:16	69
Log.Index	0	操作日志	\N	N;	2014-01-07 16:27:16	46
Log.View	0	查看日志	\N	N;	2014-01-07 16:27:16	45
Memberinfo.Create	0	注册会员	\N	N;	2014-01-07 16:27:16	10
Memberinfo.Delete	0	删除会员	\N	N;	2014-01-07 16:27:16	11
Memberinfo.IndexAgent	0	管理会员(代理中心)	\N	N;	2014-01-07 16:27:16	93
Memberinfo.IndexOrder	0	接点下的会员	\N	N;	2014-01-07 16:27:16	92
Memberinfo.IndexRecommend	0	推荐的会员	\N	N;	2014-01-07 16:27:16	91
MemberinfoItem.Index	0	管理注册参数	\N	N;	2014-01-07 16:27:16	103
Membermap.OrgMapJson	0	组织结构图数据	\N	N;	2014-01-07 16:27:16	43
Membermap.Tree	0	树状图(接点关系)	\N	N;	2014-01-07 16:27:16	44
MenuNav.Index	0	管理导航菜单	\N	N;	2014-01-07 16:27:16	14
Messages.Create	0	添加邮件	\N	N;	2014-01-07 16:27:16	57
Messages.Delete	0	删除邮件	\N	N;	2014-01-07 16:27:16	64
Messages.Index	0	邮件管理	\N	N;	2014-01-07 16:27:16	65
Messages.View	0	查看邮件	\N	N;	2014-01-07 16:27:16	53
Product.Admin	0	管理产品	\N	N;	2014-01-07 16:27:16	15
Product.Create	0	添加产品	\N	N;	2014-01-07 16:27:16	16
Product.CropZoom	0	裁剪图片	\N	N;	2014-01-07 16:27:16	17
Product.Delete	0	删除产品	\N	N;	2014-01-07 16:27:16	18
Product.FileUpload	0	上传文件(添加产品)	\N	N;	2014-01-07 16:27:16	20
Product.Update	0	修改产品	\N	N;	2014-01-07 16:27:16	21
Product.View	0	查看产品	\N	N;	2014-01-07 16:27:16	23
Site.Index	0	主页	\N	N;	2014-01-07 16:27:16	25
Start.Index	0	首页	\N	N;	2014-01-07 16:27:16	90
Userinfo.Admin	0	管理管理员	\N	N;	2014-01-07 16:27:16	35
Userinfo.View	0	查看管理员	\N	N;	2014-01-07 16:27:16	36
Withdrawals.Create	0	申请提现	\N	N;	2014-01-07 16:27:16	60
Withdrawals.Index	0	管理提现	\N	N;	2014-01-07 16:27:16	62
Withdrawals.Verify	0	审核提现	\N	N;	2014-01-07 16:27:16	63
Withdrawals.View	0	查看提现小票	\N	N;	2014-01-07 16:27:16	59
Transfer.View	0	查看转账小票	\N	N;	2014-01-07 16:27:16	49
Backup.Update	0	修改备份	\N	N;	2014-01-07 16:27:16	80
MemberinfoItem.Update	0	修改注册参数	\N	N;	2014-01-07 16:27:16	104
Memberinfo.Update	0	修改会员资料	\N	N;	2014-01-07 16:27:16	111
Userinfo.Update	0	修改管理员	return user()->role=='leader' || $_REQUEST['id']==user()->id;	N;	2014-01-07 16:27:16	122
technician	2	技术员	\N	N;	2014-01-07 16:27:16	158
Agent.Create	0	添加代理中心	\N	N;	2014-01-07 16:27:16	89
Announcement.Index	0	管理新闻公告	\N	N;	2014-01-07 16:27:16	67
AwardConfig.Index	0	管理奖金配置	\N	N;	2014-01-07 16:27:16	128
Product.*	1	产品	\N	N;	2014-01-07 17:36:14	198
AwardConfig.Save	0	保存奖金配置	\N	N;	2014-01-07 16:27:16	132
AwardConfig.Search	0	查看奖金配置	\N	N;	2014-01-07 16:27:16	130
AwardDaySum.Index	0	奖金日统计	\N	N;	2014-01-07 16:27:16	116
AwardMonthSum.Index	0	奖金月统计	\N	N;	2014-01-07 16:27:16	117
AwardPeriod.Index	0	奖金流水账	\N	N;	2014-01-07 16:27:16	112
Memberinfo.UpdateMy	0	修改资料	\N	N;	2014-01-07 16:27:16	110
AwardPeriodSum.Index	0	奖金明细	\N	N;	2014-01-07 16:27:16	113
AwardTotalSum.Index	0	奖金总统计	\N	N;	2014-01-07 16:27:16	114
AwardWeekSum.Index	0	奖金周统计	\N	N;	2014-01-07 16:27:16	115
AwardYearSum.Index	0	奖金年统计	\N	N;	2014-01-07 16:27:16	145
ConfigMap.Update	0	修改网络图配置	\N	N;	2014-01-07 16:27:16	121
ConfigSms.Update	0	修改短信配置	\N	N;	2014-01-07 16:27:16	127
Finance.Index	0	管理财务账户	\N	N;	2014-01-07 16:27:16	123
Log.IndexFinance	0	财务日志	\N	N;	2014-01-07 16:27:16	124
Log.IndexLogin	0	登录日志	\N	N;	2014-01-07 16:27:16	125
MemberType.Create	0	添加会员类型	\N	N;	2014-01-07 16:27:16	106
MemberType.Delete	0	删除会员类型	\N	N;	2014-01-07 16:27:16	108
MemberType.Index	0	管理会员类型	\N	N;	2014-01-07 16:27:16	109
MemberType.Update	0	修改会员类型	\N	N;	2014-01-07 16:27:16	107
MemberType.View	0	查看会员类型	\N	N;	2014-01-07 16:27:16	105
TransferConfig.Index	0	转账配置	\N	N;	2014-01-07 16:27:16	154
Memberinfo.UpdatePassword	0	修改会员密码	\N	N;	2014-01-07 16:27:16	119
Memberinfo.UpdatePasswordMy	0	修改密码	\N	N;	2014-01-07 16:27:16	120
Memberinfo.VerifyAll	0	全部审核	\N	N;	2014-01-07 16:27:16	144
Membermap.OrgMap	0	组织结构图(接点关系)	\N	N;	2014-01-07 16:27:16	142
Membermap.OrgMapRecommend	0	组织结构图(推荐关系)	\N	N;	2014-01-07 16:27:16	146
Membermap.TreeRecommend	0	树状图(推荐关系)	\N	N;	2014-01-07 16:27:16	147
MenuNav.Create	0	添加导航菜单	\N	N;	2014-01-07 16:27:16	150
MenuNav.List	0	浏览导航菜单	\N	N;	2014-01-07 16:27:16	153
MenuNav.Update	0	修改导航菜单	\N	N;	2014-01-07 16:27:16	151
MenuNav.View	0	查看导航菜单	\N	N;	2014-01-07 16:27:16	149
Orders.Create	0	购买产品	\N	N;	2014-01-07 16:27:16	135
Orders.Delete	0	删除订单	\N	N;	2014-01-07 16:27:16	136
Orders.Index	0	管理订单	\N	N;	2014-01-07 16:27:16	137
Orders.View	0	查看订单	\N	N;	2014-01-07 16:27:16	134
Pay.Create	0	支付订单	\N	N;	2014-01-07 16:27:16	139
Pay.Pay	0	在线支付	\N	N;	2014-01-07 16:27:16	140
Privilege.AuthItem.Assign	0	分配权限	\N	N;	2014-01-07 16:27:16	162
Privilege.AuthItem.Create	0	添加权限角色	\N	N;	2014-01-07 16:27:16	160
Privilege.AuthItem.Delete	0	删除权限角色	\N	N;	2014-01-07 16:27:16	161
Privilege.AuthItem.Permissions	0	权限配置	\N	N;	2014-01-07 16:27:16	159
Privilege.AuthItem.Revoke	0	撤消权限	\N	N;	2014-01-07 16:27:16	163
Privilege.AuthItem.Update	0	修改权限角色	\N	N;	2014-01-07 16:27:16	165
Transfer.CreateSelf	0	货币兑换	\N	N;	2014-01-07 16:27:16	157
Memberinfo.*	1	会员	\N	N;	2014-01-07 17:36:14	191
AwardPeriod.*	1	奖金流水账	\N	N;	2014-01-07 17:36:14	171
ConfigBackup.*	1	备份配置	\N	N;	2014-01-07 17:36:14	181
AwardYearSum.*	1	奖金年统计	\N	N;	2014-01-07 17:36:14	175
ConfigAuth.*	1	认证配置	\N	N;	2014-01-07 17:36:14	180
AwardConfig.*	1	奖金配置	\N	N;	2014-01-07 17:36:14	168
MenuNav.*	1	导航菜单	\N	N;	2014-01-07 17:36:14	194
AwardMonthSum.*	1	奖金月统计	\N	N;	2014-01-07 17:36:14	170
MemberinfoItem.*	1	注册参数	\N	N;	2014-01-07 17:36:14	192
ConfigSms.*	1	短信配置	\N	N;	2014-01-07 17:36:14	184
Orders.*	1	订单	\N	N;	2014-01-07 17:36:14	196
Agent.*	1	代理中心	\N	N;	2014-01-07 17:36:14	166
Help.*	1	帮助	\N	N;	2014-01-07 17:36:14	188
Start.*	1	首页	\N	N;	2014-01-07 17:36:14	200
ConfigSite.*	1	站点配置	\N	N;	2014-01-07 17:36:14	183
Backup.*	1	备份恢复	\N	N;	2014-01-07 17:36:14	176
Log.*	1	日志	\N	N;	2014-01-07 17:36:14	189
Announcement.*	1	新闻公告	\N	N;	2014-01-07 17:36:14	167
Transfer.*	1	转账	\N	N;	2014-01-07 17:36:14	202
Bank.*	1	银行	\N	N;	2014-01-07 17:36:14	177
AwardDaySum.*	1	奖金日统计	\N	N;	2014-01-07 17:36:14	169
Messages.*	1	邮件	\N	N;	2014-01-07 17:36:14	195
ConfigMap.*	1	网络图谱配置	\N	N;	2014-01-07 17:36:14	182
ConfigSmtp.*	1	SMTP配置	\N	N;	2014-01-07 17:36:14	185
Membermap.*	1	网络图谱	\N	N;	2014-01-07 17:36:14	193
TransferConfig.*	1	转账配置	\N	N;	2014-01-07 17:36:14	201
Site.*	1	站点	\N	N;	2014-01-07 17:36:14	199
GroupMap.*	1	分组	\N	N;	2014-01-07 17:36:14	187
Userinfo.*	1	管理员	\N	N;	2014-01-07 17:36:14	203
AwardPeriodSum.*	1	奖金明细	\N	N;	2014-01-07 17:36:14	172
Pay.*	1	在线支付	\N	N;	2014-01-07 17:36:14	197
MemberType.*	1	会员类型	\N	N;	2014-01-07 17:36:14	190
Finance.*	1	财务账户	\N	N;	2014-01-07 17:36:14	186
MenuNav.Delete	0	删除导航菜单	\N	N;	2014-01-07 16:27:16	152
Messages.CreateAll	0	群发邮件	\N	N;	2014-01-07 16:27:16	156
Orders.Verify	0	审核订单	\N	N;	2014-01-07 16:27:16	138
Pay.ReturnPay	0	在线支付结果	\N	N;	2014-01-07 16:27:16	141
Privilege.AuthItem.Roles	0	管理权限角色	\N	N;	2014-01-07 16:27:16	164
Product.FileManager	0	文件管理(添加产品)	\N	N;	2014-01-07 16:27:16	19
Product.Upload	0	上传(添加产品)	\N	N;	2014-01-07 16:27:16	22
Withdrawals.Delete	0	删除提现申请	\N	N;	2014-01-07 16:27:16	61
AwardConfig.Config	0	奖金配置(扩展配置)	\N	N;	2014-01-07 16:27:16	129
Memberinfo.View	0	查看资料	return isset($params['nav']) && $params['nav']==true && user()->isAdmin()?false:true;	N;	2014-01-07 16:27:16	102
Charge.*	1	充值申请	\N	N;	2014-01-07 17:36:14	179
Withdrawals.*	1	提现申请	\N	N;	2014-01-07 17:36:14	204
AwardWeekSum.*	1	奖金周统计	\N	N;	2014-01-07 17:36:14	174
Bankaccount.*	1	银行账号	\N	N;	2014-01-07 17:36:14	178
AwardTotalSum.*	1	奖金总统计	\N	N;	2014-01-07 17:36:14	173
MemberUpgrade.*	1	会员升级	\N	N;	2014-01-15 15:31:14	207
MemberUpgrade.Delete	0	删除会员升级申请	\N	N;	2014-01-15 15:31:14	210
MemberUpgrade.View	0	查看会员升级	\N	N;	2014-01-15 15:31:14	208
MemberUpgrade.Verify	0	审核会员升级	\N	N;	2014-01-15 15:31:14	212
MemberUpgrade.Index	0	管理会员升级	\N	N;	2014-01-15 15:31:14	211
Ratio.*	1	拨出比趋势	\N	N;	2014-01-16 11:41:10	213
Finance.View	0	查看会员财务	\N	N;	2014-01-17 01:42:39	215
Finance.Update	0	修改会员财务	\N	N;	2014-01-17 01:42:39	216
Ratio.Index	0	拨出比趋势	\N	N;	2014-01-16 11:41:10	214
Appropriate.*	1	公司拨款	\N	N;	2014-01-17 18:08:40	217
Backup.Clean	0	清空	\N	N;	2014-01-22 16:18:52	222
Appropriate.Index	0	管理拨款	\N	N;	2014-01-17 18:08:40	220
Appropriate.View	0	查看拨款	\N	N;	2014-01-17 18:08:40	218
Appropriate.Deduct	0	公司扣款	\N	N;	2014-01-17 21:56:17	221
Appropriate.Create	0	公司拨款	\N	N;	2014-01-17 18:08:40	219
MapEdit.*	1	\N	\N	N;	2014-02-24 19:28:11	226
ConfigWithdrawals.*	1	\N	\N	N;	2014-03-01 15:20:16	236
Product.Index	0	产品浏览	\N	N;	2014-01-07 16:27:16	143
product	2	产品管理	\N	N;	2014-03-15 15:53:16	239
Job.*	1	\N	\N	N;	2014-03-16 17:48:42	240
Joblog.*	1	\N	\N	N;	2014-03-16 19:37:04	244
Supplement.*	1	\N	\N	N;	2014-04-24 22:53:30	247
Supplement.View	0	\N	\N	N;	2014-04-24 22:53:30	248
Supplement.Create	0	\N	\N	N;	2014-04-24 22:53:30	249
Supplement.Index	0	\N	\N	N;	2014-04-24 22:53:30	252
Prize.*	1	\N	\N	N;	2014-04-24 23:02:41	253
MemberUpgrade.Create	0	申请会员升级	\N	N;	2014-01-15 15:31:14	209
MemberLevel.*	1	\N	\N	N;	2014-04-30 11:19:14	260
StockTrend.*	1	\N	\N	N;	2014-06-14 05:03:10	267
AwardDaySum.Payoff	0	发放工资(日)	\N	N;	2014-07-10 18:12:54	270
AwardDaySum.SalaryDel	0	删除工资(日)	\N	N;	2014-07-10 21:54:44	271
AwardDaySum.Salary	0	日工资	\N	N;	2014-07-10 12:38:42	269
AwardMonthSum.Salary	0	月工资	\N	N;	2014-07-11 11:39:26	272
AwardMonthSum.Payoff	0	发放工资(月)	\N	N;	2014-07-11 11:39:26	274
AwardMonthSum.SalaryDel	0	删除工资(月)	\N	N;	2014-07-11 11:39:26	273
AwardWeekSum.Salary	0	周工资	\N	N;	2014-07-11 11:39:26	275
AwardWeekSum.SalaryDel	0	删除工资(周)	\N	N;	2014-07-11 11:39:26	276
AwardWeekSum.Payoff	0	发放工资(周)	\N	N;	2014-07-11 11:39:26	277
Withdrawals.AdminCreate	0	财务提现	\N	N;	2014-07-18 14:21:04	278
Memberinfo.ReVerify	0	重算奖金	\N	N;	2014-07-18 21:45:55	279
GroupMap.Create	0	B网注册	\N	N;	2014-07-27 20:43:14	280
GroupMap.View	0	查看B网会员	\N	N;	2014-07-28 01:20:36	281
Foundation.*	1	信用基金申请	\N	N;	2014-08-08 02:06:17	282
Foundation.Delete	0	册除信用基金申请	\N	N;	2014-08-08 02:06:17	286
Foundation.Verify	0	审核信用基金申请	\N	N;	2014-08-08 04:03:58	288
Foundation.Update	0	修改信用基金申请	\N	N;	2014-08-08 02:06:17	285
Foundation.View	0	查看信用基金申请	\N	N;	2014-08-08 02:06:17	283
Foundation.Index	0	管理信用基金申请	\N	N;	2014-08-08 02:06:17	287
Foundation.Create	0	添加信用基金申请	\N	N;	2014-08-08 02:06:17	284
GameCharge.Update	0	修改充值申请	\N	N;	2014-08-16 17:16:29	292
GameCharge.*	1	游戏充值	\N	N;	2014-08-16 17:16:29	289
GameCharge.View	0	查看游戏充值申请	\N	N;	2014-08-16 17:16:29	290
GameCharge.Delete	0	删除充值申请	\N	N;	2014-08-16 17:16:29	293
GameCharge.Create	0	申请游戏充值	\N	N;	2014-08-16 17:16:29	291
GameCharge.Index	0	管理游戏充值	\N	N;	2014-08-16 17:16:29	294
GameCharge.Verify	0	审核充值	\N	N;	2014-08-16 17:16:29	295
Memberinfo.AutoAccount	0	自动生成账号	\N	N;	2014-08-27 21:35:00	297
AnnouncementClass.*	1	新闻分类	\N	N;	2014-08-28 04:39:29	298
AnnouncementClass.Update	0	修改新闻分类	\N	N;	2014-08-28 04:39:29	301
AnnouncementClass.Create	0	添加新闻分类	\N	N;	2014-08-28 04:39:29	300
AnnouncementClass.Delete	0	删除新闻分类	\N	N;	2014-08-28 04:39:29	302
AnnouncementClass.View	0	查看新闻分类	\N	N;	2014-08-28 04:39:29	299
AnnouncementClass.Index	0	管理新闻分类	\N	N;	2014-08-28 04:39:29	303
Memberinfo.CleanAward	0	清空奖金	\N	N;	2014-09-04 19:40:08	304
Joblog.Index	0	定时任务日志	\N	N;	2014-03-16 19:37:04	245
MapEdit.Update	0	修改图谱	\N	N;	2014-02-24 19:28:11	232
MapEdit.View	0	查看图谱编辑	\N	N;	2014-02-24 19:28:11	227
MapEdit.SwapMap	0	交换图谱位置	\N	N;	2014-02-24 19:28:11	231
Job.Update	0	修改定时任务	\N	N;	2014-03-16 17:48:42	242
MemberLevel.Update	0	修改会员等级	\N	N;	2014-04-30 11:19:14	263
GroupMap.Map	0	分盘网络图	\N	N;	2014-02-13 13:42:15	224
Job.Index	0	管理定时任务	\N	N;	2014-03-16 17:48:42	243
MapEdit.MoveMap	0	移动图谱	\N	N;	2014-02-24 19:28:11	230
MemberLevel.Delete	0	删除会员等级	\N	N;	2014-04-30 11:19:14	264
MapEdit.AddMap	0	添加图谱	\N	N;	2014-02-24 19:28:11	229
Prize.View	0	查看奖品	\N	N;	2014-04-24 23:02:41	254
Job.Run	0	立即运行定时任务	\N	N;	2014-03-16 22:54:10	246
MemberLevel.Create	0	添加会员等级	\N	N;	2014-04-30 11:19:14	262
StockTrend.Index	0	股票趋势	\N	N;	2014-06-14 05:03:10	268
Job.View	0	查看定时任务	\N	N;	2014-03-16 17:48:42	241
Prize.Index	0	管理奖品	\N	N;	2014-04-24 23:02:41	258
MapEdit.Verify	0	审核图谱编辑	\N	N;	2014-02-24 19:28:11	235
GameCharge.GenUrl	0	充值链接	\N	N;	2014-08-16 17:27:21	296
MapEdit.DeleteMap	0	删除图谱	\N	N;	2014-02-24 19:28:11	228
ConfigWithdrawals.Index	0	提现配置	\N	N;	2014-03-01 15:20:16	237
MemberLevel.View	0	查看会员等级	\N	N;	2014-04-30 11:19:14	261
Memberinfo.Leafs	0	查看图谱中的叶子节点	\N	N;	2014-01-23 11:23:31	223
MapEdit.Index	0	管理图谱编辑	\N	N;	2014-02-24 19:28:11	234
MapEdit.Delete	0	删除图谱	\N	N;	2014-02-24 19:28:11	233
MemberLevel.Index	0	管理会员等级	\N	N;	2014-04-30 11:19:14	265
Prize.Verify	0	发放奖品	\N	N;	2014-04-27 22:53:00	259
Memberinfo.Gen	0	批量生成会员	\N	N;	2014-02-13 13:42:15	225
CapConfig.*	1	\N	\N	N;	2014-09-10 21:06:57	306
CapConfig.Delete	0	删除封顶设置	\N	N;	2014-09-10 21:06:57	311
CapConfig.Load	0	加载封顶设置	\N	N;	2014-09-10 21:06:57	309
CapConfig.Search	0	查看封顶设置	\N	N;	2014-09-10 21:06:57	308
CapConfig.Index	0	管理封顶设置	\N	N;	2014-09-10 21:06:57	307
CapConfig.Save	0	保存封顶设置	\N	N;	2014-09-10 21:06:57	310
agent	2	代理中心	\N	N;	2014-01-07 16:27:16	148
Charge.PayOn	0	执行支付	\N	N;	2014-11-12 20:51:49	313
Charge.PayReturn	0	支付返回	\N	N;	2014-11-12 20:51:49	315
Charge.Pay	0	在线支付	\N	N;	2014-11-12 20:51:49	312
Charge.PayNotify	0	支付通知	\N	N;	2014-11-12 20:51:49	314
Membermap2.OrgMapJson	0	接点图谱2数据	\N	N;	2014-11-14 18:49:23	317
Membermap2.*	1	接点图谱2	\N	N;	2014-11-14 18:49:23	316
Membermap3.*	1	\N	\N	N;	2014-11-29 21:05:17	319
Membermap3.View	0	\N	\N	N;	2014-11-29 21:05:17	320
Membermap3.Create	0	\N	\N	N;	2014-11-29 21:05:17	321
Membermap3.Update	0	\N	\N	N;	2014-11-29 21:05:17	322
Membermap3.Index	0	\N	\N	N;	2014-11-29 21:05:17	323
Membermap4.OrgMapJson	0	\N	\N	N;	2014-12-08 19:36:26	326
Membermap4.OrgMap	0	\N	\N	N;	2014-12-08 19:36:26	327
Membermap4.*	1	网络图4	\N	N;	2014-12-08 19:36:26	324
Signing.*	1	\N	\N	N;	2014-12-16 18:16:29	328
Signing.View	0	\N	\N	N;	2014-12-16 18:16:29	329
Signing.Verify	0	\N	\N	N;	2014-12-16 18:16:29	330
Signing.Refund	0	\N	\N	N;	2014-12-16 18:16:29	331
Signing.Index	0	\N	\N	N;	2014-12-16 18:16:29	332
Dup3600.*	1	\N	\N	N;	2014-12-20 22:28:25	333
Dup3600.Index	0	\N	\N	N;	2014-12-20 22:28:25	334
Orders.Send	0	发货	\N	N;	2015-04-15 19:27:56	335
Agent.Update	0	修改代理中心	\N	N;	2015-06-19 17:09:23	336
unmember	2	未审核会员	\N	N;	2015-07-08 15:18:22	337
Memberinfo.CreateShop	0	\N	\N	N;	2015-09-27 15:18:30	338
Memberinfo.IndexShop	0	\N	\N	N;	2015-09-28 14:26:47	339
Memberinfo.ViewShop	0	\N	\N	N;	2015-09-28 16:32:19	340
Memberinfo.UpdateShop	0	\N	\N	N;	2015-09-28 16:32:19	341
Memberinfo.VerifyShop	0	\N	\N	N;	2015-09-28 16:32:19	342
shop	2	加盟店	\N	N;	2015-09-28 18:10:55	343
Withdrawals.Send	0	\N	\N	N;	2015-10-20 10:35:23	344
Backup.Download	0	\N	\N	N;	2015-10-22 23:04:51	345
Backup.Upload	0	\N	\N	N;	2015-10-22 23:04:51	346
MapEdit.Remap	0	\N	\N	N;	2015-10-22 23:04:51	347
Product.SetStar	0	\N	\N	N;	2015-10-22 23:21:50	348
Membermap.GetMemberType	0	\N	\N	N;	2015-11-02 23:58:15	349
Membermap.AutoParent	0	\N	\N	N;	2015-11-02 23:58:15	350
Membermap.Create	0	\N	\N	N;	2016-08-12 20:52:13	351
Membermap.Index	0	管理B网	\N	N;	2016-08-17 23:49:27	352
Membermap.Verify	0	审核B网	\N	N;	2016-08-17 23:49:27	353
Membermap.View	0	\N	\N	N;	2016-08-18 02:24:03	354
Membermap2.Create	0	\N	\N	N;	2016-08-22 23:42:24	355
Membermap2.Copy	0	\N	\N	N;	2016-08-22 23:42:24	356
Membermap2.Verify	0	\N	\N	N;	2016-08-22 23:42:24	357
Membermap2.Index	0	\N	\N	N;	2016-08-22 23:42:24	358
Membermap2.View	0	\N	\N	N;	2016-08-22 23:42:24	359
Membermap2.OrgMap	0	A网图谱	\N	N;	2014-11-14 18:49:23	318
Membermap2.Gen	0	\N	\N	N;	2016-08-30 11:55:18	360
Membermap2.TreeRecommend	0	领车计划推荐关系树状图	\N	N;	2016-09-07 02:43:18	361
Membermap2.Tree	0	领车计划接点关系树状图	\N	N;	2016-09-07 02:43:39	362
Mmembermap.Delete	0	删除B网	\N	N;	2016-09-07 02:44:05	363
Mmembermap2.Delete	0	删除A网	\N	N;	2016-09-07 02:44:20	364
ProductClass.*	1	\N	\N	N;	2016-11-05 19:48:38	365
Orders.Add	0	\N	\N	N;	2016-11-05 19:48:38	366
Orders.DelProduct	0	\N	\N	N;	2016-11-05 19:48:38	367
ProductClass.View	0	\N	\N	N;	2016-11-05 19:48:38	368
ProductClass.Create	0	\N	\N	N;	2016-11-05 19:48:38	369
ProductClass.Update	0	\N	\N	N;	2016-11-05 19:48:38	370
ProductClass.Delete	0	\N	\N	N;	2016-11-05 19:48:38	371
ProductClass.Index	0	\N	\N	N;	2016-11-05 19:48:38	372
accountant	2	会计员	\N	N;	2014-01-07 16:27:16	37
Futou.*	1	\N	\N	N;	2017-03-29 02:50:36	373
Futou.View	0	\N	\N	N;	2017-03-29 02:50:36	374
Futou.Create	0	\N	\N	N;	2017-03-29 02:50:36	375
Futou.Delete	0	\N	\N	N;	2017-03-29 02:50:36	376
Futou.Index	0	\N	\N	N;	2017-03-29 02:50:36	377
Memberinfo.IndexAgentRecommend	0	\N	\N	N;	2018-05-05 00:40:52	378
Memberinfo.IndexAgentRecommend2	0	\N	\N	N;	2018-05-05 23:49:30	379
Memberinfo.GetLayer3	0	\N	\N	N;	2018-11-06 14:51:36	380
Orders.DelProducts	0	\N	\N	N;	2018-11-06 16:17:17	381
Memberinfo.UpdateName	0	\N	\N	N;	2018-11-06 19:11:26	382
Start.News	0	\N	\N	N;	2018-11-07 10:42:26	383
Messages.CreateSys	0	系统留言	\N	N;	2014-01-07 16:27:16	155
Memberinfo.GetName	0	\N	\N	N;	2018-11-12 16:32:38	384
Product.Short	0	\N	\N	N;	2018-11-14 11:17:49	385
Product.GetProduct	0	\N	\N	N;	2018-11-14 14:05:02	386
Orders.Print	0	\N	\N	N;	2018-11-16 16:48:20	387
Orders.Pay	0	\N	\N	N;	2018-11-17 10:59:07	388
Membermap.GetLevelCount	0	\N	\N	N;	2018-11-17 14:30:53	389
epmms	2	管理员	\N	N;	2014-01-07 16:27:16	38
Memberinfo.Team	0	\N	\N	N;	2018-12-10 18:20:43	390
AwardTotalSum.AwardSum	0	\N	\N	N;	2018-12-11 11:07:15	391
ConfigJackpot.Index	0	奖池配置信息	\N	N;	2019-01-05 03:04:12	392
JackpotRecord.Index	0	竞买奖池获奖者	\N	N;	2019-01-05 03:04:57	393
Buy.Create	0	卖出	\N	N;	2019-01-07 18:48:36	394
Buy.Index	0	卖出列表	\N	N;	2019-01-09 11:11:18	395
Buy.Delete	0	卖出删除	\N	N;	2019-01-09 12:46:02	396
Deal.Index	0	买入卖出记录	\N	N;	2019-01-09 12:47:28	397
Sale.Create	0	买入	\N	N;	2019-01-09 12:49:07	398
Deal.Upload	0	买入卖出图片	\N	N;	2019-01-09 16:29:19	399
JackpotInfo.Index	0	竞买奖池余额记录	\N	N;	2019-01-10 19:16:49	401
ConfigJackpot.Update	0	奖池配置	\N	N;	2019-01-10 19:26:37	403
Deal.Verify	0	买入卖出订单	\N	N;	2019-01-11 10:51:44	404
\.


--
-- Data for Name: epmms_authitemchild; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_authitemchild (parent, child) FROM stdin;
agent	AwardDaySum.Index
agent	AwardMonthSum.Index
agent	MemberType.View
leader	Bank.Create
leader	Bank.Delete
leader	Bank.Index
leader	Bank.Update
leader	Bank.View
leader	Memberinfo.UpdatePassword
leader	Bankaccount.Create
leader	Bankaccount.Delete
leader	Bankaccount.Index
leader	ConfigMap.Update
accountant	Bank.Update
leader	Bankaccount.View
leader	Memberinfo.Create
accountant	Memberinfo.Delete
leader	Memberinfo.Delete
accountant	Transfer.View
accountant	Transfer.Verify
accountant	Charge.Delete
accountant	Bankaccount.View
leader	Memberinfo.View
accountant	Userinfo.View
leader	MenuNav.Index
accountant	Messages.Delete
Guest	Site.Error
accountant	Site.Error
authenticated	Site.Error
leader	Site.Error
authenticated	Site.Index
Guest	Site.Login
accountant	Site.Login
authenticated	Site.Login
leader	Site.Login
Guest	Site.Logout
accountant	Site.Logout
authenticated	Site.Logout
leader	Site.Logout
accountant	Site.Page
authenticated	Site.Page
leader	Userinfo.Admin
leader	Userinfo.Create
leader	Userinfo.Delete
leader	Userinfo.Update
leader	Userinfo.UpdatePassword
leader	Userinfo.View
member	Membermap.OrgMapJson
accountant	Withdrawals.View
leader	Agent.Verify
accountant	Messages.Index
leader	Finance.Index
agent	Log.IndexFinance
leader	ConfigSite.Update
leader	Site.Page
leader	ConfigSmtp.Update
accountant	Log.IndexFinance
member	Site.Index
leader	Site.Index
auditor	Site.Index
accountant	Site.Index
agent	Site.Index
agent	Site.Logout
agent	Bank.View
agent	Bankaccount.View
agent	Site.Error
member	AwardMonthSum.Index
member	Memberinfo.UpdatePasswordMy
agent	Userinfo.Update
accountant	Bankaccount.Delete
agent	Product.CropZoom
agent	Memberinfo.View
agent	Membermap.OrgMapJson
accountant	AwardPeriodSum.Index
accountant	MemberType.View
agent	Site.Login
agent	Bankaccount.Index
accountant	Charge.View
accountant	Start.Index
agent	Site.Page
accountant	Messages.View
accountant	AwardWeekSum.Index
accountant	Memberinfo.View
accountant	AwardMonthSum.Index
accountant	Membermap.OrgMapJson
accountant	Charge.Verify
accountant	Bankaccount.Index
agent	Transfer.View
agent	Transfer.Delete
member	Charge.Create
member	Transfer.Index
agent	Transfer.Create
agent	Transfer.Index
accountant	AwardPeriod.Index
leader	Transfer.Delete
leader	Charge.Index
leader	Transfer.Index
leader	Charge.View
leader	Transfer.Verify
leader	Transfer.View
agent	Charge.Delete
agent	Charge.View
agent	Charge.Create
agent	Charge.Index
leader	Charge.Delete
leader	Charge.Verify
agent	Withdrawals.View
leader	Withdrawals.View
leader	Withdrawals.Verify
agent	Withdrawals.Create
agent	Withdrawals.Delete
leader	Withdrawals.Delete
agent	Messages.Delete
agent	Messages.View
leader	Messages.Create
leader	Messages.Delete
leader	Messages.View
leader	Messages.Index
agent	Messages.Index
leader	Announcement.Index
leader	Announcement.Create
leader	Announcement.Delete
agent	Announcement.View
leader	Announcement.View
leader	Announcement.Update
leader	Announcement.List
agent	Announcement.List
leader	Backup.Delete
leader	Backup.Create
leader	Backup.View
leader	Backup.Index
leader	Backup.Update
leader	Backup.Restore
leader	ConfigBackup.Update
leader	Log.IndexLogin
agent	Start.Index
leader	Start.Index
leader	Log.IndexFinance
leader	Memberinfo.Index
member	Site.Logout
member	Transfer.View
member	Charge.Delete
member	Charge.View
member	Start.Index
member	Site.Error
member	Messages.Delete
member	Messages.View
member	Memberinfo.View
member	Withdrawals.View
member	Charge.Index
member	Withdrawals.Create
leader	AwardDaySum.Index
leader	AwardMonthSum.Index
member	Site.Login
member	Messages.Index
member	Site.Page
agent	Memberinfo.UpdatePasswordMy
accountant	Bankaccount.Update
leader	ConfigAuth.Update
leader	Agent.Delete
leader	Agent.Create
leader	Log.Index
leader	Memberinfo.Update
leader	MemberinfoItem.Update
leader	MemberinfoItem.Index
leader	MemberType.Delete
leader	MemberType.Update
leader	MemberType.View
leader	MemberType.Index
leader	MemberType.Create
accountant	Memberinfo.Create
leader	AwardPeriodSum.Index
agent	AwardTotalSum.Index
leader	AwardTotalSum.Index
member	AwardTotalSum.Index
agent	AwardWeekSum.Index
leader	AwardWeekSum.Index
agent	AwardPeriod.Index
leader	AwardPeriod.Index
accountant	Bankaccount.Create
auditor	Start.Index
accountant	Bank.Delete
accountant	AwardTotalSum.Index
accountant	Bank.Create
accountant	Transfer.Index
accountant	Charge.Index
leader	AwardConfig.Index
leader	AwardConfig.Config
leader	AwardConfig.Save
leader	AwardConfig.Search
leader	Withdrawals.Index
member	Withdrawals.Index
agent	Withdrawals.Index
leader	Membermap.OrgMapJson
member	AwardYearSum.Index
leader	AwardYearSum.Index
agent	AwardYearSum.Index
member	Membermap.TreeRecommend
leader	Membermap.TreeRecommend
agent	Membermap.TreeRecommend
leader	Memberinfo.VerifyAll
leader	Memberinfo.Verify
leader	Agent.Index
leader	MenuNav.Create
leader	MenuNav.Update
leader	MenuNav.Delete
leader	MenuNav.List
leader	MenuNav.View
accountant	MenuNav.List
auditor	MenuNav.List
authenticated	MenuNav.List
member	MenuNav.List
agent	MenuNav.List
leader	TransferConfig.Index
leader	Bankaccount.Update
member	Transfer.Create
leader	Log.View
agent	Messages.CreateSys
leader	Privilege.AuthItem.Permissions
leader	Privilege.AuthItem.Create
leader	Privilege.AuthItem.Delete
leader	Privilege.AuthItem.Assign
leader	Privilege.AuthItem.Revoke
leader	Privilege.AuthItem.Roles
leader	Agent.View
auditor	Bankaccount.View
technician	Site.Index
technician	Start.Index
technician	Backup.Create
technician	Backup.Delete
technician	Backup.Index
technician	Backup.Restore
technician	Backup.Update
technician	Backup.View
technician	Bank.Create
technician	Bank.Delete
technician	Bank.Index
technician	Bank.Update
technician	Bank.View
technician	Bankaccount.Create
technician	Bankaccount.Delete
technician	Bankaccount.Index
technician	Bankaccount.Update
technician	Bankaccount.View
technician	ConfigAuth.Update
technician	ConfigBackup.Update
technician	ConfigMap.Update
technician	ConfigSite.Update
technician	ConfigSms.Update
technician	ConfigSmtp.Update
technician	Log.Index
technician	Log.IndexFinance
technician	Log.IndexLogin
technician	Log.View
technician	MemberType.Create
technician	MemberType.Delete
technician	MemberType.Index
technician	MemberType.Update
technician	MemberType.View
technician	Memberinfo.Clean
technician	MemberinfoItem.Index
technician	MemberinfoItem.Update
technician	MenuNav.Create
technician	MenuNav.Delete
technician	MenuNav.Index
technician	MenuNav.List
technician	MenuNav.Update
technician	Privilege.AuthItem.Assign
technician	Privilege.AuthItem.Create
technician	Privilege.AuthItem.Delete
technician	Privilege.AuthItem.Permissions
technician	Privilege.AuthItem.Revoke
technician	Privilege.AuthItem.Roles
technician	Privilege.AuthItem.Update
technician	TransferConfig.Index
technician	Userinfo.Admin
technician	Userinfo.Create
technician	Userinfo.Delete
technician	Userinfo.Update
technician	Userinfo.UpdatePassword
technician	Userinfo.View
technician	authenticated
agent	authenticated
accountant	authenticated
auditor	authenticated
leader	authenticated
member	authenticated
leader	MemberUpgrade.Delete
member	MemberUpgrade.Delete
member	MemberUpgrade.Create
agent	MemberUpgrade.Delete
agent	MemberUpgrade.Create
leader	Ratio.Index
leader	Finance.View
agent	Finance.View
leader	Appropriate.Index
leader	Appropriate.Create
leader	Appropriate.View
leader	Appropriate.Deduct
leader	Backup.Clean
technician	Memberinfo.Leafs
agent	Memberinfo.Leafs
leader	Memberinfo.Leafs
auditor	Memberinfo.Leafs
accountant	Memberinfo.Leafs
leader	MapEdit.Delete
leader	MapEdit.Update
leader	MapEdit.View
leader	MapEdit.AddMap
leader	MapEdit.SwapMap
leader	MapEdit.Index
leader	MapEdit.MoveMap
leader	MapEdit.DeleteMap
leader	ConfigWithdrawals.Index
product	authenticated
product	Announcement.List
product	Announcement.View
product	Messages.View
leader	Job.Update
leader	Job.View
leader	Privilege.AuthItem.Update
leader	MapEdit.Verify
leader	Prize.Index
leader	Prize.View
agent	Prize.Index
agent	Prize.View
accountant	Prize.Index
accountant	Prize.View
agent	Supplement.Create
member	Supplement.Create
agent	Supplement.Index
leader	Supplement.Index
member	Supplement.Index
agent	Supplement.View
leader	Supplement.View
member	Supplement.View
accountant	Supplement.View
accountant	Supplement.Index
leader	Prize.Verify
accountant	Prize.Verify
leader	MemberUpgrade.Index
leader	MemberUpgrade.Verify
member	MemberUpgrade.Index
leader	MemberUpgrade.View
member	MemberUpgrade.View
agent	MemberUpgrade.View
agent	MemberUpgrade.Index
agent	MemberUpgrade.Verify
leader	MemberLevel.Delete
leader	MemberLevel.Index
member	Orders.Create
agent	Orders.Create
agent	Orders.Delete
member	Orders.Delete
agent	Orders.Index
member	Orders.Index
leader	Orders.Index
product	Orders.Index
leader	Orders.Verify
product	Orders.Verify
agent	Orders.View
leader	Orders.View
member	Orders.View
product	Orders.View
agent	Pay.Create
member	Pay.Create
agent	Pay.Pay
member	Pay.Pay
agent	Pay.ReturnPay
member	Pay.ReturnPay
leader	Product.Admin
product	Product.Admin
leader	Product.Create
leader	Product.CropZoom
product	Product.CropZoom
leader	Product.Delete
product	Product.Delete
product	Product.FileManager
leader	Product.FileManager
leader	Product.FileUpload
product	Product.FileUpload
product	Product.Create
agent	Product.Index
leader	Product.Index
product	Product.Index
leader	Product.Update
product	Product.Update
leader	Product.Upload
product	Product.Upload
agent	Product.View
leader	Product.View
product	Product.View
agent	Memberinfo.Verify
leader	AwardDaySum.Salary
leader	AwardDaySum.Payoff
accountant	AwardDaySum.Payoff
leader	AwardDaySum.SalaryDel
leader	AwardWeekSum.Salary
accountant	AwardWeekSum.Salary
leader	AwardMonthSum.Salary
accountant	AwardMonthSum.Salary
leader	AwardMonthSum.Payoff
accountant	AwardMonthSum.Payoff
leader	AwardWeekSum.Payoff
leader	AwardWeekSum.SalaryDel
accountant	AwardMonthSum.SalaryDel
leader	AwardMonthSum.SalaryDel
leader	Withdrawals.AdminCreate
accountant	Withdrawals.AdminCreate
member	GameCharge.View
leader	AnnouncementClass.Create
leader	AnnouncementClass.Update
leader	AnnouncementClass.Delete
leader	AnnouncementClass.View
leader	AnnouncementClass.Index
leader	CapConfig.Load
leader	CapConfig.Delete
leader	CapConfig.Index
leader	CapConfig.Search
leader	CapConfig.Save
Guest	Charge.PayReturn
authenticated	Charge.PayReturn
Guest	Charge.PayNotify
authenticated	Charge.PayNotify
agent	Charge.PayOn
member	Charge.PayOn
member	Membermap3.View
leader	Membermap3.View
auditor	Membermap3.View
accountant	Membermap3.View
agent	Membermap3.View
member	Membermap4.OrgMapJson
leader	Membermap4.OrgMapJson
auditor	Membermap4.OrgMapJson
accountant	Membermap4.OrgMapJson
agent	Membermap4.OrgMapJson
accountant	Membermap2.OrgMapJson
agent	Membermap2.OrgMapJson
auditor	Membermap2.OrgMapJson
epmms	Membermap2.OrgMapJson
leader	Membermap2.OrgMapJson
member	Membermap2.OrgMapJson
leader	Signing.Verify
agent	Signing.Verify
accountant	Signing.Verify
member	Signing.View
leader	Signing.View
accountant	Signing.View
agent	Signing.View
leader	Signing.Refund
accountant	Signing.Refund
agent	Signing.Refund
leader	Orders.Send
product	Orders.Send
auditor	Membermap.TreeRecommend
epmms	Membermap.TreeRecommend
auditor	Membermap.OrgMapJson
accountant	Membermap.OrgMap
agent	Membermap.OrgMap
auditor	Membermap.OrgMap
epmms	Membermap.OrgMap
member	Membermap.OrgMap
technician	Membermap.OrgMap
accountant	Membermap.TreeRecommend
leader	Membermap.OrgMap
unmember	Announcement.View
unmember	Announcement.List
unmember	Memberinfo.Create
unmember	Memberinfo.UpdateMy
unmember	Memberinfo.UpdatePasswordMy
unmember	Memberinfo.View
unmember	MenuNav.List
unmember	Site.Index
unmember	Site.Page
accountant	Appropriate.Deduct
accountant	Appropriate.Create
shop	Site.Index
shop	Transfer.View
shop	Bank.View
shop	GameCharge.Update
shop	Site.Logout
shop	GameCharge.Delete
shop	Start.Index
shop	Site.Error
shop	Charge.Create
shop	Log.IndexFinance
shop	Messages.CreateSys
shop	Memberinfo.UpdatePasswordMy
shop	MenuNav.List
shop	Announcement.View
shop	Site.Page
shop	Withdrawals.Delete
shop	Transfer.Create
shop	Announcement.List
shop	Transfer.Index
shop	Charge.Index
leader	Withdrawals.Send
accountant	Withdrawals.Send
leader	Backup.Upload
leader	Backup.Download
leader	MapEdit.Remap
member	Product.SetStar
agent	Product.SetStar
member	Membermap.AutoParent
leader	Membermap.AutoParent
agent	Membermap.AutoParent
agent	AwardPeriodSum.Index
leader	Membermap.OrgMapRecommend
member	Membermap.OrgMapRecommend
agent	Membermap.OrgMapRecommend
leader	Charge.Create
leader	Charge.PayOn
leader	Membermap.Tree
member	Product.Index
member	Product.View
accountant	Membermap2.OrgMap
auditor	Membermap2.OrgMap
leader	Membermap2.OrgMap
member	Membermap2.OrgMap
agent	Membermap2.OrgMap
epmms	Membermap2.OrgMap
agent	Membermap.Create
leader	Membermap.Index
leader	Membermap.Verify
agent	Membermap.Verify
agent	Membermap.Index
leader	Membermap.Create
leader	Membermap.View
agent	Membermap.View
member	Membermap2.Create
agent	Membermap2.Create
member	Membermap2.View
leader	Membermap2.View
agent	Membermap2.View
member	Membermap2.Verify
accountant	Membermap2.Verify
member	Membermap2.Copy
agent	Membermap2.Copy
member	Membermap2.Index
agent	Membermap2.Index
member	Membermap4.OrgMap
leader	Membermap4.OrgMap
agent	Membermap4.OrgMap
auditor	Membermap4.OrgMap
accountant	Membermap4.OrgMap
leader	Membermap2.Index
leader	Membermap2.Create
member	Membermap.Create
leader	Membermap2.Verify
agent	Membermap2.Verify
member	Membermap.Index
leader	Membermap2.Gen
member	Prize.Index
member	Prize.View
accountant	Finance.View
accountant	Memberinfo.Verify
accountant	Membermap.Index
accountant	Membermap.Verify
accountant	MemberUpgrade.Index
accountant	MemberUpgrade.Verify
accountant	MemberUpgrade.View
accountant	Withdrawals.Index
accountant	Withdrawals.Verify
accountant	AnnouncementClass.Update
accountant	AnnouncementClass.View
accountant	Announcement.Delete
accountant	Announcement.Index
accountant	Announcement.Create
accountant	Announcement.Update
accountant	Appropriate.View
accountant	Appropriate.Index
accountant	Membermap.OrgMapRecommend
accountant	Membermap.Tree
accountant	Memberinfo.Index
accountant	Membermap2.Create
accountant	Membermap2.Index
accountant	Membermap2.View
accountant	Membermap.Create
accountant	Membermap.View
accountant	Withdrawals.Delete
member	Mmembermap2.Delete
leader	Mmembermap2.Delete
agent	Mmembermap2.Delete
member	Mmembermap.Delete
leader	Mmembermap.Delete
agent	Mmembermap.Delete
member	Membermap2.TreeRecommend
leader	Membermap2.TreeRecommend
accountant	Membermap2.TreeRecommend
agent	Membermap2.TreeRecommend
member	Orders.Add
agent	Orders.Add
member	Orders.DelProduct
agent	Orders.DelProduct
leader	ProductClass.Update
leader	ProductClass.Create
leader	ProductClass.View
leader	ProductClass.Index
leader	ProductClass.Delete
leader	Finance.Update
member	Announcement.List
member	Announcement.View
member	MemberUpgrade.Verify
member	MemberType.View
member	AwardPeriod.Index
accountant	AwardDaySum.Salary
member	AwardDaySum.Index
accountant	Ratio.Index
member	AwardPeriodSum.Index
member	Futou.Delete
member	Futou.View
member	Futou.Create
member	Futou.Index
leader	Futou.Index
agent	Futou.Delete
agent	Futou.View
agent	Futou.Create
agent	Futou.Index
leader	Withdrawals.Create
leader	Orders.Delete
leader	Futou.View
leader	Futou.Delete
leader	GameCharge.Verify
leader	Joblog.Index
member	Memberinfo.UpdateMy
agent	Memberinfo.UpdateMy
leader	MemberLevel.Update
leader	MemberLevel.View
leader	Agent.Update
leader	Job.Run
agent	Memberinfo.Create
agent	Memberinfo.IndexAgent
leader	Memberinfo.Clean
leader	Memberinfo.CleanAward
leader	Memberinfo.AutoAccount
leader	Memberinfo.Gen
leader	Memberinfo.ReVerify
member	Memberinfo.Create
member	Memberinfo.Verify
member	Memberinfo.IndexAgent
member	MemberType.Index
agent	MemberType.Index
member	Memberinfo.IndexAgentRecommend
agent	Memberinfo.IndexAgentRecommend
member	Memberinfo.IndexAgentRecommend2
agent	Memberinfo.IndexAgentRecommend2
member	Log.IndexFinance
member	Finance.Index
agent	Finance.Index
member	Bank.Index
agent	Bank.Index
member	Transfer.CreateSelf
agent	Transfer.CreateSelf
Guest	Memberinfo.Create
agent	Agent.View
member	Agent.Register
agent	Agent.Register
agent	ProductClass.Index
member	ProductClass.Index
agent	Orders.Verify
agent	Memberinfo.GetLayer3
member	Memberinfo.GetLayer3
agent	Orders.DelProducts
member	Orders.DelProducts
agent	Memberinfo.UpdateName
member	Memberinfo.UpdateName
Guest	Announcement.View
Guest	Announcement.List
Guest	AnnouncementClass.View
Guest	Product.Index
Guest	Product.View
agent	Start.News
Guest	ProductClass.Index
Guest	ProductClass.View
Guest	MemberType.Index
member	Messages.CreateSys
agent	Messages.Create
member	Messages.Create
accountant	Messages.Create
member	Membermap.View
Guest	Memberinfo.GetName
member	Memberinfo.GetName
agent	Memberinfo.GetName
member	Product.Short
agent	Product.GetProduct
member	Product.GetProduct
Guest	Product.GetProduct
agent	Product.Short
accountant	Product.Short
leader	Product.Short
leader	Orders.Print
member	Orders.Print
agent	Orders.Print
leader	Orders.Pay
member	Orders.Pay
agent	Orders.Pay
member	ProductClass.Create
agent	ProductClass.Create
agent	Membermap.GetLevelCount
leader	Membermap.GetLevelCount
member	Membermap.GetLevelCount
agent	Memberinfo.Team
member	Memberinfo.Team
leader	Memberinfo.Team
Guest	Memberinfo.Team
agent	AwardTotalSum.AwardSum
leader	AwardTotalSum.AwardSum
member	AwardTotalSum.AwardSum
member	Agent.View
agent	Memberinfo.IndexRecommend
member	Memberinfo.IndexRecommend
agent	Buy.Create
leader	Buy.Create
member	Buy.Create
agent	Buy.Index
leader	Buy.Index
member	Buy.Index
agent	Buy.Delete
leader	Buy.Delete
member	Buy.Delete
agent	Deal.Index
leader	Deal.Index
member	Deal.Index
agent	Sale.Create
leader	Sale.Create
member	Sale.Create
agent	Deal.Upload
leader	Deal.Upload
member	Deal.Upload
member	JackpotInfo.Index
leader	JackpotInfo.Index
agent	JackpotInfo.Index
member	JackpotRecord.Index
leader	JackpotRecord.Index
agent	JackpotRecord.Index
member	ConfigJackpot.Index
leader	ConfigJackpot.Index
agent	ConfigJackpot.Index
leader	ConfigJackpot.Update
agent	Deal.Verify
leader	Deal.Verify
member	Deal.Verify
\.


--
-- Data for Name: epmms_award_config; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config (award_config_id, award_config_type_id, award_config_currency, award_config_is_percent, award_config_add_date, award_config_order) FROM stdin;
169	614	20.0000	0	2018-11-17 22:20:36	\N
170	613	-20.0000	1	2018-12-12 15:14:39	\N
171	351	5.0000	0	2019-01-07 19:35:47	\N
\.


--
-- Data for Name: epmms_award_config_agent; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_agent (award_config_id, award_config_agent, award_config_currency) FROM stdin;
1	2	0.02
2	3	0.03
\.


--
-- Data for Name: epmms_award_config_aixinjijin; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_aixinjijin (award_config_id, award_config_award_total, award_config_currency) FROM stdin;
1	[5000,10000)	-0.03
2	[10000,)	-0.05
\.


--
-- Data for Name: epmms_award_config_all_fenhong; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_all_fenhong (config_id, member_type, award_value) FROM stdin;
1	1	0.07
3	2	0.06
4	3	0.05
\.


--
-- Data for Name: epmms_award_config_award_student; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_award_student (award_config_id, award_config_recommend, award_config_layer, award_config_condition, award_config_currency, award_config_is_condition) FROM stdin;
2	[0,1)	[1,11)	\N	20.00	\N
3	[1,2)	[1,3)	\N	20.00	\N
4	[1,2)	[3,10)	[1,3)	20.00	f
5	[1,2)	[3,10)	[1,3)	60.00	t
6	[2,3)	[1,3)	\N	20.00	\N
8	[2,3)	[3,10)	[1,3)	60.00	t
9	[2,3)	[10,16)	[1,3)	65.00	t
10	[2,3)	[3,16)	[1,3)	20.00	f
11	[3,4)	[1,3)	\N	20.00	\N
12	[3,4)	[3,16)	[1,3)	20.00	f
13	[3,4)	[3,10)	[1,3)	60.00	t
14	[3,4)	[10,16)	[1,3)	65.00	t
15	[5,)	[1,4)	\N	20.00	\N
16	[5,)	[4,16)	[1,4)	20.00	f
17	[5,)	[4,10)	[1,4)	80.00	t
19	[5,)	[10,16)	[1,3)	80.00	t
20	[4,5)	[1,3)	\N	20.00	\N
21	[4,5)	[3,16)	[1,3)	20.00	f
22	[4,5)	[3,10)	[1,3)	60.00	t
23	[4,5)	[10,16)	[1,3)	65.00	t
\.


--
-- Data for Name: epmms_award_config_bonus; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_bonus (award_config_id, award_config_recommend_count, award_config_recommend_layer, award_config_currency) FROM stdin;
1	[3,6)	[1,6)	0.001
2	[6,9)	[1,6)	0.003
6	[9,)	[11,21)	0.001
3	[6,9)	[6,10)	0.001
5	[9,)	[6,10)	0.003
4	[9,)	[1,5)	0.005
\.


--
-- Data for Name: epmms_award_config_chuangye; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_chuangye (award_config_id, award_config_layer, award_config_currency) FROM stdin;
1	1	0.10
4	3	0.05
3	2	0.08
\.


--
-- Data for Name: epmms_award_config_corp_fenhong; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_corp_fenhong (award_config_id, award_config_award_currency, award_config_level) FROM stdin;
3	0.01	1
4	0.03	2
1	0.04	3
2	0.05	4
\.


--
-- Data for Name: epmms_award_config_day_fenhong; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_day_fenhong (award_config_id, award_membertype, award_currency) FROM stdin;
1	1	1.00
2	2	5.00
3	3	10.00
4	4	20.00
5	5	40.00
\.


--
-- Data for Name: epmms_award_config_dif; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_dif (award_config_id, director_level, dif_award, equal_award) FROM stdin;
3	2	0.15	0.00
4	3	0.20	0.00
5	4	0.25	0.00
2	1	0.12	0.00
1	1	0.05	0.00
\.


--
-- Data for Name: epmms_award_config_dot; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_dot (award_config_id, member_type, recommend_count, recommend_layer, award_money) FROM stdin;
1	1	[0,1)	5	300.00
4	3	[0,1)	5	2100.00
2	2	[0,1)	5	900.00
14	1	[1,2)	8	300.00
\.


--
-- Data for Name: epmms_award_config_dot_fuwu; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_dot_fuwu (award_config_id, award_config_recommend, award_config_layer, award_config_currency) FROM stdin;
1	[1,3)	[1,2)	0.10
2	[3,5)	[1,3)	0.10
3	[5,)	[1,4)	0.10
\.


--
-- Data for Name: epmms_award_config_dot_layer; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_dot_layer (award_config_id, award_config_layer, award_config_currency) FROM stdin;
1	8	2.00
2	8	10.00
\.


--
-- Data for Name: epmms_award_config_dot_matrix; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_dot_matrix (award_config_id, award_config_award_member, award_config_new_member, award_config_layer, award_config_currency) FROM stdin;
1	1	1	10	10.00
2	1	2	10	10.00
3	1	3	10	10.00
4	1	4	10	10.00
5	1	5	10	10.00
6	1	6	10	10.00
7	2	1	10	10.00
9	2	3	10	20.00
8	2	2	10	20.00
10	2	4	10	20.00
11	2	5	10	20.00
12	2	6	10	20.00
13	3	1	10	10.00
14	3	2	10	20.00
15	3	3	10	30.00
16	3	4	10	30.00
17	3	5	10	30.00
18	3	6	10	30.00
19	4	1	10	10.00
20	4	2	10	20.00
21	4	3	10	30.00
22	4	4	10	50.00
23	4	5	10	50.00
24	4	6	10	50.00
25	5	1	10	10.00
26	5	2	10	20.00
27	5	3	10	30.00
28	5	4	10	50.00
29	5	5	10	80.00
30	5	6	10	80.00
31	6	1	10	10.00
32	6	2	10	20.00
33	6	3	10	30.00
34	6	4	10	50.00
35	6	5	10	80.00
36	6	6	10	150.00
\.


--
-- Data for Name: epmms_award_config_dot_member; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_dot_member (award_config_id, award_config_member, award_config_layer, award_config_currency) FROM stdin;
1	1	[1,8)	15.00
2	2	[1,11)	20.00
3	3	[1,13)	25.00
4	4	[1,16)	30.00
\.


--
-- Data for Name: epmms_award_config_down; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_down (award_config_id, award_config_layer, award_config_award_member, award_config_currency) FROM stdin;
1	1	3	0.05
2	1	4	0.15
3	1	5	0.30
4	1	6	0.40
\.


--
-- Data for Name: epmms_award_config_dup_dot; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_dup_dot (award_config_id, recommend_count, award_layer, award_money) FROM stdin;
1	[0,1)	5	100.00
2	[1,2)	8	100.00
3	[2,3)	10	100.00
4	[3,)	12	100.00
\.


--
-- Data for Name: epmms_award_config_foundation; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_foundation (award_config_id, award_config_foundation_money, award_config_founcation_score, award_config_member) FROM stdin;
3	0.00	1.00	1
1	900.00	3.00	2
2	1800.00	6.00	3
\.


--
-- Data for Name: epmms_award_config_gl; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_gl (award_config_id, award_config_layer, award_config_currency, award_config_member) FROM stdin;
1	1	0.10	1
2	1	0.10	2
3	2	0.10	2
4	1	0.10	3
5	2	0.10	3
6	3	0.20	3
7	1	0.10	4
8	2	0.10	4
9	3	0.20	4
10	4	0.40	4
\.


--
-- Data for Name: epmms_award_config_gljt; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_gljt (award_config_id, award_config_member_type, award_config_currency) FROM stdin;
1	1	0.05
2	2	0.08
3	3	0.10
\.


--
-- Data for Name: epmms_award_config_gongpai; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_gongpai (award_config_id, award_config_new_member, award_config_currency) FROM stdin;
1	1	60.00
2	2	180.00
\.


--
-- Data for Name: epmms_award_config_group; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_group (award_config_id, award_config_membertype, award_config_layer, award_config_currency) FROM stdin;
1	1	4	10.00
2	2	5	10.00
3	3	6	10.00
4	4	7	10.00
\.


--
-- Data for Name: epmms_award_config_group7; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_group7 (award_config_id, award_config_membertype, award_config_currency) FROM stdin;
1	2	0.10
2	3	0.10
3	4	0.10
\.


--
-- Data for Name: epmms_award_config_guanli; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_guanli (award_config_id, award_config_new_member, award_config_award_member, award_config_currency) FROM stdin;
1	1	1	3000.00
2	1	2	3000.00
3	2	1	3000.00
4	2	2	9000.00
\.


--
-- Data for Name: epmms_award_config_guanli_upgrade; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_guanli_upgrade (award_config_id, award_config_level, award_config_number, award_config_membertype, award_config_memberlevel, award_config_income, award_config_currency) FROM stdin;
1	1	3	3	\N	50000.00	0.12
2	2	3	\N	1	150000.00	0.15
3	3	3	\N	2	500000.00	0.20
4	4	3	\N	3	1500000.00	0.25
\.


--
-- Data for Name: epmms_award_config_huikui; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_huikui (award_config_id, award_config_layer, award_config_level, award_config_currency) FROM stdin;
1	1	1	1000.00
2	2	2	1000.00
3	3	3	1000.00
4	4	4	1000.00
5	5	5	1000.00
6	6	6	1000.00
7	7	7	1000.00
8	8	8	1000.00
9	9	9	1000.00
10	10	10	1000.00
\.


--
-- Data for Name: epmms_award_config_layer; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_layer (award_config_id, award_config_layer, award_config_award_currency, award_config_type) FROM stdin;
1	1	0.20	1
2	2	0.60	1
3	1	0.15	2
4	2	0.55	2
5	1	0.10	3
6	2	0.50	3
7	1	0.10	4
8	2	0.50	4
\.


--
-- Data for Name: epmms_award_config_layer_dot; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_layer_dot (award_config_id, award_config_layer, award_config_recommend_number, award_config_currency) FROM stdin;
1	1	[1,)	60.00
2	2	[1,)	60.00
3	3	[1,)	60.00
4	5	[1,)	60.00
5	4	[1,)	60.00
6	6	[2,)	90.00
7	7	[2,)	90.00
8	8	[2,)	90.00
9	9	[2,)	90.00
10	10	[2,)	90.00
11	11	[3,)	120.00
12	12	[3,)	120.00
13	13	[5,)	180.00
14	14	[5,)	180.00
15	15	[5,)	180.00
\.


--
-- Data for Name: epmms_award_config_layer_full; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_layer_full (award_config_id, award_config_layer, award_config_currency, award_config_count, award_config_recommend_number, award_config_type) FROM stdin;
1	1	1500.00	2	1	81
2	2	4500.00	4	0	84
\.


--
-- Data for Name: epmms_award_config_layer_recommend_dot; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_layer_recommend_dot (award_config_id, award_recommend_count, award_layer, award_currency) FROM stdin;
2	[0,1)	[1,11)	100.00
3	[1,2)	[1,13)	100.00
4	[2,)	[1,16)	100.00
\.


--
-- Data for Name: epmms_award_config_leader_down; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_leader_down (award_config_id, award_config_member, award_config_layer, award_config_currency) FROM stdin;
2	2	[1,6)	0.05
1	1	[1,4)	0.01
\.


--
-- Data for Name: epmms_award_config_lingdao; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_lingdao (award_config_id, award_config_new_member, award_config_currency) FROM stdin;
1	1	300.00
2	2	900.00
\.


--
-- Data for Name: epmms_award_config_org_down; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_org_down (award_config_id, recommend_count, award_layer, award_money) FROM stdin;
6	[5,2147483647)	1	0.05
7	[5,2147483647)	2	0.04
8	[5,2147483647)	3	0.03
9	[5,2147483647)	4	0.02
10	[5,2147483647)	5	0.01
11	[5,2147483647)	6	0.01
12	[5,2147483647)	7	0.01
13	[5,2147483647)	8	0.01
14	[5,2147483647)	9	0.01
15	[4,5)	1	0.05
16	[4,5)	2	0.04
17	[4,5)	3	0.03
18	[4,5)	4	0.02
19	[3,4)	1	0.05
20	[3,4)	2	0.04
21	[3,4)	3	0.03
22	[2,3)	2	0.04
23	[2,3)	3	0.04
24	[1,2)	2	0.05
\.


--
-- Data for Name: epmms_award_config_org_up_down; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_org_up_down (award_config_id, award_config_layer, award_config_membertype, award_config_currency) FROM stdin;
1	1	1	0.02
2	1	2	0.03
3	1	3	0.05
10	2	2	0.03
4	2	1	0.03
11	2	3	0.05
12	3	1	0.02
13	3	2	0.03
14	3	3	0.05
\.


--
-- Data for Name: epmms_award_config_out; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_out (award_config_id, award_config_recommend, award_config_award) FROM stdin;
1	0	1000.00
2	1	2000.00
3	2	3000.00
4	3	5000.00
5	4	10000.00
6	5	20000.00
7	6	30000.00
8	7	50000.00
9	8	60000.00
10	9	80000.00
\.


--
-- Data for Name: epmms_award_config_pair_member; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_pair_member (award_config_id, award_config_membertype, award_config_currency, award_config_diff) FROM stdin;
1	1	0.10	4000.00
2	2	0.10	12000.00
\.


--
-- Data for Name: epmms_award_config_peiyu_upgrade; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_peiyu_upgrade (award_config_id, award_config_number, award_config_member_level, award_config_upgrade) FROM stdin;
1	10	\N	1
2	5	1	2
3	5	2	3
4	5	3	4
\.


--
-- Data for Name: epmms_award_config_prize; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_prize (award_config_id, award_config_name, award_config_total) FROM stdin;
1	笔记本一台	100000.00
2	10万轿车一辆	500000.00
3	宝马轿车一辆	1000000.00
4	住房一套	2000000.00
\.


--
-- Data for Name: epmms_award_config_recommend; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_recommend (award_config_id, award_config_membertype, award_config_currency) FROM stdin;
2	9	20.00
1	1	10.00
\.


--
-- Data for Name: epmms_award_config_recommend_layer; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_recommend_layer (award_config_id, award_config_recommend_layer, award_config_currency) FROM stdin;
2	[1,4)	270.00
3	[4,5)	120.00
4	[5,15)	50.00
5	[15,25)	10.00
6	[26,31)	5.00
\.


--
-- Data for Name: epmms_award_config_recommend_layer_dot; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_recommend_layer_dot (award_config_id, award_config_new_member, award_config_layer, award_config_recommend, award_config_currency) FROM stdin;
1	1	[1,6)	[0,2)	10.00
2	2	[1,6)	[0,2)	30.00
3	3	[1,6)	[0,2)	60.00
4	1	[1,6)	[2,3)	10.00
5	2	[1,6)	[2,3)	30.00
6	3	[1,6)	[2,3)	60.00
7	1	[6,11)	[2,3)	5.00
8	2	[6,11)	[2,3)	15.00
9	3	[6,11)	[2,3)	30.00
10	1	[1,6)	[3,4)	10.00
11	2	[1,6)	[3,4)	30.00
12	3	[1,6)	[3,4)	60.00
13	1	[6,11)	[3,4)	5.00
14	2	[6,11)	[3,4)	15.00
15	3	[6,11)	[3,4)	30.00
16	1	[11,21)	[3,4)	10.00
17	2	[11,21)	[3,4)	30.00
18	3	[11,21)	[3,4)	60.00
19	1	[1,6)	[4,)	10.00
20	2	[1,6)	[4,)	30.00
21	3	[1,6)	[4,)	60.00
22	1	[6,11)	[4,)	5.00
23	2	[6,11)	[4,)	15.00
24	3	[6,11)	[4,)	30.00
25	1	[11,21)	[4,)	10.00
26	2	[11,21)	[4,)	30.00
27	3	[11,21)	[4,)	60.00
28	1	[21,31)	[4,)	5.00
29	2	[21,31)	[4,)	15.00
30	3	[21,31)	[4,)	30.00
\.


--
-- Data for Name: epmms_award_config_recommend_level; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_recommend_level (award_config_id, award_config_level, award_config_recommend_layer, award_config_currency) FROM stdin;
1	1	1	0.30
2	2	1	0.30
3	2	2	0.10
4	3	1	0.30
5	3	2	0.10
6	3	3	0.05
7	4	1	0.30
8	4	2	0.10
9	4	3	0.05
\.


--
-- Data for Name: epmms_award_config_share; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_share (award_config_id, award_config_member_count, award_config_currency) FROM stdin;
1	[1,9)	10.00
2	[9,)	20.00
\.


--
-- Data for Name: epmms_award_config_stock; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_stock (award_config_id, award_config_membertype, award_config_currency) FROM stdin;
1	1	100.00
2	2	500.00
3	3	1000.00
4	4	2000.00
5	5	4000.00
\.


--
-- Data for Name: epmms_award_config_student_out; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_student_out (award_config_recommend, award_config_out_currency) FROM stdin;
[1,2)	10000.00
[2,3)	200000.00
[3,4)	1000000.00
[4,5)	2000000.00
\.


--
-- Data for Name: epmms_award_config_up; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_up (award_config_id, award_config_layer, award_config_award_member, award_config_currency) FROM stdin;
1	1	1	0.05
2	2	2	0.05
3	3	3	0.05
4	4	4	0.05
5	5	5	0.05
6	6	6	0.05
\.


--
-- Data for Name: epmms_award_config_upgrade; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_upgrade (award_config_id, award_config_layer, award_config_level, award_config_money) FROM stdin;
1	\N	1	1000.00
3	2	2	2000.00
4	3	3	3000.00
5	4	4	4000.00
6	5	5	5000.00
7	6	6	6000.00
8	7	7	7000.00
9	8	8	8000.00
10	9	9	9000.00
11	10	10	10000.00
\.


--
-- Data for Name: epmms_award_config_yeji; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_config_yeji (award_config_id, award_config_member, award_config_layer, award_config_currency, award_config_free_date, award_config_yeji) FROM stdin;
1	1	1	0.10	1	2
2	2	2	0.10	2	5
3	3	3	0.10	3	10
\.


--
-- Data for Name: epmms_award_day; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_day (award_day_id, award_day_date, award_day_memberinfo_id, award_day_currency, award_day_type_id, award_day_add_date, award_day_sum_type) FROM stdin;
\.


--
-- Data for Name: epmms_award_day_sum; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_day_sum (award_day_sum_id, award_day_sum_memberinfo_id, award_day_sum_currency, award_day_sum_date, award_day_sum_add_date, award_day_sum_type, award_day_sum_is_withdrawals) FROM stdin;
\.


--
-- Data for Name: epmms_award_day_sum_all; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_day_sum_all (award_day_sum_id, award_day_sum_memberinfo_id, award_day_sum_currency, award_day_sum_date, award_day_sum_add_date, award_day_sum_is_withdrawals) FROM stdin;
\.


--
-- Data for Name: epmms_award_group; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_group (award_group_id, award_group_group, award_group_type, award_group_calc) FROM stdin;
249	1	625	{0}
240	6	619	{0}
241	5	620	{0}
243	4	621	{0}
244	7	622	{0}
245	1	623	{0}
246	7	624	{0}
\.


--
-- Data for Name: epmms_award_month; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_month (award_month_id, award_month_date, award_month_memberinfo_id, award_month_currency, award_month_type_id, award_month_add_date, award_month_sum_type) FROM stdin;
\.


--
-- Data for Name: epmms_award_month_sum; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_month_sum (award_month_sum_id, award_month_sum_memberinfo_id, award_month_sum_currency, award_month_sum_date, award_month_sum_add_date, award_month_sum_type, award_month_sum_is_withdrawals) FROM stdin;
\.


--
-- Data for Name: epmms_award_month_sum_all; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_month_sum_all (award_month_sum_id, award_month_sum_memberinfo_id, award_month_sum_currency, award_month_sum_date, award_month_sum_add_date, award_month_sum_is_withdrawals) FROM stdin;
\.


--
-- Data for Name: epmms_award_period; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_period (award_period_id, award_period_period, award_period_memberinfo_id, award_period_currency, award_period_type_id, award_period_add_date, award_period_sum_type, award_period_type2) FROM stdin;
\.


--
-- Data for Name: epmms_award_period_sum; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_period_sum (award_period_sum_id, award_period_sum_memberinfo_id, award_period_sum_src_memberinfo_id, award_period_sum_currency, award_period_sum_period, award_period_sum_add_date, award_period_sum_type, award_period_sum_src_memberinfo_id_b) FROM stdin;
\.


--
-- Data for Name: epmms_award_total; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_total (award_total_id, award_total_memberinfo_id, award_total_currency, award_total_type_id, award_total_add_date, award_total_sum_type) FROM stdin;
\.


--
-- Data for Name: epmms_award_total_sum; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_total_sum (award_total_sum_id, award_total_sum_memberinfo_id, award_total_sum_currency, award_total_sum_add_date, award_total_sum_type) FROM stdin;
\.


--
-- Data for Name: epmms_award_type; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_type (award_type_id, award_type_name, award_type_desc, award_type_is_enable, award_type_class, award_type_order, award_is_calc, award_type_is_upgrade, award_time) FROM stdin;
29	新人激励奖	\N	0	award_left_right	1	0	0	\N
30	幸运见点奖	\N	0	award_dot_layer	2	0	0	\N
31	组织奖	\N	0	award_pair11	3	0	0	\N
32	互动奖(上)	\N	0	award_org_up	4	0	0	\N
33	互动奖(下)	\N	0	award_org_down	5	0	0	\N
34	重消奖(秒结)	\N	0	award_dup_award2	6	0	0	\N
35	重消税(秒结)	\N	0	award_dup	7	0	0	\N
36	团购循环奖	最后5人	0	award_group5	2	0	0	\N
37	管理奖	与团购循环奖相同，发给其推荐人	0	award_group_manage	3	0	0	\N
38	物流基金	\N	0	award_wuliu	4	0	0	\N
39	分红	\N	0	award_corp_fenhong	5	0	0	\N
101	财富奖	\N	0	award_rich	3	0	\N	\N
102	推荐提成奖	\N	0	award_recommend_under	7	0	\N	\N
40	管理津贴\r\n	\N	0	award_gljt	2	0	1	\N
42	总监奖	\N	0	award_zongjian	3	0	1	\N
43	董事奖	\N	0	award_dongshi	4	0	1	\N
48	积分	每股10分	0	award_jifen	0	0	0	\N
5	报单奖	\N	0	award_agent_bill	6	0	0	\N
12	全球分红	\N	0	award_all_bond	3	0	0	\N
13	奖池分红	\N	0	award_pond_day	10	0	0	\N
14	董事分红	级差分红	0	award_dif	4	0	0	\N
15	分配奖池	\N	0	award_pond	0	0	0	\N
17	重复消费(奖池)	\N	0	award_dup	2	0	0	\N
18	税费(奖池)	\N	0	award_dup	3	0	0	\N
20	推广奖	\N	0	award_recommend_2	2	0	0	\N
21	辅导奖	如推广奖所述，为A贡献推广奖的每会员记为X，依据注审核会员顺序，第1个为A贡献第n个为A贡献推广奖的会员记为Xn\r\n当Xn也获得推广奖时A可得50元辅导奖。\r\n	0	award_fudao	3	0	0	\N
22	互助奖	\N	0	award_huzu	4	0	0	\N
23	培育奖	\N	0	award_peiyu	5	0	0	\N
24	重消关怀奖	月结	0	award_dup_guanhuai	0	0	0	\N
25	全球分红	\N	0	award_all_bond_type	0	0	0	\N
26	见点奖	\N	0	award_dot_member_type_recommend	0	0	0	\N
27	重消见点奖	月结	0	award_dup_dot	0	0	0	\N
28	二一奖	进二出一	0	award_in2out1	2	0	0	\N
44	创业奖	按推荐关系的上3代,按百分比	0	award_chuangye	1	0	0	\N
45	管理奖	财富区上单拿奖	0	award_guanli	2	0	0	\N
46	领导奖	拿管理奖的财富属主拿该奖	0	award_lingdao	3	0	0	\N
47	静态分红	每月营业额8%按单加权分红	0	award_month_fenhong	100	0	0	\N
49	公排分红奖 	\N	0	award_gongpaifenhong	2	0	0	\N
50	幸运分红奖	\N	0	award_xingyunfenhong	3	0	0	\N
51	开拓市场奖	\N	0	award_recommend_under	4	0	0	\N
52	领导奖	\N	0	award_dif	5	0	0	\N
1	提现手续费	\N	0	\N	0	0	0	\N
2	PV值	所得奖金乘以PV值为实得奖金	0	\N	0	0	0	\N
63	重复消费(月)	\N	0	award_dup	2	0	0	\N
64	税费(月)	\N	0	award_dup	3	0	0	\N
65	爱心基金(月)	\N	0	award_dup_aixin	4	0	0	\N
66	重复消费(季)	\N	0	award_dup	2	0	0	\N
67	税费(季)	\N	0	award_dup	3	0	0	\N
68	爱心基金(季)	\N	0	award_dup_aixin	4	0	0	\N
69	重复消费(年)	\N	0	award_dup	2	0	0	\N
70	税费(年)	\N	0	award_dup	3	0	0	\N
71	爱心基金(年)	\N	0	award_dup_aixin	4	0	0	\N
72	重复消费(周二)	\N	0	award_dup	2	0	0	\N
73	税费(周二)	\N	0	award_dup	3	0	0	\N
74	爱心基金(周二)	\N	0	award_dup_aixin	3	0	0	\N
53	团队奖	级差	0	award_dif2	2	0	0	\N
54	周奖金	\N	0	award_week	1	0	0	\N
55	感恩奖	\N	0	award_ganen	1	0	0	\N
56	爱心基金	\N	0	award_dup_aixin	12	0	0	\N
57	月奖金	\N	0	award_month	1	0	0	\N
58	季奖金	\N	0	award_quarter	1	0	0	\N
59	年奖金	\N	0	award_year	1	0	0	\N
60	重复消费(周)	\N	0	award_dup	2	0	0	\N
61	税费(周)	\N	0	award_dup	3	0	0	\N
62	爱心基金(周)	\N	0	award_dup_aixin	4	0	0	\N
75	服务管理补贴	\N	0	award_recommend_layer	2	0	0	\N
80	重消见点奖	\N	0	award_dup3000_dot	50	0	0	\N
79	周分红	\N	0	award_corp_fenhong_week	20	0	0	\N
78	组织奖	\N	0	award_org_up_down	2	0	0	\N
81	第一代达成奖	\N	0	award_layer_full	1	0	0	\N
82	安置奖	\N	0	award_dot_layer_recommend	3	0	0	\N
84	第二代达成奖	\N	0		2	0	0	\N
9	重消準備金	\N	0	award_dup_sum_type	101	0	0	\N
83	重複消費獎	\N	0	award_dup_3000_layer	4	0	0	\N
77	对碰奖	\N	0	award_pair_cap	1	0	0	\N
86	10代见点	\N	0	award_dot_layer_2	2	0	0	\N
85	二代键保费	\N	0	award_dup_5000	200	0	0	\N
87	满层奖	\N	0	award_layer_full_layer	3	0	0	\N
88	奖学金	\N	0	award_student	4	0	0	\N
89	成长金	\N	0	award_dup_1000	5	0	0	\N
90	成长金累计	\N	0	\N	0	0	0	\N
92	见点奖	\N	0	award_dot_member	3	0	0	\N
94	分红奖	\N	0	award_corp_fenhong_month	5	0	0	\N
93	领导奖	\N	0	award_leader_down	4	0	0	\N
95	回馈奖	\N	0	award_huikui	10	0	0	\N
7	重复消费	\N	0	award_dup_acc	100	0	0	\N
41	销售提成\r\n	\N	0	award_recommend_membertype	1	0	0	\N
96	团队奖	\N	0	award_dot_group	2	0	0	\N
97	管理奖	\N	0	award_dif3	3	0	0	\N
98	董事奖	\N	0	award_week_dongshi	4	0	0	\N
99	感恩奖	\N	0	award_ganen2	5	0	0	\N
100	服务费	\N	0	award_agent_type	6	0	0	\N
103	税收	\N	0	award_dup	11	0	0	\N
104	爱心基金	\N	0	award_dup	10	0	0	\N
105	重复消费	\N	0	award_dup_once	12	0	0	\N
106	组织奖	1:2/2:1对碰	0	award_pair_12	1	0	0	\N
107	幸运奖	\N	0	award_xingyun10	2	0	0	\N
108	见点奖	\N	0	award_dot_member	3	0	0	\N
109	关爱奖	\N	0	award_guanai	4	0	0	\N
110	管理奖	\N	0	award_gl	5	0	0	\N
111	重消奖	\N	0	award_dup_award_3000	6	0	0	\N
91	对碰奖	\N	0	award_pair	2	0	0	\N
112	下拿上	\N	0	award_down_up	4	0	0	\N
113	上拿下	\N	0	award_up_down	5	0	0	\N
114	日分红	\N	0	award_day_fenhong	1	0	0	\N
115	电子股	\N	0	award_day_stock	2	0	0	\N
116	分配电子股	\N	0	award_assign_stock	10	0	0	\N
4	报单奖	\N	0	award_agent	40	0	0	\N
118	培育奖	\N	0	award_peiyu_month	3	0	0	\N
117	互助奖	\N	0	award_layer_recommend	2	0	0	\N
8	税费		0	award_dup	110	0	0	\N
119	福利奖	\N	0	award_fuli_upgrade	1	0	0	before
3	利润分红	\N	0	award_recommend	1	0	0	\N
121	二次分红	\N	0	award_fenhong_2	2	0	0	\N
122	三次分红	\N	0	award_fenhong_3	3	0	0	\N
123	四次分红	\N	0	award_fenhong_4	4	0	0	\N
124	五次分红	\N	0	award_fenhong_5	5	0	0	\N
120	升级	\N	0	upgrade_level_140710	2	0	0	before
125	推荐奖	\N	0	award_recommend_membertype	1	0	0	\N
126	二级推荐奖	\N	0	award_recommend_membertype_2	2	0	0	\N
127	见点奖	\N	0	award_dot_layer_2	3	0	0	\N
128	循环奖	\N	0	award_cycle	4	0	0	\N
129	二级循环奖	\N	0	award_cycle_2	5	0	0	\N
130	循环费	\N	0	award_cycle_fee	6	0	0	\N
131	报单奖	\N	0	award_agent_membertype	7	0	0	\N
132	组分红	\N	0	award_group7	8	0	0	\N
134	梦想基金	\N	0	award_mengxiang	9	0	0	\N
135	梦想基金累计	\N	0	\N	0	0	0	\N
141	B网注册金额	\N	0	\N	4	0	0	\N
133	设置组id	\N	0	set_group7_id	0	0	0	before
136	见点奖	\N	0	award_dot_matrix	1	0	0	\N
137	对碰奖	\N	0	award_pair	2	0	0	\N
138	下拿上	\N	0	award_down	3	0	0	\N
139	上拿下	\N	0	award_up	4	0	0	\N
140	报单奖	\N	0	award_agent_type	5	0	0	\N
142	循环奖	\N	0	award_in4out1_b	6	0	0	\N
143	税费	\N	0	award_dup	7	0	0	\N
149	升级	\N	0	upgrade_level_0805	2	0	0	before
151	分配信用基金	\N	0	set_foundation_0805	1	0	0	before
153	重复消费	\N	0	award_dup_sum_type	7	0	0	\N
152	信用基金申请佣金	\N	0	\N	0	0	7	\N
150	卓越分红	\N	0	award_fenhong_0805	6	0	0	\N
148	报单佣金	\N	0	award_agent_membertype	5	0	0	\N
147	管理佣金	\N	0	award_up_down_recommend	4	0	0	\N
146	见点佣金	\N	0	award_recommend_layer_dot	3	0	0	\N
145	层碰	\N	0	award_layer_pair	2	0	0	\N
144	直推佣金	\N	0	award_recommend_bill	1	0	0	\N
161	set_car	\N	0	set_car_finance	0	0	0	before
156	累计小区业绩	\N	0	set_month_little_product_count	3	0	0	before
10	重复消费积分	\N	0		150	0	0	\N
154	消费增值奖	\N	0	award_zhengzhi	1	0	1	\N
155	消费服务奖	\N	0	award_dot_fuwu	2	0	2	\N
157	业绩奖励	\N	0	award_yeji	4	0	0	\N
158	组织奖	\N	0		5	0	0	\N
159	周返	\N	0	award_fenhong_4	6	0	0	\N
160	税费	\N	0	award_dup	7	0	0	\N
170	直推奖	\N	0	award.award_recommend_0920	0	0	0	\N
171	点位奖	\N	0	award.award_layer1_0920	0	0	0	\N
172	领导关怀奖	\N	0	award.award_leader	0	0	0	\N
173	市场开拓奖	\N	0	award.award_market	0	0	0	\N
183	升级	\N	0	award.upgrade_level_0920	0	0	0	before
174	领导分红奖	\N	0	award.award_leader_fenhong	0	0	0	\N
175	全球分红奖	\N	0	award.award_global	0	0	0	\N
176	底薪	\N	0	award.award_dixin	0	0	0	\N
177	返本奖	\N	0	award.award_fanben	0	0	0	\N
178	至尊分红	\N	0	award.award_zz_fenhong	0	0	0	\N
179	重复消费	\N	0	award.award_dup_sum_type	0	0	0	\N
180	个人所得税	\N	0	award.award_dup	0	0	0	\N
181	网络维护费	\N	0	award.award_dup	0	0	0	\N
182	重复消费奖	\N	0		0	0	0	\N
193	见点奖	\N	0	award.award_dot	0	0	0	\N
194	静态奖	\N	0	award.award_fanben_1004	0	0	0	\N
190	推荐奖	\N	0	award.award_recommend_membertype	0	0	0	\N
191	对碰奖	\N	0	award.award_pair	0	0	0	\N
192	领导奖	\N	0	award.award_leader_1004	0	0	0	\N
195	奖品出局	\N	0	award.group_prize	0	0	0	before
201	见点奖	\N	0	award.award_dot_layer	20	0	0	\N
202	管理奖	\N	0	award.award_diff	30	0	0	\N
203	分红奖	\N	0	award.award_diff_fenhong	40	0	0	\N
204	服务补贴	\N	0	award.award_agent	50	0	0	\N
205	重复消费	\N	0	award.award_dup_sum_type	60	0	0	\N
206	重复消费累计	\N	0		70	0	0	\N
200	层奖	\N	0	award.award_layer_full_layer_141120	10	0	0	\N
212	下拿上	\N	0	award.award_down_up_recommand	0	0	0	\N
213	上拿下	\N	0	award.award_up_down_recommend	0	0	0	\N
214	报单奖	\N	0	award.award_agent	0	0	0	\N
218	重复消费累计	\N	0		0	0	0	\N
211	对碰奖	\N	0	award.award_pair	0	0	0	\N
210	直推奖	\N	0	award.award_recommend_membertype	0	0	0	\N
215	日分红	\N	0	award.award_day_fenhong	0	0	0	\N
216	循环奖	\N	0	award.award_in10out1	0	0	0	\N
217	重复消费	\N	0	award.award_dup_sum_type	0	0	0	\N
220	直推奖	\N	0	award.award_recommend_membertype_141203	-3	0	0	\N
227	直推奖2	\N	0	award.award_dot_recommend_141203	0	0	0	\N
207	升级	\N	0	award.upgrade_level_1120	0	0	0	\N
222	推广奖1	\N	0	award.award_down_up_recommand	-1	0	0	\N
221	扩展奖	\N	0	award.award_pair_2	-2	0	0	\N
223	推广奖2	\N	0	award.award_up_down_recommend	0	0	0	\N
224	矩阵费	\N	0	award.award_dup_sum_type_141203	0	0	0	\N
225	矩阵费累计	\N	0	\N	0	0	0	\N
226	管理奖1	\N	0	award.award_agent_141203	0	0	0	\N
228	公排奖	\N	0	award.award_gongpai_141203	0	0	0	\N
229	签约奖	\N	0	award.award_signing	0	0	0	\N
230	重消奖	\N	0	award.award_order	0	0	0	\N
231	小组奖1	\N	0	award.award_leader_141203	0	0	0	\N
232	重消提成	\N	0	award.award_order_2	0	0	0	\N
233	扣税	\N	0	award.award_dup_141203	10	0	0	\N
234	区域分红	\N	0		0	0	0	\N
235	小组奖2	\N	0	\N	0	0	0	\N
236	管理奖2	\N	0	award.award_leader_141203_agent	0	0	0	\N
237	管理奖3	\N	0	award.award_order_3	0	0	0	\N
250	推荐奖	\N	0	award.award_recommend	0	0	0	\N
251	见点奖	\N	0	award.award_dot	0	0	0	\N
252	对碰奖	\N	0	award.award_pair_status	0	0	0	\N
253	网络管理费	\N	0	\N	0	0	0	\N
254	扣税	\N	0	award.award_dup	0	0	0	\N
260	层碰	\N	0	award_layer_pair	1	0	0	\N
261	开拓奖	\N	0	award.award_pair_status_150805	2	0	0	\N
262	见点奖	\N	0	award.award_dot	3	0	0	\N
263	互助奖	\N	0	award.award_huzhu_150805	4	0	0	\N
264	报单奖	\N	0	award.award_agent_150805	5	0	0	\N
266	互助费	\N	0	award.award_dup_150805	7	0	0	\N
267	推荐奖	\N	0	award.award_recommend	0	0	0	\N
268	层碰奖	\N	0	award.award_layer_pair_status	0	0	0	\N
269	见单奖	\N	0	award.award_dot_layer	0	0	0	\N
270	服务费	\N	0	award.award_agent	0	0	0	\N
271	层碰上	\N	0	award.award_up_down_recommend	0	0	0	\N
272	层碰下	\N	0	award.award_down_up_recommand	0	0	0	\N
280	推荐积分	\N	0	award.award_recommend	0	0	0	\N
281	层碰积分	\N	0	award.award_layer_pair_status_150919	0	0	0	\N
282	见单积分	\N	0	award.award_dot_layer_150919	0	0	0	\N
283	层碰下积分	\N	0	award.award_down_up_recommand_150919	0	0	0	\N
284	层碰上积分	\N	0	award.award_up_down_recommend_150919	0	0	0	\N
285	激活积分	\N	0	award.award_self_150919	0	0	0	\N
286	直推奖	\N	0	award.award_recommend	0	0	0	\N
287	碰对奖	\N	0	award.award_pair_status	0	0	0	\N
288	领导奖	\N	0	award.award_leader_recommend	0	0	0	\N
289	扣税	\N	0	award.award_dup	0	0	0	\N
292	福利	\N	0	public.award_fuli	0	0	0	\N
300	见点奖	\N	0	award.award_dot_layer2	1	0	0	\N
301	扣税	\N	0	award.award_dup	2	0	0	\N
302	推荐奖	\N	0	award.award_recommend	0	0	0	\N
290	静态分红	\N	0	award.award_static_fenhong	0	0	0	\N
291	推荐分红	\N	0	award.award_leader_recommend2	0	0	0	\N
255	静态分红	\N	0	award.static_fenhong	1	0	0	\N
256	动态分红	\N	0	award.dynamic_fenhong	2	0	0	\N
257	扣税	\N	0	award.award_dup	3	0	0	\N
258	养生基金	\N	0	award.award_dup_sum_type	4	0	0	\N
259	基金币	\N	0	\N	0	0	0	\N
311	见点奖	\N	0	award.award_dot_layer	0	0	0	\N
303	静态返利	\N	0	award.award_static_fenhong	0	0	0	\N
304	代数奖	\N	0	award.award_dot_matrix_recommend	2	0	1	\N
305	层见点奖	\N	0	award.award_dot_matrix	1	0	0	\N
306	对碰奖	\N	0	award.award_pair_status	4	0	1	\N
307	报单费	\N	0	award.award_agent	5	0	0	\N
308	管理奖	\N	0	award.award_dot_matrix_recommend2	3	0	0	\N
309	重消	\N	0	award.award_dup	6	0	1	\N
310	管理费	\N	0	award.award_dup	7	0	1	\N
312	对碰奖	\N	0	award.award_pair_status	0	0	0	\N
325	福利奖	\N	0	award.award_prize	0	0	0	\N
320	推荐奖	\N	0	award.award_recommend	0	0	0	\N
321	见点奖	\N	0	award.award_dot	0	0	0	\N
322	对碰奖	\N	0	award.award_pair_status	0	0	0	\N
323	鼓励奖	\N	0	award.award_guli_151214	0	0	0	\N
324	互助奖	\N	0	award.award_up_down_recommend	0	0	0	\N
328	销售奖	\N	0	award.award_dot_matrix_left	3	0	0	\N
329	管理奖	\N	0	award.award_leader_recommend_160106	4	0	0	\N
330	重复消费	\N	0	award.award_dup	5	0	0	\N
331	平台使用费	\N	0	award.award_dup	6	0	0	\N
332	税	\N	0	award.award_dup	7	0	0	\N
333	慈善募捐	\N	0	award.award_dup	8	0	0	\N
326	股东分红	\N	0	award.award_day_push_fenhong	1	0	0	\N
327	众筹业务奖	\N	0	award.award_pair_status	2	0	0	\N
341	礼品	\N	0	award.award_prize	0	0	0	\N
335	业绩奖	\N	0	award.award_pair_status	2	0	0	\N
336	领导奖	\N	0	award.award_leader	3	0	0	\N
337	见点奖	\N	0	award.award_dot	4	0	0	\N
338	报单费	\N	0	award.award_agent	5	0	0	\N
339	爱心基金	\N	0	award.award_dup	6	0	0	\N
340	税	\N	0	award.award_dup	7	0	0	\N
334	推荐奖	\N	0	award.award_recommend	1	0	0	\N
347	upgrade	\N	0	award.upgrade_level_160123	0	0	0	\N
344	报单奖	\N	0	award.award_agent	3	0	0	\N
342	直推奖	\N	0	award.award_recommend_level	1	0	0	\N
343	间接奖	\N	0	award.award_rich	2	0	0	\N
345	税	\N	0	award.award_dup	4	0	0	\N
346	爱心基金	\N	0	award.award_dup	5	0	0	\N
348	广告费	\N	0	award.award_static_fenhong	1	0	0	\N
349	直推奖	\N	0	award.award_recommend	2	0	1	\N
350	层奖	\N	0	award.award_pair_layer_status	3	0	0	\N
352	量奖	\N	0	award.award_pair_status_with_layer	4	0	1	\N
353	感恩奖	\N	0	award.award_down_up_recommand	5	0	1	\N
354	管理奖	\N	0	award.award_up_down_recommend	6	0	1	\N
355	子点津贴	\N	0	award.award_dup_sum_type_160228	7	0	0	\N
357	杏福金币	\N	0	award.award_dup	9	0	1	\N
358	管理费	\N	0	award.award_dup	10	0	1	\N
359	养老金	\N	0	award.award_dup	11	0	1	\N
360	报单奖	\N	0	award.award_agent	7	0	1	\N
361	爱心基金	\N	0	award.award_dup_aixin	12	0	1	\N
362	领袖福利	\N	0	award.award_diff	7	0	1	\N
363	全球分红	\N	0	award.award_global_160228	7	0	1	\N
364	upgrade	\N	0	award.upgrade_level_160228	0	0	0	\N
365	直推奖	\N	0	award.award_recommend	0	0	0	\N
366	对碰奖	\N	0	award.award_pair_status	0	0	0	\N
367	领导奖	\N	0	award.award_up_down_recommend	0	0	0	\N
368	推荐奖	\N	0	award.award_recommend	0	0	1	\N
369	对碰奖	\N	0	award.award_pair_status	0	0	0	\N
370	辅导奖	\N	0	award.award_up_down_recommend_160425	0	0	0	\N
371	分红返利	\N	0	award.award_static_fenhong_425	0	0	0	\N
375	升级	\N	0	award.upgrade_level_160430	0	0	0	\N
372	红利	\N	0	award.award_static_fenhong	1	0	0	\N
373	分享红利	\N	0	award.award_diff	2	0	0	\N
374	同阶奖	\N	0	\N	3	0	0	\N
380	广告分红	\N	0	award.award_static_fenhong	1	0	0	\N
381	销售佣金	\N	0	award.award_pair_layer_status	2	0	0	\N
382	补贴佣金	\N	0	award.award_dot_layer_big	3	0	0	\N
383	市场见点佣金	\N	0	award.award_pair_status_with_layer	4	0	0	\N
384	领导佣金	\N	0	award.award_leader_recommend2	5	0	0	\N
385	幸运佣金	\N	0	award.award_xingyunfenhong	6	0	0	\N
386	重消	\N	0	award.award_dup	10	0	0	\N
388	互助佣金	\N	0	\N	9	0	0	\N
389	报单费	\N	0	award.award_agent	1	0	0	\N
400	回本奖（一层）	\N	0	award.award_huiben_layer	0	0	0	\N
402	回本奖	\N	0	award.award_huiben_layer2	0	0	0	\N
403	层见点	\N	0	award.award_dot_layer_160601	0	0	0	\N
404	补点奖	\N	0	award.award_budian	0	0	0	\N
405	层奖	\N	0	award.award_pair_layer_status_160601	0	0	0	\N
406	业绩奖	\N	0	award.award_pair_status	0	0	0	\N
407	幸运奖一	\N	0	award.award_dot_layer_xingyun	0	0	0	\N
408	幸运奖二	\N	0	award.award_dot_layer_xingyun2	0	0	0	\N
409	重复消费	\N	0	award.award_dup_160601	0	0	0	\N
410	爱心基金	\N	0	award.award_dup_160601	0	0	0	\N
411	税	\N	0	award.award_dup_160601	0	0	0	\N
412	广告奖	\N	0	award.award_recommend	0	0	0	\N
413	管理奖	\N	0	award.award_dot_recommend	0	0	0	\N
414	股东分红	\N	0	award.award_dot_level	0	0	0	\N
415	升级	\N	0	award.upgrade_level_160612	0	0	0	\N
416	见单补贴	\N	0	award.award_agent	0	0	0	\N
417	消费	\N	0	award.award_dup_sum_type	0	0	0	\N
418	税	\N	0	award.award_dup	0	0	0	\N
419	积分	\N	0		0	0	0	\N
428	税	\N	0	award.award_dup	0	0	0	\N
420	静态分红	\N	0	award.award_static_fenhong	0	0	0	\N
421	互助点奖	\N	0	award.award_dot_matrix	0	0	0	\N
422	层奖	\N	0	award.award_pair_layer_status_dup	0	0	0	\N
423	业绩奖	\N	0	award.award_pair_status	0	0	0	\N
424	反哺奖	\N	0	award.award_recommend_parent_period	0	0	0	\N
425	领导奖	\N	0	award.award_leader_recommend	0	0	0	\N
426	报单奖	\N	0	award.award_agent_type	0	0	0	\N
427	重消见点	\N	0	award.award_order	0	0	0	\N
436	升级	\N	0	award.upgrade_level_160624	-1	0	0	\N
429	日分红	\N	0	award.award_static_fenhong_624	0	0	0	\N
430	层碰	\N	0	award.award_pair_layer_status_dup	0	0	0	\N
431	大区见点	\N	0	award.award_dot_layer_big3	0	0	0	\N
432	小区见点	\N	0	award.award_dot_layer_little3	0	0	0	\N
433	服务费	\N	0	award.award_agent	0	0	0	\N
434	税	\N	0	award.award_dup	0	0	0	\N
435	重消	\N	0	award.award_dup_sum_type	0	0	0	\N
437	重消币	\N	0	\N	0	0	0	\N
442	业绩奖	\N	0	award.award_dot_recommend	3	0	0	\N
443	税收	\N	0	award.award_dup	4	0	0	\N
444	重复消费	\N	0	award.award_dup	5	0	0	\N
440	直推	\N	0	award.award_recommend2	1	0	0	\N
441	层奖	\N	0	award.award_pair_layer_status_recommend	2	0	0	\N
446	升级	\N	0	award.upgrade_level_160708	0	0	0	\N
448	每月分红	\N	0	award.award_month_fenhong	0	0	0	\N
445	直推奖	\N	0	 award.award_recommend	0	0	0	\N
447	每日分红	\N	0	award.award_day_fenhong	0	0	0	\N
453	量奖	\N	0	award.award_pair_status	4	0	0	\N
454	见点奖	\N	0	award.award_dot_matrix	5	0	0	\N
455	报单奖	\N	0	award.award_agent	6	0	0	\N
457	爱心领车	\N	0	award.award_dup	8	0	0	\N
458	税	\N	0	award.award_dup	9	0	0	\N
460	推荐奖	\N	0	award.award_recommend_b	10	0	0	\N
461	car	\N	0	award.award_car_b	11	0	0	\N
462	car_c	\N	0	award.award_car_c	12	0	0	\N
450	回本奖	\N	0	award.award_dot_matrix_recommend	2	0	0	\N
451	增卡奖	\N	0	award.award_recommend_zhengka	1	0	0	\N
452	层奖	\N	0	award.award_pair_layer_status_dup	3	0	0	\N
456	重复消费	\N	0	award.award_dup	14	0	0	\N
463	爱心基金/管理费	\N	0	award.award_dup	13	0	0	\N
464	关联奖金	\N	0	award.award_parent	1	0	0	\N
465	层碰	\N	0	award.award_pair_layer_status_dup	2	0	0	\N
466	小区	\N	0	award.award_pair_status	3	0	0	\N
467	税	\N	0	award.award_dup	4	0	0	\N
468	网络维护费	\N	0	award.award_manage	5	0	0	\N
470	见点奖	\N	0	award.award_dot_layer	0	0	0	\N
471	报单奖	\N	0	award.award_agent	0	0	0	\N
472	税	\N	0	award.award_dup	0	0	0	\N
473	周分红	\N	0	award.award_static_fenhong	1	0	0	\N
474	销售补贴	\N	0	award.award_leader_little	2	0	0	\N
475	运营费	\N	0	award.award_dup	3	0	0	\N
476	重消	\N	0	award.award_dup_sum_type	4	0	0	\N
477	重消币	\N	0		5	0	0	\N
478	报单奖	\N	0	award.award_agent	0	0	0	\N
479	爱心基金	\N	0	award.award_dup	6	0	0	\N
487	极差2	\N	0	\N	0	0	0	\N
480	返利	\N	0	award.award_order_fanli	1	0	0	\N
481	极差	\N	0	award.award_order_anxin_jc	2	0	0	\N
482	安心分红	\N	0	award.award_order_anxin	3	0	0	\N
483	推广奖	\N	0	award.award_tuiguang	4	0	0	\N
484	补贴	\N	0	award.award_butie	5	0	0	\N
485	运营费	\N	0	award.award_dup	6	0	0	\N
486	累计	\N	0	award.award_order_buy	0	0	0	\N
488	三级分销	\N	0	award.award_dot_recommend	0	0	1	\N
489	代理见点	\N	0	award.award_agent_rank	0	0	1	\N
490	平级代理	\N	0	award.award_agent_up_down	0	0	1	\N
492	升级	\N	0	award.upgrade_level_170102	0	0	1	\N
493	重复消费	\N	0	award.award_dup	3	0	0	\N
494	推广收益	\N	0	award.award_recommend_membertype	2	0	0	\N
491	业务拓展奖	\N	0	award.award_diff	0	0	0	\N
495	直推奖	\N	0	award.award_recommend	0	0	0	\N
496	财富奖	\N	0	award.award_caifu	0	0	0	\N
497	见点奖	\N	0	award.award_rich_dot	0	0	0	\N
498	管理费	\N	0	award.award_dup	0	0	0	\N
387	intob	\N	0	award.intob	8	0	0	\N
500	升级奖	\N	0	award.award_recommend	3	0	1	\N
499	直推奖	\N	0	award.award_recommend_membertype2	2	0	0	\N
501	管理奖	\N	0	award.award_level_first	4	0	0	\N
502	领导奖	\N	0	award.award_level_second	5	0	0	\N
503	upgrade	\N	0	award.upgrade_level_170213	1	0	0	\N
510	所得税起始金额	\N	0	\N	9	0	0	\N
513	升级	\N	0	award.upgrade_level_170224	10	0	0	\N
504	层奖	\N	0	award.award_pair_layer_status_dup	1	0	0	\N
505	量奖	\N	0	award.award_pair_170224	2	0	0	\N
506	互助奖下拿上	\N	0	award.award_down_up_recommand	3	0	0	\N
507	互助奖上拿下	\N	0	award.award_up_down_recommend	4	0	0	\N
508	见点奖	\N	0	award.award_dot	5	0	0	\N
509	所得税	\N	0	award.award_dup_170224	8	0	0	\N
511	报单中心	\N	0	award.award_agent	6	0	0	\N
512	分红	\N	0	award.award_global_160228	7	0	0	\N
514	维护费	\N	0	award.award_dup_no	11	0	0	\N
515	购房基金	\N	0	award.award_dup_sum_type_no	12	0	0	\N
516	购房基金币	\N	0	\N	0	0	0	\N
517	爱心回馈	\N	0	award.award_static_fenhong_day	1	0	0	\N
518	爱心活动互助基金	\N	0	award.award_dup	2	0	0	\N
519	增值控险保障	\N	0	award.award_static_fenhong_day2	3	0	0	\N
520	直推	\N	0	award.award_recommend	0	0	0	\N
522	层碰	\N	0	award.award_pair_layer_status	1	0	0	\N
521	积分分红	\N	0	award.award_static_fenhong_recommend	0	0	0	\N
523	量奖	\N	0	award.award_pair_status	2	0	0	\N
524	见点奖	\N	0	award.award_dot_layer	3	0	0	\N
525	互助奖(上拿下)	\N	0	award.award_up_down_recommend	4	0	0	\N
526	互助奖(下拿上)	\N	0	award.award_down_up_recommand	5	0	0	\N
527	32万大礼包	\N	0	award.award_dot_layer_150919	6	0	0	\N
528	购车基金	\N	0	award.award_dup_sum_type	8	0	0	\N
529	购车基金币	\N	0	\N	9	0	0	\N
530	重消	\N	0	award.award_dup	10	0	0	\N
531	税金	\N	0	award.award_dup	11	0	0	\N
532	报单中心	\N	0	award.award_agent	7	0	0	\N
533	对碰	\N	0	award.award_pair_status	0	0	0	\N
534	辅导奖	\N	0	award.award_dot_recommend	0	0	0	\N
535	重消	\N	0	award.award_dup	0	0	0	\N
537	互助奖(上拿下)	\N	0	award.award_up_down_recommend_160425	3	0	0	\N
538	互助奖(下拿上)	\N	0	award.award_down_up_recommand	4	0	0	\N
540	股东分红	\N	0	award.award_diff	2	0	0	\N
539	升级	\N	0	award.upgrade_level_170102	5	0	0	\N
541	税收	\N	0	award.award_dup	8	0	0	\N
542	重复消费	\N	0	award.award_dup_sum_type	6	0	0	\N
543	购物币	\N	0	\N	0	0	0	\N
545	股份积分	\N	0	\N	0	0	0	\N
536	创业奖	\N	0	award.award_pair_status	1	0	0	\N
544	股份税费	\N	0	award.award_dup_sum_type2	7	0	0	\N
548	店补	\N	0	award.award_agent	0	0	0	\N
549	单补	\N	0	award.award_recommend_membertype3	0	0	0	\N
550	特补	\N	0	award.award_recommend_membertype2	0	0	0	\N
547	工程积分	\N	0	award.award_pair_status22_171128	0	0	0	\N
546	分享积分	\N	0	award.award_recommend_membertype	0	0	0	\N
553	量碰	\N	0	award.award_pair_status	0	0	1	\N
551	静态奖励	\N	0	award.award_static_fenhong	0	0	0	\N
552	直推奖	\N	0	award.award_recommend	0	0	1	\N
554	报单奖	\N	0	award.award_agent	0	0	1	\N
555	数据奖	\N	0	award.award_dot	0	0	1	\N
556	税	\N	0	award.award_dup	0	0	1	\N
557	手续费	\N	0	award.award_dup	0	0	1	\N
567	互助基金	\N	0	\N	1	0	0	\N
558	静态分红	\N	0	award.award_global_180330	1	0	0	\N
559	直推奖	\N	0	award.award_recommend_membertype	2	0	0	\N
560	业绩奖	\N	0	award.award_pair_status	3	0	0	\N
561	反哺奖	\N	0	award.award_down_up_recommand_150919	4	0	0	\N
562	幸运奖	\N	0	award.award_dot_matrix	5	0	0	\N
563	店补奖	\N	0	award.award_agent_type	6	0	0	\N
564	管理奖	\N	0	award.award_dot_recommend	7	0	0	\N
565	税收	\N	0	award.award_dup	9	0	0	\N
566	互助基金扣税	\N	0	award.award_dup_sum_type	10	0	0	\N
568	互助奖金	\N	0	award.award_huzhu_180330	8	0	0	\N
569	分红	\N	0	award.award_global_180402	1	0	0	\N
570	招商奖	\N	0	award.award_dot_recommend_180402	2	0	0	\N
571	成功奖	\N	0	award.award_gongshifenhong_180402	3	0	0	\N
572	报单奖	\N	0	award.award_agent	4	0	0	\N
574	销售奖	\N	0	award.award_diff_180402	5	0	0	\N
575	级差奖	\N	0	award.award_diff	3	0	0	\N
573	升级	\N	0	award.upgrade_level_180501	0	0	0	\N
576	直推奖	\N	0	award.award_recommend	1	0	0	\N
577	间推奖	\N	0	award.award_recommend_l2	2	0	0	\N
578	个税	\N	0	award.award_dup	5	0	0	\N
579	购物币	\N	0	award.award_dup_sum_type	6	0	0	\N
580	购物积分	\N	0		7	0	0	\N
581	平级	\N	0	\N	4	0	0	\N
600	直接销售奖	\N	0	award.award_recommend_matrix	0	0	0	\N
601	二级分销	\N	0	award.award_agent_leader	0	0	0	\N
602	分红	\N	0	award.award_agent_global_fenhong	0	0	0	\N
603	鼓励奖	\N	0	award.award_global_month_fenhong	0	0	0	\N
604	直接销售奖(代理)	\N	0	award.award_recommend_matrix_agent	0	0	0	\N
605	升级	\N	0	award.upgrade_level_180929	0	0	0	\N
611	升级	\N	0	"award"."upgrade_level_181111"	0	1	1	\N
609	董事分红	\N	0	"award"."award_month_fenhong_181111"	4	1	0	\N
608	对碰奖	\N	0	award.award_pair_status	3	1	1	\N
610	报单费	\N	0	"award"."award_agent_type"	5	1	0	\N
606	推荐奖	\N	0	"award"."award_recommend_membertype"	1	1	0	\N
607	见点奖	\N	0	"award"."award_dot_layer"	2	1	0	\N
265	扣税	\N	0	award.award_dup	6	0	0	\N
612	考核天数	\N	0	\N	0	0	0	\N
619	尾单奖	\N	1	"award"."award_jackpot_fanxian"	0	1	0	\N
620	幸运奖	\N	1	"award"."award_jackpot_fanxian"	0	1	0	\N
621	首单奖	\N	1	"award"."award_jackpot_fanxian"	0	1	0	\N
622	日薪	\N	1	award.award_day_futou	0	1	0	\N
623	升级	\N	0	award.upgrade_level_181225	0	1	0	\N
624	基金	\N	1	\N	0	0	0	\N
613	扣税	\N	0	"award"."award_dup"	10	0	0	\N
614	日返利	\N	0	"award"."award_fanli"	0	0	0	\N
615	分享奖	\N	0	"award"."award_lt_recommend"	0	0	0	\N
616	见点奖	\N	0	"award"."award_lt_bonus"	0	0	0	\N
617	抵扣	\N	0	\N	0	0	0	\N
625	店补积分	\N	1	award.award_xingyun_dianbu	0	1	0	\N
641	购买手续费	\N	0	\N	0	0	0	\N
640	交易手续费	\N	0	\N	0	0	0	\N
642	重复消费	\N	0	"award"."award_dup_sum_type"	4	0	0	\N
643	爱心基金	\N	0	"award"."award_dup"	5	0	0	\N
351	积分价格	\N	0	\N	0	0	0	\N
618	团队	\N	0	"award"."award_team"	0	0	0	\N
\.


--
-- Data for Name: epmms_award_week; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_week (award_week_id, award_week_date, award_week_memberinfo_id, award_week_currency, award_week_type_id, award_week_add_date, award_week_sum_type) FROM stdin;
\.


--
-- Data for Name: epmms_award_week_sum; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_week_sum (award_week_sum_id, award_week_sum_memberinfo_id, award_week_sum_currency, award_week_sum_date, award_week_sum_add_date, award_week_sum_type, award_week_sum_is_withdrawals) FROM stdin;
\.


--
-- Data for Name: epmms_award_week_sum_all; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_week_sum_all (award_week_sum_id, award_week_sum_memberinfo_id, award_week_sum_currency, award_week_sum_date, award_week_sum_add_date, award_week_sum_is_withdrawals) FROM stdin;
\.


--
-- Data for Name: epmms_award_year; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_year (award_year_id, award_year_date, award_year_memberinfo_id, award_year_currency, award_year_type_id, award_year_add_date, award_year_sum_type) FROM stdin;
\.


--
-- Data for Name: epmms_award_year_sum; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_award_year_sum (award_year_sum_id, award_year_sum_memberinfo_id, award_year_sum_currency, award_year_sum_date, award_year_sum_add_date, award_year_sum_type) FROM stdin;
\.


--
-- Data for Name: epmms_backup; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_backup (backup_id, backup_name, backup_add_date, backup_remark, backup_file, backup_type) FROM stdin;
1	清空数据	2019-01-12 19:29:44	2019-01-12 19:29:43	../db_backup/epmms_181225_2019-01-12_19_29_43_3b3b7cfe61c41ca450d1a86756ee9295_1.bak	1
\.


--
-- Data for Name: epmms_bank; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_bank (bank_id, bank_name, bank_is_preset, bank_is_enable) FROM stdin;
7	财付通账户	0	0
6	支付宝账户	0	0
15	中国工商银行	0	1
16	中国农业银行	0	1
19	中国银行	0	1
18	中国建设银行	\N	1
4	现金	\N	0
10	农村信用社	0	1
\.


--
-- Data for Name: epmms_bankaccount; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_bankaccount (bankaccount_id, bankaccount_bank_id, bankaccount_account, bankaccount_provience, bankaccount_area, bankaccount_branch, bankaccount_mobi, bankaccount_phone, bankaccount_qq, bankaccount_is_enable, bankaccount_name) FROM stdin;
\.


--
-- Data for Name: epmms_buy; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_buy (buy_id, buy_member_id, buy_currency, buy_date, buy_money, buy_status, buy_tax, buy_real_currency, buy_type, buy_remain_currency) FROM stdin;
\.


--
-- Data for Name: epmms_cap_award; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_cap_award (cap_award_id, cap_award_type, cap_award_money, cap_award_date_type) FROM stdin;
\.


--
-- Data for Name: epmms_cap_member_award; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_cap_member_award (cap_member_id, cap_member_type_id, cap_member_award_type, cap_member_award_money, cap_member_date_type) FROM stdin;
\.


--
-- Data for Name: epmms_cap_member_sum; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_cap_member_sum (cap_member_id, cap_member_type_id, cap_member_money, cap_member_date_type, cap_member_sum_type) FROM stdin;
\.


--
-- Data for Name: epmms_cap_sum; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_cap_sum (cap_sum_id, cap_sum_sum_type, cap_sum_money, cap_sum_date_type) FROM stdin;
\.


--
-- Data for Name: epmms_charge; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_charge (charge_id, charge_sn, charge_memberinfo_id, charge_currency, charge_is_verify, charge_add_date, charge_bank_id, charge_bank_account, charge_bank_address, charge_bank_sn, charge_bank_date, charge_bank_account_name, charge_finance_type_id, charge_remark, charge_verify_date, charge_type) FROM stdin;
\.


--
-- Data for Name: epmms_config_auth; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_config_auth (config_auth_id, config_auth_autologin, config_auth_timeout, config_auth_autologin2, config_auth_timeout2, config_auth_captcha) FROM stdin;
1	1	3600	1	3600	1
\.


--
-- Data for Name: epmms_config_award_differential; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_config_award_differential (award_config_id, award_config_l_bill, award_config_level, award_config_currency) FROM stdin;
2	[20,50)	1	0.03
3	[50,100)	2	0.06
4	[100,)	3	0.09
\.


--
-- Data for Name: epmms_config_backup; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_config_backup (config_backup_id, config_backup_days, config_backup_count) FROM stdin;
3	60	3000
\.


--
-- Data for Name: epmms_config_jackpot; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_config_jackpot (config_jackpot_id, config_jackpot_start_balance, config_jackpot_lucky_balance, config_jackpot_end_balance, config_jackpot_fund, config_jackpot_start_order_ratio, config_jackpot_lucky_order_ratio, config_jackpot_end_order_ratio, config_jackpot_start_time, config_jackpot_end_time, config_jackpot_number) FROM stdin;
1	1055151.1800	2637877.9600	1582726.7800	3461418.6000	20.00	50.00	30.00	1547292902	1547293082	1371
\.


--
-- Data for Name: epmms_config_map; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_config_map (config_map_id, config_map_levels, config_map_branch, config_map_orientation, config_map_tree_levels) FROM stdin;
6	4	2	top	6
\.


--
-- Data for Name: epmms_config_pond; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_config_pond (award_config_id, pond_no, pond_assign, pond_period_topped, pond_all_topped, pond_achievement) FROM stdin;
1	1	0.10	150.00	1080.00	[0,3)
4	2	0.20	500.00	5080.00	[3,20)
5	3	0.10	100.00	50800.00	[20,80)
6	4	0.10	2000.00	300000.00	[80,200)
7	5	0.10	5000.00	500000.00	[200,)
\.


--
-- Data for Name: epmms_config_site; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_config_site (config_site_id, config_site_title, config_site_domain, config_site_keyword, config_site_desc, config_site_deny_robots, config_site_is_enable) FROM stdin;
1	业务员销售系统	local	业务员销售系统	业务员销售系统	0	1
\.


--
-- Data for Name: epmms_config_sms; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_config_sms (config_sms_id, config_sms_is_verify, config_sms_is_award, config_sms_award, config_sms_verify, config_sms_is_register, config_sms_register) FROM stdin;
1	0	0	会员{showName}恭喜您获得奖金{award}元\r\n{datetime}\r\n【三宝家】	会员{showName}恭喜您已激活成功，成为团购房正式会员。\r\n{datetime}\r\n【三宝家】	0	会员{showName}恭喜您注册成功,您的登录帐号为{account},您的初始一级密码是{password1},二级密码是{password2},请尽快更改您的密码。\r\n{datetime}\r\n【三宝家】
\.


--
-- Data for Name: epmms_config_smtp; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_config_smtp (config_smtp_id, config_smtp_server, config_smtp_port, config_smtp_account, config_smtp_password, config_smtp_email, config_smtp_enable) FROM stdin;
1	smtp.163.com	25	abcde	111111	abcde@163.com	0
\.


--
-- Data for Name: epmms_config_withdrawals; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_config_withdrawals (config_withdrawals_id, config_withdrawals_type, config_withdrawals_scale, config_withdrawals_tax, config_withdrawals_tax_cap, config_withdrawals_min) FROM stdin;
1	0	10	0.05	0.00	200.00
\.


--
-- Data for Name: epmms_deal; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_deal (deal_id, deal_sale_id, deal_buy_id, deal_currency, deal_date, deal_image, deal_status, deal_image_date, deal_verify_date, deal_sale_member_id, deal_buy_member_id, deal_count, deal_type) FROM stdin;
\.


--
-- Data for Name: epmms_dup; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_dup (dup_id, dup_member_id, dup_money, dup_is_verify, dup_add_date, dup_verify_date) FROM stdin;
\.


--
-- Data for Name: epmms_finance; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_finance (finance_id, finance_award, finance_mod_date, finance_type, finance_memberinfo_id) FROM stdin;
1	100000000.0000	2019-01-12 19:29:44	2	1
2	0.0000	2019-01-12 19:29:44	1	1
3	100000000.0000	2019-01-12 19:29:44	3	1
4	0.0000	2019-01-12 19:29:44	4	1
5	0.0000	2019-01-12 19:29:44	5	1
\.


--
-- Data for Name: epmms_finance_type; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_finance_type (finance_type_id, finance_type_name, finance_type_withdrawals, finance_type_charge) FROM stdin;
2	报单币	0	1
1	钱包币	1	0
3	店补积分	0	0
4	提货币	0	0
5	复消币	0	0
\.


--
-- Data for Name: epmms_foundation; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_foundation (foundation_id, foundation_member_id, foundation_currency, foundation_tax, foundation_real_currency, foundation_reamrk, foundation_is_verify, foundation_add_date, foundation_verify_date) FROM stdin;
\.


--
-- Data for Name: epmms_futou; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_futou (futou_id, futou_member_id, futou_deduct1, futou_deduct2, futou_deduct3, futou_deduct4, futou_deduct, futou_add_date) FROM stdin;
\.


--
-- Data for Name: epmms_game_charge; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_game_charge (charge_id, charge_recommend, charge_name, charge_phone, charge_age, charge_account, charge_money, charge_add_date, charge_is_verify, charge_verify_date) FROM stdin;
3	1	ab	\N	\N	ab	10.00	2014-08-18 12:12:19+08	1	2014-08-19 11:45:29
2	1	aa	\N	\N	aa	100.00	\N	1	2014-08-19 12:01:54
4	1	a1	\N	\N	a1	100.00	2014-08-19 12:06:14+08	0	\N
5	1	a2	\N	\N	a2	100.00	2014-08-19 12:16:29+08	0	\N
\.


--
-- Data for Name: epmms_group; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_group (group_id, group_count, group_seq, group_add_date) FROM stdin;
1	0	1	2014-07-26 22:58:11
\.


--
-- Data for Name: epmms_groupmap; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_groupmap (groupmap_id, groupmap_group_id, groupmap_order, groupmap_verify_date, groupmap_award_date, groupmap_award_count, groupmap_group_date, groupmap_award_period, groupmap_is_award, groupmap_member_id, groupmap_name) FROM stdin;
\.


--
-- Data for Name: epmms_help; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_help (help_id, help_type, help_title, help_content, help_mod_date) FROM stdin;
1	系统使用	销售管理系统使用方法	<p class="MsoTitle">\r\n\t<span style="font-family:宋体;">管理系统</span><span>2014</span><span style="font-family:宋体;">版操作手册</span><span></span> \r\n</p>\r\n<h2 style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n\t<span><span>一、<span>&nbsp;&nbsp;&nbsp; </span></span></span><span style="font-family:宋体;">会员报单</span><span></span> \r\n</h2>\r\n<p class="MsoNormal">\r\n\t<b><span style="font-family:宋体;">有代理中心：</span><span></span></b> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">登录推荐人或代理中心的账号</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">进入</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span>[</span><span style="font-family:宋体;">注册中心</span><span>]&gt;[</span><span style="font-family:宋体;">注册会员</span><span>]</span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">输入</span><span>[</span><span style="font-family:宋体;">登录账号</span><span>]</span><span style="font-family:宋体;">，</span><span>[</span><span style="font-family:宋体;">登录密码</span><span>]</span><span style="font-family:宋体;">，</span><span>[</span><span style="font-family:宋体;">二级密码</span><span>]</span><span style="font-family:宋体;">，</span><span>[</span><span style="font-family:宋体;">昵称</span><span>],[</span><span style="font-family:宋体;">手机号码</span><span>]</span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span>[</span><span style="font-family:宋体;">昵称</span><span>]</span><span style="font-family:宋体;">为便于识别的显示名，可以为姓名或其它名字</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span>[</span><span style="font-family:宋体;">推荐人</span><span>]</span><span style="font-family:宋体;">，</span><span>[</span><span style="font-family:宋体;">接点人</span><span>]</span><span style="font-family:宋体;">，代理中心等</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">选择</span><span>[</span><span style="font-family:宋体;">会员类型</span><span>]</span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">点提</span><span>[</span><span style="font-family:宋体;">提交</span><span>]</span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span><img src="/upload/help/reg.png" alt="" height="362" width="553" /></span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">进入</span><span>[</span><span style="font-family:宋体;">注册中心</span><span>]&gt;[</span><span style="font-family:宋体;">审核会员</span><span>]&gt;[</span><span style="font-family:宋体;">已审核</span><span>]</span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span>[</span><span style="font-family:宋体;">审核</span><span>]</span><span style="font-family:宋体;">刚才注册的会员</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">如果没有审核权限通知代理中心审核</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">继续注册其它会员</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<b><span style="font-family:宋体;">无代理中心：</span><span></span></b> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">登录推荐人的账号</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">进入</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span>[</span><span style="font-family:宋体;">注册中心</span><span>]&gt;[</span><span style="font-family:宋体;">注册会员</span><span>]</span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">输入</span><span>[</span><span style="font-family:宋体;">登录账号</span><span>]</span><span style="font-family:宋体;">，</span><span>[</span><span style="font-family:宋体;">登录密码</span><span>]</span><span style="font-family:宋体;">，</span><span>[</span><span style="font-family:宋体;">二级密码</span><span>]</span><span style="font-family:宋体;">，</span><span>[</span><span style="font-family:宋体;">昵称</span><span>],[</span><span style="font-family:宋体;">手机号码</span><span>]</span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span>[</span><span style="font-family:宋体;">昵称</span><span>]</span><span style="font-family:宋体;">为便于识别的显示名，可以为姓名或其它名字</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span>[</span><span style="font-family:宋体;">推荐人</span><span>]</span><span style="font-family:宋体;">，</span><span>[</span><span style="font-family:宋体;">接点人</span><span>]</span><span style="font-family:宋体;">，代理中心等</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">选择</span><span>[</span><span style="font-family:宋体;">会员类型</span><span>]</span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">点提</span><span>[</span><span style="font-family:宋体;">提交</span><span>]</span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">进入</span><span>[</span><span style="font-family:宋体;">注册中心</span><span>]&gt;[</span><span style="font-family:宋体;">审核会员</span><span>]&gt;[</span><span style="font-family:宋体;">已审核</span><span>]</span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span>[</span><span style="font-family:宋体;">审核</span><span>]</span><span style="font-family:宋体;">刚才注册的会员</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">继续注册其它会员</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<b><span>&nbsp;</span></b> \r\n</p>\r\n<h2 style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n\t<span><span>二、<span>&nbsp;&nbsp;&nbsp; </span></span></span><span style="font-family:宋体;">转账和货币兑换</span><span></span> \r\n</h2>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">转账：</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">进入</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span>[</span><span style="font-family:宋体;">转账中心</span><span>]&gt;[</span><span style="font-family:宋体;">我要转账</span><span>]</span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">选择</span><span>[</span><span style="font-family:宋体;">转出账户类型</span><span>],</span><span style="font-family:宋体;">要从哪个账户中转出货币</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">输入</span><span>[</span><span style="font-family:宋体;">转入会员</span><span>],</span><span style="font-family:宋体;">要转到的会员</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">选择</span><span>[</span><span style="font-family:宋体;">转入账户类型时</span><span>],</span><span style="font-family:宋体;">要转到转入会员的哪个账户</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">输入</span><span>[</span><span style="font-family:宋体;">转账金额</span><span>]</span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">点点</span><span>[</span><span style="font-family:宋体;">添加</span><span>]</span><span style="font-family:宋体;">按钮</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span><img src="/upload/help/transfer.png" alt="" height="221" width="553" /></span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">货币兑换：</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">与转账类似，货币兑换是自己转账给自己</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">进入</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span>[</span><span style="font-family:宋体;">转账中心</span><span>]&gt;[</span><span style="font-family:宋体;">我要转账</span><span>]</span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">选择</span><span>[</span><span style="font-family:宋体;">转出账户类型</span><span>],</span><span style="font-family:宋体;">要从哪个账户中转出货币</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">选择</span><span>[</span><span style="font-family:宋体;">转入账户类型时</span><span>],</span><span style="font-family:宋体;">要转入到哪个账户</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">输入</span><span>[</span><span style="font-family:宋体;">转账金额</span><span>]</span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">点点</span><span>[</span><span style="font-family:宋体;">添加</span><span>]</span><span style="font-family:宋体;">按钮</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span>&nbsp;</span> \r\n</p>\r\n<h2 style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n\t<span><span>三、<span>&nbsp;&nbsp;&nbsp; </span></span></span><span style="font-family:宋体;">提现</span><span></span> \r\n</h2>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">进入</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span>[</span><span style="font-family:宋体;">提现中心</span><span>]&gt;[</span><span style="font-family:宋体;">申请提现</span><span>]</span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">输入要提现的</span><span>[</span><span style="font-family:宋体;">金额</span><span>]</span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">点击</span><span>[</span><span style="font-family:宋体;">添加</span><span>]</span><span style="font-family:宋体;">按钮</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span><img src="/upload/help/withdraw.png" alt="" height="350" width="554" /></span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">等待管理员审核</span><span></span> \r\n</p>\r\n<h2 style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n\t<span><span>四、<span>&nbsp;&nbsp;&nbsp; </span></span></span><span style="font-family:宋体;">充值</span><span></span> \r\n</h2>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">报单和升级需要给电子账户上充值</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">进入</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span>[</span><span style="font-family:宋体;">充值中心</span><span>]&gt;[</span><span style="font-family:宋体;">我要充值</span><span>]</span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">填写</span><span>[</span><span style="font-family:宋体;">充值金额</span><span>]</span><span style="font-family:宋体;">和其它银行汇款信息</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">点击</span><span>[</span><span style="font-family:宋体;">添加</span><span>]</span><span style="font-family:宋体;">按钮</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span><img src="/upload/help/charge.png" alt="" height="307" width="554" /></span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">等待管理员审核</span><span></span> \r\n</p>\r\n<h2 style="margin-left:21.0pt;text-indent:-21.0pt;">\r\n\t<span><span>五、<span>&nbsp;&nbsp;&nbsp; </span></span></span><span style="font-family:宋体;">邮件留言</span><span></span> \r\n</h2>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">系统留言：系统留言即给系统管理员发送邮件</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">进入</span><span></span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span>[</span><span style="font-family:宋体;">信息中心</span><span>]&gt;[</span><span style="font-family:宋体;">系统留言</span><span>]</span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">输入</span><span>[</span><span style="font-family:宋体;">标题</span><span>]</span><span style="font-family:宋体;">和</span><span>[</span><span style="font-family:宋体;">内容</span><span>]</span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span style="font-family:宋体;">点击</span><span>[</span><span style="font-family:宋体;">添加</span><span>]</span> \r\n</p>\r\n<p class="MsoNormal">\r\n\t<span><img src="/upload/help/message.png" alt="" height="320" width="554" /></span><span></span> \r\n</p>	\N
3	公司介绍	公司简介	<pre id="best-content-273166756" class="best-text mb-10">公司简介</pre>	2013-08-12 11:04:52
\.


--
-- Data for Name: epmms_jackpot_info; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_jackpot_info (info_id, info_start_time, info_end_time, info_start_balance, info_lucky_balance, info_end_balance, info_number) FROM stdin;
1	2019-01-12 19:29:02	2019-01-12 19:32:02	1051151.1800	2627877.9600	1576726.7800	1369
2	2019-01-12 19:32:02	2019-01-12 19:35:02	1053151.1800	2632877.9600	1579726.7800	1370
\.


--
-- Data for Name: epmms_jackpot_win_record; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_jackpot_win_record (jackpot_id, jackpot_member_id, jackpot_money, jackpot_type, jackpot_start_time, jackpot_end_time, jackpot_number) FROM stdin;
\.


--
-- Data for Name: epmms_layer; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_layer (layer_id, layer_member_id, layer_layer, layer_left, layer_right, layer_little, layer_pair, layer_first_member, layer_first_order, layer_current_pair, layer_left_count, layer_right_count) FROM stdin;
\.


--
-- Data for Name: epmms_log; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_log (log_id, log_category, log_source, log_operate, log_target, log_value, log_info, log_ip, log_user, log_role, log_add_date, log_status) FROM stdin;
1	operate	会员	清空数据	\N	\N	\N	192.168.31.250	epmms	leader	2019-01-12 19:29:45	0
\.


--
-- Data for Name: epmms_map_edit; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_map_edit (map_edit_id, map_edit_src_member_id, map_edit_dst_member_id, map_edit_add_date, map_edit_verify_date, map_edit_operate, map_edit_info, map_edit_is_verify, map_edit_type, map_edit_dst_order, map_edit_dst_recommend_id) FROM stdin;
\.


--
-- Data for Name: epmms_member_level; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_member_level (member_level_level, member_level_name) FROM stdin;
1	一星
2	二星
3	三星
4	四星
5	五星
6	六星
7	七星
\.


--
-- Data for Name: epmms_member_upgrade; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_member_upgrade (member_upgrade_id, member_upgrade_member_id, member_upgrade_type, member_upgrade_is_verify, member_upgrade_add_date, member_upgrade_verify_date, member_upgrade_period, member_upgrade_old_type, member_upgrade_money) FROM stdin;
\.


--
-- Data for Name: epmms_memberinfo; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_memberinfo (memberinfo_id, memberinfo_account, memberinfo_password, memberinfo_password2, memberinfo_name, memberinfo_nickname, memberinfo_email, memberinfo_mobi, memberinfo_phone, memberinfo_qq, memberinfo_msn, memberinfo_sex, memberinfo_idcard_type, memberinfo_idcard, memberinfo_zipcode, memberinfo_birthday, memberinfo_address_provience, memberinfo_address_area, memberinfo_address_county, memberinfo_address_detail, memberinfo_bank_id, memberinfo_bank_name, memberinfo_bank_account, memberinfo_bank_provience, memberinfo_bank_area, memberinfo_bank_branch, memberinfo_question, memberinfo_answer, memberinfo_memo, memberinfo_is_enable, memberinfo_register_ip, memberinfo_last_ip, memberinfo_last_date, memberinfo_add_date, memberinfo_mod_date, memberinfo_is_agent, memberinfo_is_verify, memberinfo_agent_id, memberinfo_postoffice, memberinfo_init_password, memberinfo_init_password2, memberinfo_type) FROM stdin;
1	root	$2y$13$NMQPU5k2zdp9GLmNxx3xIOemI0cHfpQu2V/enEuUaC1XDTR/VbnwK	$2y$13$r9G10/cs/R7t1vVHNCmEWudjWUUoj2VouhWrx3L7cELgeUZcyPyMO	公司	21322	\N	186	123456789000	\N	\N	0	0	111	\N	\N	云南省			天安门	15	sss	123132123123123	河南省	郑州市	qqq		\N	\N	1	192.168.5.2	192.168.5.2	2019-01-12 16:16:53	1970-11-30 07:02:26	2018-12-13 15:41:51	1	1	\N	\N	\N	\N	\N
\.


--
-- Data for Name: epmms_memberinfo_item; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_memberinfo_item (memberinfo_item_id, memberinfo_item_field, memberinfo_item_title, memberinfo_item_visible, memberinfo_item_required, memberinfo_item_update, memberinfo_item_is_enable, memberinfo_item_order, memberinfo_item_admin, memberinfo_item_view) FROM stdin;
26	membermap_product_id	购买产品	0	0	0	1	100000	0	0
41	memberinfo_last_date	最后登录时间	0	0	0	1	200000	0	1
18	memberinfo_bank_provience	省	0	0	0	1	304	0	0
19	memberinfo_bank_area	市	0	0	0	1	305	0	0
11	memberinfo_address_provience	地址-省	1	0	1	1	310	0	1
12	memberinfo_address_area	地址-市/地区	1	0	1	1	311	0	1
13	memberinfo_address_county	地址-县	1	0	1	1	312	0	1
9	memberinfo_zipcode	邮政编码	0	0	1	1	314	0	1
21	memberinfo_question	密码答案	0	0	0	1	200000	0	0
40	memberinfo_add_date	注册时间	0	0	0	1	100000	1	1
23	memberinfo_memo	备注	1	0	1	1	100000	0	1
22	memberinfo_answer	密码问题	0	0	0	1	200000	0	0
42	memberinfo_last_ip	最后登录IP	0	0	0	1	200000	0	1
20	memberinfo_bank_branch	分行	0	0	1	1	306	0	1
38	memberinfo_password2	二级密码	1	1	1	1	30	0	0
47	memberinfo_password_repeat2	确认二级密码	1	1	1	1	35	0	0
51	membermap_money	注册额	0	0	0	1	100000	0	1
45	memberinfo_password_repeat	确认登录密码	1	1	1	1	25	0	1
17	memberinfo_bank_account	银行帐号	1	0	1	1	308	0	1
28	memberinfo_email	电子邮箱	0	0	0	1	260	0	0
5	memberinfo_msn	微信	0	0	0	1	263	0	0
52	memberinfo_postoffice	邮局	0	0	0	1	100000	0	0
25	memberinfo_qq	QQ帐号	0	0	0	1	262	0	0
30	membermap_recommend_id	推荐人	1	1	1	1	80	1	1
6	memberinfo_sex	性别	1	0	1	1	255	0	1
8	memberinfo_idcard	证件号码	1	0	1	1	253	0	1
15	memberinfo_bank_id	银行	1	0	1	1	303	0	1
16	memberinfo_bank_name	银行户名	1	0	1	1	307	0	1
39	membermap_verify_date	审核时间	0	0	0	1	100000	1	0
35	memberinfo_is_enable	是否启用	0	0	0	1	100000	1	0
10	memberinfo_birthday	生日	0	0	0	1	100000	0	0
43	memberinfo_register_ip	Reg IP	0	0	0	1	200000	0	0
14	memberinfo_address_detail	地址-收货地址	1	0	1	1	313	0	1
7	memberinfo_idcard_type	证件类型	1	0	1	1	252	0	0
49	membermap_percent1	电子币	0	0	0	1	100000	0	0
50	membermap_percent2	注册币	0	0	0	1	100001	0	0
4	memberinfo_phone	电话号码	0	0	1	1	60	0	1
31	membermap_membertype_level	会员类型	1	1	1	1	79	1	1
36	membermap_is_empty	是否空单	0	0	0	1	212	1	0
37	memberinfo_password	登录密码	1	1	1	1	20	0	0
44	memberinfo_is_agent	是否报单中心	0	0	0	1	225	0	0
53	membermap_is_goods	提货方式	0	0	0	1	100000	0	0
33	membermap_agent_id	报单中心	1	1	0	1	230	1	1
3	memberinfo_mobi	手机号码	1	1	0	1	50	0	0
34	memberinfo_account	登录账号	1	1	1	1	8	1	1
1	memberinfo_name	真实姓名	0	0	0	1	9	0	0
2	memberinfo_nickname	姓名	1	1	1	1	11	1	0
32	membermap_order	接点位置	1	1	0	1	211	1	1
55	memberinfo_init_password2	二级密码(明)	0	0	0	0	100000	0	0
54	memberinfo_init_password	一级密码(明)	0	0	0	0	100000	0	0
48	membermap_level	等级	0	0	1	1	100000	1	1
56	memberinfo_type	类型	0	0	0	1	100000	1	1
29	membermap_parent_id	接点人	0	0	0	1	210	1	1
\.


--
-- Data for Name: epmms_membermap; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_membermap (membermap_id, membermap_seq, membermap_parent_id, membermap_recommend_id, membermap_membertype_level, membermap_layer, membermap_order, membermap_path, membermap_recommend_path, membermap_recommend_number, membermap_recommend_under_number, membermap_child_number, membermap_sub_number, membermap_sub_product_count, membermap_recommend_under_product_count, membermap_product_count, membermap_agent_id, membermap_is_verify, membermap_verify_seq, membermap_is_agent, membermap_verify_date, membermap_verify_member_id, membermap_add_date, membermap_is_empty, membermap_money, membermap_bond_id, membermap_level, membermap_recommend_layer, membermap_period, membermap_membertype_level_old, membermap_is_active, membermap_is_delete, membermap_under_product_count, membermap_under_number, membermap_agent_number, membermap_agent_product_count, membermap_recommend_product_count, membermap_agent_type, membermap_layer_order, membermap_reg_member_id, membermap_percent1, membermap_percent2, membermap_no, membermap_buyall, membermap_buy_date, membermap_is_goods, membermap_day_count, membermap_day_level, membermap_futou_date, membermap_verify_seq2, membermap_jifen) FROM stdin;
1	1	\N	\N	2	1	1	/1	/1	0	0	0	0	0	0	2997	\N	1	1	1	2019-01-12 19:29:44	\N	2019-01-12 19:29:44	0	2997.00	\N	\N	1	\N	2	1	0	0	0	0	0	0	1	1	\N	\N	\N	\N	0.00	2018-12-14 18:31:32	\N	2	3	\N	0	\N
\.


--
-- Data for Name: epmms_membermap2; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_membermap2 (membermap_id, membermap_parent_id, membermap_order, membermap_layer, membermap_path, membermap_add_date, membermap_bond_id, membermap_name, membermap_bond_info, membermap_child_number, membermap_layer_order, membermap_is_verify, membermap_bill_count, membermap_membertype, membermap_under_bill_count, membermap_sub_bill_count, membermap_money, membermap_under_number, membermap_is_active, membermap_recommend_id, membermap_period, membermap_verify_date, membermap_recommend_number, membermap_recommend_layer, membermap_recommend_path) FROM stdin;
1	\N	\N	1	/1	2016-08-30 12:11:12	\N	root	1	1	1	1	999	1	1	1	999.00	1	1	\N	\N	2019-01-12 19:29:44	1	1	/1
\.


--
-- Data for Name: epmms_membermap3; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_membermap3 (membermap_id, membermap_name, membermap_member_id, membermap_seq, membermap_is_active, membermap_add_date) FROM stdin;
\.


--
-- Data for Name: epmms_membermap4; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_membermap4 (membermap_id, membermap_member_id, membermap_parent_id, membermap_layer, membermap_order, membermap_path, membermap_add_date, membermap_name, membermap_child_number, membermap_is_verify, membermap_layer_order, membermap_is_active, membermap_gongpai_count, membermap_bond_id, membermap_period) FROM stdin;
\.


--
-- Data for Name: epmms_memberstatus; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_memberstatus (status_id, status_pair, status_pair2, left_product_count, right_product_count, little_product_count, left_count, right_count, status_award_period, left_product_count2, right_product_count2, count2_date, left_product_count3, right_product_count3, count3_date) FROM stdin;
1	0	0	0	0	0	0	0	\N	0	0	2019-01-12	0	0	2019-01-12
\.


--
-- Data for Name: epmms_membertype; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_membertype (membertype_name, membertype_desc, membertype_level, membertype_mod_date, membertype_color, membertype_money, membertype_bill, membertype_agent_money) FROM stdin;
普卡会员	\N	1	2018-12-04 15:01:28	287808	999.00	999	0.00
金卡会员	\N	2	2018-12-11 10:11:52	c94ac9	2997.00	2997	12000.00
\.


--
-- Data for Name: epmms_menu; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_menu (menu_id, menu_name, menu_url, menu_pid, menu_order, menu_mod_date) FROM stdin;
3	系统状态		\N	3	\N
9	站点设置	configSite/update	1	1	2013-01-21 04:05:15
10	系统设置	configAuth/update	1	2	2013-01-21 04:05:38
14	支付接口设置		1	6	\N
17	演示模式		1	9	\N
25	在线会员		3	1	\N
26	最近登录会员		3	2	\N
27	系统环境		3	3	\N
28	站点统计		3	4	\N
50	生成邀请链接		7	5	\N
33	奖金明细	awardPeriodSum/	4	4	\N
21	清空数据	memberinfo/clean	2	4	\N
46	个人信息	memberinfo/view	7	1	\N
19	备份恢复	backup/index	2	2	\N
47	修改资料	memberinfo/updateMy	7	2	\N
67	修改密码	memberinfo/updatePasswordMy	7	20	2013-06-26 17:38:50.775
20	操作日志	log/index	72	3	2013-02-04 20:58:07
69	登录日志	log/indexLogin	72	3	2013-06-26 17:38:50.775
76	产品管理	product/Admin	75	50	2013-06-26 17:38:50.775
15	短信设置	ConfigSms/update	1	7	\N
11	奖金设置	awardConfig/index	1	3	\N
77	产品浏览	product/index	75	10	2013-06-26 17:38:50.775
51	系统使用	help/view?id=1	8	1	\N
53	公司介绍	help/view?id=3	8	3	\N
7	个人中心	\N	\N	5	\N
92	群发邮件	messages/createAll	85	600	\N
1	设置管理	\N	\N	0	2012-12-30 09:11:19
2	系统维护	\N	\N	1	\N
16	注册设置	memberinfoItem/index	1	8	\N
61	帮助设置	help/index	1	11	2013-06-26 17:38:50.775
91	系统留言	messages/createSys	85	400	\N
89	添加产品	product/create	75	0	\N
78	订单管理	orders/index	75	50	2013-06-26 17:38:50.775
102	货币兑换	transfer/createSelf	99	500	\N
94	管理员管理	\N	\N	2	\N
96	管理员列表	userinfo/admin	94	2	\N
95	创建管理员	userinfo/create	94	1	\N
85	信息中心	\N	\N	3	\N
75	产品中心	\N	\N	4	2013-06-26 17:38:50.775
6	注册中心	\N	\N	6	\N
4	财务中心	\N	\N	8	\N
97	申请提现	withdrawals/create	82	1	\N
82	提现中心	\N	\N	10	\N
98	提现记录	withdrawals/index	82	2	\N
99	转账中心	\N	\N	11	\N
100	我要转帐	transfer/create	99	1	\N
101	转帐记录	transfer/index	99	2	\N
72	日志中心	\N	\N	13	2013-06-26 17:38:50.775
8	帮助及其它	\N	\N	14	\N
93	管理邮件	messages/index	85	500	\N
103	权限角色	privilege/authItem/roles	2	1000	\N
104	权限配置	privilege/authItem/permissions	2	1100	\N
68	财务账户	finance/index	4	30	2013-06-26 17:38:50.775
106	拨出比趋势	ratio/index	4	700	\N
107	公司拨款	appropriate/index	4	800	\N
108	图谱编辑	mapEdit/index	6	700	\N
110	转账设置	transferConfig/index	1	200	\N
64	备份设置	configBackup/update	1	7	2013-06-26 17:38:50.775
109	提现设置	configWithdrawals/index	1	600	\N
112	升级级别	supplement/index	6	810	\N
115	电子股趋势	stockTrend/index	4	1000	\N
118	信用基金	foundation/index	4	60	\N
119	游戏充值	gameCharge/index	4	16	\N
120	充值链接	gameCharge/genUrl	4	17	\N
86	添加新闻	announcement/create	85	10	\N
87	新闻管理	announcement/index	85	20	\N
88	新闻列表	announcement/list	85	30	\N
121	新闻分类	announcementClass/index	85	25	\N
122	奖金封顶	capConfig/index	1	4	\N
63	银行帐号	bankaccount/index	4	51	2013-06-26 17:38:50.775
83	我要充值	charge/create	4	52	\N
84	充值记录	charge/index	4	53	\N
123	在线充值	charge/pay	4	52	\N
124	在线充值	charge/pay	4	52	\N
128	<?=Membermap4::model()->modelName?>	membermap4/orgMap	6	55	\N
129	签约管理	signing/index	6	0	\N
130	进入矩阵	dup3600/index	6	500	\N
126	公排图	groupMap/map	6	60	\N
80	推荐图谱	membermap/treeRecommend	6	45	\N
43	推荐<?=Memberinfo::model()->modelName?>	memberinfo/indexRecommend	6	100	\N
133	已激活<?=Memberinfo::model()->modelName?>	memberinfo/index?isVerifyType=1	6	35	\N
134	已激活<?=Memberinfo::model()->modelName?>	memberinfo/indexAgent?isVerifyType=1	6	35	\N
40	未激活<?=Memberinfo::model()->modelName?>	memberinfo/index	6	30	2013-01-08 11:50:53
38	未激活<?=Memberinfo::model()->modelName?>	memberinfo/indexAgent	6	30	\N
136	注册加盟店	memberinfo/createShop	6	0	\N
137	审核加盟店	memberinfo/indexShop	6	0	\N
139	升级级别	supplement/index	6	810	\N
116	工资发放	awardMonthSum/salary	4	40	\N
148	我的奖品	prize/index	4	0	\N
125	B网图谱	membermap2/orgMap	6	53	\N
145	B网复投	membermap2/copy	6	100	\N
142	管理A网	membermap/index	6	4	\N
79	购物车	orders/create	75	32	2013-06-26 17:38:50.775
37	注册<?=Memberinfo::model()->modelName?>	memberinfo/create	6	0	2013-01-11 10:41:22
81	网络图谱	membermap/orgMap	6	50	\N
143	投资B网	membermap2/create	6	1	\N
144	管理B网	membermap2/index	6	2	\N
149	B网推荐图谱	membermap2/treeRecommend	6	0	\N
141	投资A网	membermap/create	6	3	\N
151	我的投资	futou/index	4	0	\N
105	复投记录	memberUpgrade/index	6	600	\N
152	我要投资	futou/create	4	0	\N
155	退出管理	\N	\N	100000	\N
156	安全退出	site/logout	155	1	\N
153	软件中心	\N	\N	100001	\N
154	 股票软件	http://jw.jiewenti.com/downpage/app?userIdMask=3193_68a9&brandCode=0     	155	0	\N
5	报单中心	\N	\N	7	\N
36	申请报单中心	agent/register	5	1	2013-01-11 10:40:22
55	报单中心列表	agent/index	5	5	2013-01-11 10:35:04
140	我要复投	memberUpgrade/create	6	200	\N
159	奖金统计	awardDaySum/	4	5	\N
162	中奖记录	JackpotRecord/Index	160	1	\N
160	竞买抽奖	\N	\N	8	\N
163	财务日志	log/indexFinance	4	50	\N
164	奖金记录	JackpotInfo/Index	160	3	\N
161	抽奖配置	ConfigJackpot/Update	160	0	\N
\.


--
-- Data for Name: epmms_messages; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_messages (messages_id, messages_title, messages_content, messages_add_date, messages_sender_member_id, messages_receiver_member_id, messages_session, messages_member_id, messages_is_read) FROM stdin;
\.


--
-- Data for Name: epmms_mybank; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_mybank (mybank_id, mybank_bank_id, mybank_name, mybank_account, mybank_memberinfo_id, mybank_add_date, mybank_is_default, mybank_address, mybank_memo) FROM stdin;
\.


--
-- Data for Name: epmms_orders; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_orders (orders_id, orders_member_id, orders_currency, orders_status, orders_add_date, orders_is_verify, orders_verify_date, orders_remark, orders_sn, orders_logistics_name, orders_logistics_sn, orders_price) FROM stdin;
\.


--
-- Data for Name: epmms_orders_product; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_orders_product (orders_product_id, orders_product_product_id, orders_product_price, orders_product_orders_id, orders_product_count, orders_product_currency) FROM stdin;
\.


--
-- Data for Name: epmms_parent_relation; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_parent_relation (parent_relation_member_id, parent_relation_upper_id) FROM stdin;
\.


--
-- Data for Name: epmms_pond; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_pond (pond_id, pond_no, pond_currency) FROM stdin;
1	1	0.00
2	2	0.00
3	3	0.00
4	4	0.00
5	5	0.00
\.


--
-- Data for Name: epmms_pond_member_currency; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_pond_member_currency (member_id, pond_no, all_topped) FROM stdin;
1	1	0.00
1	2	0.00
1	3	0.00
1	4	0.00
1	5	0.00
1	1	0.00
1	2	0.00
1	3	0.00
1	4	0.00
1	5	0.00
\.


--
-- Data for Name: epmms_prize; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_prize (prize_id, prize_info, prize_is_verify, prize_verify_date, prize_date, prize_member_id, prize_id_id) FROM stdin;
\.


--
-- Data for Name: epmms_product; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_product (product_id, product_name, product_title, product_price, product_info, product_image_url, product_mod_date, product_stock, product_sale_status, product_sales_amount, product_star, product_class_id, product_cost, product_credit) FROM stdin;
244	测试产品图片	仙肤莱漫妮青春定格原液	999.00	111	product_5c32ffaef019e.jpg	2019-01-11 09:02:27	39840	1	60160	3.00	3	100.00	10
\.


--
-- Data for Name: epmms_product_class; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_product_class (product_class_id, product_name, product_info, product_parent_id) FROM stdin;
3	产品中心	精品新区	0
\.


--
-- Data for Name: epmms_ratio; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_ratio (ratio_id, ratio_value, ratio_add_date) FROM stdin;
\.


--
-- Data for Name: epmms_recommend_relation; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_recommend_relation (recommend_relation_member_id, recommend_relation_upper_id) FROM stdin;
\.


--
-- Data for Name: epmms_rights; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_rights (itemname, type, weight) FROM stdin;
\.


--
-- Data for Name: epmms_sale; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_sale (sale_id, sale_member_id, sale_currency, sale_date, sale_money, sale_remain_currency, sale_status, sale_verify_date, sale_tax, sale_dup, sale_aixin, sale_type) FROM stdin;
\.


--
-- Data for Name: epmms_signing; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_signing (signing_id, signing_member_id, signing_is_verify, signing_date, signing_is_refund, signing_verify_date, signing_type, signing_is_award) FROM stdin;
\.


--
-- Data for Name: epmms_star; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_star (star_id, star_product_id, star_member_id, star_grade, star_date) FROM stdin;
\.


--
-- Data for Name: epmms_stock_trend; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_stock_trend (stock_trend_id, stock_trend_value, stock_trend_date, stock_trend_memberinfo_id) FROM stdin;
\.


--
-- Data for Name: epmms_sum_config; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_sum_config (sum_config_id, sum_type_id, sum_config_date) FROM stdin;
1	2	period
2	3	period
3	1	period
4	4	period
5	5	period
6	6	period
7	7	period
8	2	day
9	3	day
10	1	day
11	4	day
12	5	day
13	6	day
14	7	day
15	2	week
16	3	week
17	1	week
18	4	week
19	5	week
20	6	week
21	7	week
22	2	month
23	3	month
24	1	month
25	4	month
26	5	month
27	6	month
28	7	month
29	2	year
30	3	year
31	1	year
32	4	year
33	5	year
34	6	year
35	7	year
36	2	total
37	3	total
38	1	total
39	4	total
40	5	total
41	6	total
42	7	total
\.


--
-- Data for Name: epmms_sum_type; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_sum_type (sum_type_id, sum_type_name, sum_finance_type_id) FROM stdin;
4	首单奖金	1
5	幸运奖金	1
6	尾单奖金	1
7	日薪	5
1	秒结	1
\.


--
-- Data for Name: epmms_supplement; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_supplement (supplement_id, supplement_currency, supplement_member_id, supplement_date, supplement_member_level) FROM stdin;
\.


--
-- Data for Name: epmms_system_status; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_system_status (system_status_id, system_status_expenses, system_status_income, system_status_last_verify, system_status_start_date, system_status_withdrawals, system_status_verify_seq, system_status_groupmap_seq, system_status_foundation, system_status_verify_seq2, system_status_award_period, system_status_mapedit) FROM stdin;
3	0.00	0.00	\N	2019-01-12 19:29:45	0.00	1	1	0.00	0	0	0
\.


--
-- Data for Name: epmms_transfer; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_transfer (transfer_id, transfer_src_member_id, transfer_src_finance_type, transfer_dst_member_id, transfer_dst_finance_type, transfer_currency, transfer_remark, transfer_is_verify, transfer_add_date, transfer_verify_date, transfer_sn, transfer_tax) FROM stdin;
\.


--
-- Data for Name: epmms_transfer_config; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_transfer_config (transfer_config_id, transfer_config_src_type, transfer_config_dst_type, transfer_config_src_role, transfer_config_dst_role, transfer_config_member_able, transfer_config_relation, transfer_config_tax) FROM stdin;
2	{2,1,4}	{2,4}	{agent,member}	{agent,member}	1	0	0.000
\.


--
-- Data for Name: epmms_userinfo; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_userinfo (userinfo_id, userinfo_account, userinfo_password, userinfo_password2, userinfo_name, userinfo_sex, userinfo_email, userinfo_mobi, userinfo_jobtitle, userinfo_role, userinfo_add_date) FROM stdin;
1	epmms	$2a$13$Pj..awFNC6cFwNfOaBDEcuXNdAFs6pmGbn8GtWToh5HrumHsZyAvK	$2a$13$EchrFhUmWcGD9kdeaUYl..8uDq334ioUukOTDAfB0IrRhjT6AmEDW		0	aa@gmail.com			leader	2013-09-05 22:30:39
\.


--
-- Data for Name: epmms_withdrawals; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.epmms_withdrawals (withdrawals_id, withdrawals_member_id, withdrawals_currency, withdrawals_add_date, withdrawals_is_verify, withdrawals_verify_date, withdrawals_remark, withdrawals_finance_type_id, withdrawals_sn, withdrawals_tax, withdrawals_real_currency, withdrawals_type) FROM stdin;
\.


--
-- Name: award_config_budian_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.award_config_budian_award_config_id_seq', 9, true);


--
-- Name: award_config_day_futou_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.award_config_day_futou_award_config_id_seq', 14, true);


--
-- Name: award_config_dist_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.award_config_dist_award_config_id_seq', 1, false);


--
-- Name: award_config_dot_layer2_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.award_config_dot_layer2_award_config_id_seq', 6, true);


--
-- Name: award_config_dot_layer_150919_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.award_config_dot_layer_150919_award_config_id_seq', 7, false);


--
-- Name: award_config_dot_layer_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.award_config_dot_layer_award_config_id_seq', 25, true);


--
-- Name: award_config_dot_limit_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.award_config_dot_limit_award_config_id_seq', 7, true);


--
-- Name: award_config_dot_matrix2_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.award_config_dot_matrix2_award_config_id_seq', 9, true);


--
-- Name: award_config_dot_recommend_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.award_config_dot_recommend_award_config_id_seq', 3, true);


--
-- Name: award_config_fenhong_level_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.award_config_fenhong_level_award_config_id_seq', 7, true);


--
-- Name: award_config_huzhu_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.award_config_huzhu_award_config_id_seq', 5, true);


--
-- Name: award_config_leader_recommend2_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.award_config_leader_recommend2_award_config_id_seq', 10, true);


--
-- Name: award_config_leader_recommend_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.award_config_leader_recommend_award_config_id_seq', 15, true);


--
-- Name: award_config_static_fenhong_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.award_config_static_fenhong_award_config_id_seq', 13, true);


--
-- Name: award_config_up_down_425_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.award_config_up_down_425_award_config_id_seq', 23, true);


--
-- Name: award_config_upgrade_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.award_config_upgrade_award_config_id_seq', 11, true);


--
-- Name: award_config_xingyun_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.award_config_xingyun_award_config_id_seq', 5, true);


--
-- Name: award_recommend_matrix_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.award_recommend_matrix_award_config_id_seq', 32, true);


--
-- Name: epmms_award_config_dot_matrix_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.epmms_award_config_dot_matrix_award_config_id_seq', 40, true);


--
-- Name: epmms_award_config_dot_matrix_left_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.epmms_award_config_dot_matrix_left_award_config_id_seq', 17, true);


--
-- Name: epmms_award_config_dot_matrix_recommend_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.epmms_award_config_dot_matrix_recommend_award_config_id_seq', 11, false);


--
-- Name: epmms_award_config_dot_matrix_recommend_new_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.epmms_award_config_dot_matrix_recommend_new_award_config_id_seq', 39, true);


--
-- Name: epmms_award_config_layer_full_layer_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.epmms_award_config_layer_full_layer_award_config_id_seq', 3, false);


--
-- Name: epmms_award_config_month_fenhong_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.epmms_award_config_month_fenhong_award_config_id_seq', 7, true);


--
-- Name: epmms_award_config_pair_member_150919_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.epmms_award_config_pair_member_150919_award_config_id_seq', 15, false);


--
-- Name: epmms_award_config_pair_member_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.epmms_award_config_pair_member_award_config_id_seq', 34, true);


--
-- Name: epmms_award_config_prize_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.epmms_award_config_prize_award_config_id_seq', 3, true);


--
-- Name: epmms_award_config_recommend2_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.epmms_award_config_recommend2_award_config_id_seq', 13, false);


--
-- Name: epmms_award_config_recommend3_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.epmms_award_config_recommend3_award_config_id_seq', 14, true);


--
-- Name: epmms_award_config_recommend_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.epmms_award_config_recommend_award_config_id_seq', 14, true);


--
-- Name: table_award_config_id_seq; Type: SEQUENCE SET; Schema: award; Owner: -
--

SELECT pg_catalog.setval('award.table_award_config_id_seq', 3, true);


--
-- Name: award_config_aixinjijin_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.award_config_aixinjijin_award_config_id_seq', 2, true);


--
-- Name: award_config_award_student_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.award_config_award_student_award_config_id_seq', 23, true);


--
-- Name: award_config_chuangye_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.award_config_chuangye_award_config_id_seq', 4, true);


--
-- Name: award_config_corp_fenhong_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.award_config_corp_fenhong_award_config_id_seq', 4, true);


--
-- Name: award_config_gljt_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.award_config_gljt_award_config_id_seq', 3, true);


--
-- Name: award_config_guanli_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.award_config_guanli_award_config_id_seq', 4, true);


--
-- Name: award_config_guanli_upgrade_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.award_config_guanli_upgrade_award_config_id_seq', 4, true);


--
-- Name: award_config_layer_full_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.award_config_layer_full_award_config_id_seq', 3, true);


--
-- Name: award_config_org_up_down_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.award_config_org_up_down_award_config_id_seq', 48, true);


--
-- Name: award_config_pond_pond_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.award_config_pond_pond_id_seq', 7, true);


--
-- Name: award_period; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.award_period', 1, false);


--
-- Name: charge; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.charge', 6, true);


--
-- Name: epmms_activation_record_activation_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_activation_record_activation_id_seq', 1, false);


--
-- Name: epmms_agent_agent_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_agent_agent_id_seq', 2, false);


--
-- Name: epmms_announcement_announcement_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_announcement_announcement_id_seq', 23, true);


--
-- Name: epmms_announcement_class_class_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_announcement_class_class_id_seq', 3, true);


--
-- Name: epmms_appropriate_appropriate_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_appropriate_appropriate_id_seq', 1, false);


--
-- Name: epmms_authitem_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_authitem_id_seq', 404, true);


--
-- Name: epmms_award_config_agent_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_agent_award_config_id_seq', 8, true);


--
-- Name: epmms_award_config_all_fenhong_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_all_fenhong_config_id_seq', 4, true);


--
-- Name: epmms_award_config_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_award_config_id_seq', 170, true);


--
-- Name: epmms_award_config_bonus_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_bonus_award_config_id_seq', 6, true);


--
-- Name: epmms_award_config_dot_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_dot_award_config_id_seq', 28, true);


--
-- Name: epmms_award_config_dot_fuwu_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_dot_fuwu_award_config_id_seq', 3, true);


--
-- Name: epmms_award_config_dot_layer_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_dot_layer_award_config_id_seq', 10, true);


--
-- Name: epmms_award_config_dot_matrix_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_dot_matrix_award_config_id_seq', 36, true);


--
-- Name: epmms_award_config_dot_member_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_dot_member_award_config_id_seq', 4, true);


--
-- Name: epmms_award_config_down_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_down_award_config_id_seq', 4, true);


--
-- Name: epmms_award_config_dup_dot_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_dup_dot_award_config_id_seq', 4, true);


--
-- Name: epmms_award_config_foundation_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_foundation_award_config_id_seq', 3, true);


--
-- Name: epmms_award_config_gl_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_gl_award_config_id_seq', 11, true);


--
-- Name: epmms_award_config_gongpai_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_gongpai_award_config_id_seq', 2, true);


--
-- Name: epmms_award_config_group7_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_group7_award_config_id_seq', 3, true);


--
-- Name: epmms_award_config_group_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_group_award_config_id_seq', 4, true);


--
-- Name: epmms_award_config_huikui_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_huikui_award_config_id_seq', 10, true);


--
-- Name: epmms_award_config_layer_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_layer_award_config_id_seq', 8, true);


--
-- Name: epmms_award_config_layer_dot_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_layer_dot_award_config_id_seq', 15, true);


--
-- Name: epmms_award_config_layer_recommend_dot_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_layer_recommend_dot_award_config_id_seq', 4, true);


--
-- Name: epmms_award_config_leader_down_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_leader_down_award_config_id_seq', 2, true);


--
-- Name: epmms_award_config_lingdao_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_lingdao_award_config_id_seq', 2, true);


--
-- Name: epmms_award_config_org_down_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_org_down_award_config_id_seq', 24, true);


--
-- Name: epmms_award_config_out_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_out_award_config_id_seq', 10, true);


--
-- Name: epmms_award_config_pair_member_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_pair_member_award_config_id_seq', 10, true);


--
-- Name: epmms_award_config_peiyu_upgrade_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_peiyu_upgrade_award_config_id_seq', 4, true);


--
-- Name: epmms_award_config_prize_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_prize_award_config_id_seq', 6, true);


--
-- Name: epmms_award_config_recommend_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_recommend_award_config_id_seq', 5, true);


--
-- Name: epmms_award_config_recommend_layer_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_recommend_layer_award_config_id_seq', 6, true);


--
-- Name: epmms_award_config_recommend_level_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_recommend_level_award_config_id_seq', 9, true);


--
-- Name: epmms_award_config_share_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_share_award_config_id_seq', 2, true);


--
-- Name: epmms_award_config_stock_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_stock_award_config_id_seq', 5, true);


--
-- Name: epmms_award_config_up_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_up_award_config_id_seq', 6, true);


--
-- Name: epmms_award_config_upgrade_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_upgrade_award_config_id_seq', 11, true);


--
-- Name: epmms_award_config_yeji_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_config_yeji_award_config_id_seq', 3, true);


--
-- Name: epmms_award_day_award_day_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_day_award_day_id_seq', 1, false);


--
-- Name: epmms_award_day_fenhong_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_day_fenhong_award_config_id_seq', 13, true);


--
-- Name: epmms_award_day_sum_all_award_day_sum_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_day_sum_all_award_day_sum_id_seq', 1, false);


--
-- Name: epmms_award_day_sum_award_day_sum_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_day_sum_award_day_sum_id_seq', 1, false);


--
-- Name: epmms_award_group_award_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_group_award_group_id_seq', 249, true);


--
-- Name: epmms_award_month_award_month_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_month_award_month_id_seq', 1, false);


--
-- Name: epmms_award_month_sum_all_award_month_sum_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_month_sum_all_award_month_sum_id_seq', 1, false);


--
-- Name: epmms_award_month_sum_award_month_sum_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_month_sum_award_month_sum_id_seq', 1, false);


--
-- Name: epmms_award_month_year_sum_award_year_sum_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_month_year_sum_award_year_sum_id_seq', 1, false);


--
-- Name: epmms_award_period_award_period_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_period_award_period_id_seq', 1, false);


--
-- Name: epmms_award_period_sum_award_period_sum_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_period_sum_award_period_sum_id_seq', 1, false);


--
-- Name: epmms_award_total_award_total_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_total_award_total_id_seq', 1, false);


--
-- Name: epmms_award_total_sum_award_total_sum_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_total_sum_award_total_sum_id_seq', 1, false);


--
-- Name: epmms_award_week_award_week_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_week_award_week_id_seq', 1, false);


--
-- Name: epmms_award_week_sum_all_award_week_sum_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_week_sum_all_award_week_sum_id_seq', 1, false);


--
-- Name: epmms_award_week_sum_award_week_sum_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_week_sum_award_week_sum_id_seq', 1, false);


--
-- Name: epmms_award_year_award_year_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_award_year_award_year_id_seq', 1, false);


--
-- Name: epmms_backup_backup_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_backup_backup_id_seq', 1, true);


--
-- Name: epmms_bank_bank_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_bank_bank_id_seq', 10, true);


--
-- Name: epmms_bankaccount_bankaccount_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_bankaccount_bankaccount_id_seq', 9, true);


--
-- Name: epmms_buy_buy_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_buy_buy_id_seq', 1, false);


--
-- Name: epmms_cap_award_cap_award_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_cap_award_cap_award_id_seq', 13, true);


--
-- Name: epmms_cap_member_award_cap_member_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_cap_member_award_cap_member_id_seq', 56, true);


--
-- Name: epmms_cap_member_cap_sum_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_cap_member_cap_sum_id_seq', 15, true);


--
-- Name: epmms_cap_sum_cap_award_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_cap_sum_cap_award_id_seq', 14, true);


--
-- Name: epmms_charge_charge_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_charge_charge_id_seq', 1, false);


--
-- Name: epmms_config_award_differential_award_differential_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_config_award_differential_award_differential_id_seq', 4, true);


--
-- Name: epmms_config_backup_config_backup_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_config_backup_config_backup_id_seq', 3, true);


--
-- Name: epmms_config_dif_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_config_dif_award_config_id_seq', 9, true);


--
-- Name: epmms_config_dot_m_l_r_award_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_config_dot_m_l_r_award_config_id_seq', 30, true);


--
-- Name: epmms_config_map_config_map_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_config_map_config_map_id_seq', 6, true);


--
-- Name: epmms_config_sms_config_sms_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_config_sms_config_sms_id_seq', 1, true);


--
-- Name: epmms_config_withdrawals_config_withdrawals_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_config_withdrawals_config_withdrawals_id_seq', 1, true);


--
-- Name: epmms_deal_deal_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_deal_deal_id_seq', 1, false);


--
-- Name: epmms_dup_dup_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_dup_dup_id_seq', 1, false);


--
-- Name: epmms_finance_finance_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_finance_finance_id_seq', 10, true);


--
-- Name: epmms_foundation_foundation_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_foundation_foundation_id_seq', 1, false);


--
-- Name: epmms_futou_futou_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_futou_futou_id_seq', 1, false);


--
-- Name: epmms_game_charge_charge_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_game_charge_charge_id_seq', 5, true);


--
-- Name: epmms_group_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_group_group_id_seq', 2, false);


--
-- Name: epmms_groupmap_groupmap_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_groupmap_groupmap_id_seq', 1, false);


--
-- Name: epmms_help_help_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_help_help_id_seq', 3, true);


--
-- Name: epmms_jackpot_info_info_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_jackpot_info_info_id_seq', 2, true);


--
-- Name: epmms_jackpot_win_record_jackpot_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_jackpot_win_record_jackpot_id_seq', 1, false);


--
-- Name: epmms_layer_layer_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_layer_layer_id_seq', 1, false);


--
-- Name: epmms_log_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_log_log_id_seq', 1, true);


--
-- Name: epmms_map_edit_map_edit_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_map_edit_map_edit_id_seq', 1, false);


--
-- Name: epmms_member_upgrade_member_upgrade_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_member_upgrade_member_upgrade_id_seq', 1, false);


--
-- Name: epmms_memberinfo_item_memberinfo_item_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_memberinfo_item_memberinfo_item_id_seq', 53, true);


--
-- Name: epmms_memberinfo_memberinfo_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_memberinfo_memberinfo_id_seq', 2, false);


--
-- Name: epmms_membermap2_membermap_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_membermap2_membermap_id_seq', 2, false);


--
-- Name: epmms_membermap3_membermap_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_membermap3_membermap_id_seq', 1, false);


--
-- Name: epmms_membermap4_membermap_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_membermap4_membermap_id_seq', 1, false);


--
-- Name: epmms_menu_menu_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_menu_menu_id_seq', 164, true);


--
-- Name: epmms_messages_messages_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_messages_messages_id_seq', 1, false);


--
-- Name: epmms_mybank_mybank_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_mybank_mybank_id_seq', 1, false);


--
-- Name: epmms_orders_orders_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_orders_orders_id_seq', 1, false);


--
-- Name: epmms_orders_product_orders_product_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_orders_product_orders_product_id_seq', 1, false);


--
-- Name: epmms_pond_pond_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_pond_pond_id_seq', 5, true);


--
-- Name: epmms_prize_prize_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_prize_prize_id_seq', 1, false);


--
-- Name: epmms_product_class_product_class_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_product_class_product_class_id_seq', 70, true);


--
-- Name: epmms_product_product_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_product_product_id_seq', 244, true);


--
-- Name: epmms_ratio_ratio_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_ratio_ratio_id_seq', 1, false);


--
-- Name: epmms_sale_sale_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_sale_sale_id_seq', 1, false);


--
-- Name: epmms_signing_signing_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_signing_signing_id_seq', 1, false);


--
-- Name: epmms_star_star_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_star_star_id_seq', 1, false);


--
-- Name: epmms_stock_trend_stock_trend_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_stock_trend_stock_trend_id_seq', 1, false);


--
-- Name: epmms_sum_config_sum_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_sum_config_sum_config_id_seq', 42, true);


--
-- Name: epmms_supplement_supplement_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_supplement_supplement_id_seq', 1, false);


--
-- Name: epmms_system_status_system_status_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_system_status_system_status_id_seq', 3, true);


--
-- Name: epmms_transfer_config_transfer_config_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_transfer_config_transfer_config_id_seq', 2, true);


--
-- Name: epmms_transfer_transfer_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_transfer_transfer_id_seq', 1, false);


--
-- Name: epmms_userinfo_userinfo_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_userinfo_userinfo_id_seq', 22, true);


--
-- Name: epmms_withdrawals_withdrawals_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.epmms_withdrawals_withdrawals_id_seq', 1, false);


--
-- Name: gen_member; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.gen_member', 1, false);


--
-- Name: group_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.group_seq', 2, false);


--
-- Name: membermap_add; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.membermap_add', 2, false);


--
-- Name: membermap_verify; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.membermap_verify', 2, false);


--
-- Name: messages_session; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.messages_session', 47, true);


--
-- Name: serial_number; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.serial_number', 79268, true);


--
-- Name: award_config_3070 award_3070_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_3070
    ADD CONSTRAINT award_3070_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_budian award_config_budian_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_budian
    ADD CONSTRAINT award_config_budian_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_day_futou award_config_day_futou_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_day_futou
    ADD CONSTRAINT award_config_day_futou_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_dist award_config_dist_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_dist
    ADD CONSTRAINT award_config_dist_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_dot_layer2 award_config_dot_layer2_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_dot_layer2
    ADD CONSTRAINT award_config_dot_layer2_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_dot_layer_150919 award_config_dot_layer_150919_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_dot_layer_150919
    ADD CONSTRAINT award_config_dot_layer_150919_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_dot_layer award_config_dot_layer_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_dot_layer
    ADD CONSTRAINT award_config_dot_layer_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_dot_limit award_config_dot_limit_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_dot_limit
    ADD CONSTRAINT award_config_dot_limit_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_dot_matrix2 award_config_dot_matrix2_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_dot_matrix2
    ADD CONSTRAINT award_config_dot_matrix2_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_dot_recommend award_config_dot_recommend_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_dot_recommend
    ADD CONSTRAINT award_config_dot_recommend_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_down_up award_config_down_up_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_down_up
    ADD CONSTRAINT award_config_down_up_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_dup award_config_dup_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_dup
    ADD CONSTRAINT award_config_dup_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_fanli award_config_fanli_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_fanli
    ADD CONSTRAINT award_config_fanli_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_fenhong_level award_config_fenhong_level_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_fenhong_level
    ADD CONSTRAINT award_config_fenhong_level_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_huzhu award_config_huzhu_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_huzhu
    ADD CONSTRAINT award_config_huzhu_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_layer_pair_member award_config_layer_pair_member_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_layer_pair_member
    ADD CONSTRAINT award_config_layer_pair_member_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_leader_recommend2 award_config_leader_recommend2_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_leader_recommend2
    ADD CONSTRAINT award_config_leader_recommend2_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_leader_recommend award_config_leader_recommend_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_leader_recommend
    ADD CONSTRAINT award_config_leader_recommend_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_manage award_config_manage_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_manage
    ADD CONSTRAINT award_config_manage_pkey PRIMARY KEY (award_layer);


--
-- Name: award_config_org_up_down award_config_org_up_down_award_config_org_up_down_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_org_up_down
    ADD CONSTRAINT award_config_org_up_down_award_config_org_up_down_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_recommend_type2 award_config_recommend_type2_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_recommend_type2
    ADD CONSTRAINT award_config_recommend_type2_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_signing award_config_signing_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_signing
    ADD CONSTRAINT award_config_signing_pkey PRIMARY KEY (config_id);


--
-- Name: award_config_static_fenghong_recommend award_config_static_fenghong_recommend_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_static_fenghong_recommend
    ADD CONSTRAINT award_config_static_fenghong_recommend_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_static_fenhong award_config_static_fenhong_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_static_fenhong
    ADD CONSTRAINT award_config_static_fenhong_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_up_down_425 award_config_up_down_425_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_up_down_425
    ADD CONSTRAINT award_config_up_down_425_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_upgrade award_config_upgrade_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_upgrade
    ADD CONSTRAINT award_config_upgrade_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_xingyun award_config_xingyun_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_xingyun
    ADD CONSTRAINT award_config_xingyun_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_zhengka award_config_zhengka_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_zhengka
    ADD CONSTRAINT award_config_zhengka_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_recommend_matrix award_recommend_matrix_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_recommend_matrix
    ADD CONSTRAINT award_recommend_matrix_pkey PRIMARY KEY (award_config_id);


--
-- Name: dynamic_fenhong dynamic_fenhong_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.dynamic_fenhong
    ADD CONSTRAINT dynamic_fenhong_pkey PRIMARY KEY (award_config_id);


--
-- Name: dynmmic_fenhong_percent dynmmic_fenhong_percent_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.dynmmic_fenhong_percent
    ADD CONSTRAINT dynmmic_fenhong_percent_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_agent epmms_award_config_agent_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_agent
    ADD CONSTRAINT epmms_award_config_agent_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_day_fenhong epmms_award_config_day_fenhong_epmms_award_day_fenhong_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_day_fenhong
    ADD CONSTRAINT epmms_award_config_day_fenhong_epmms_award_day_fenhong_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_dif epmms_award_config_dif_epmms_config_dif_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_dif
    ADD CONSTRAINT epmms_award_config_dif_epmms_config_dif_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_dot_matrix_left epmms_award_config_dot_matrix_left_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_dot_matrix_left
    ADD CONSTRAINT epmms_award_config_dot_matrix_left_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_dot_matrix epmms_award_config_dot_matrix_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_dot_matrix
    ADD CONSTRAINT epmms_award_config_dot_matrix_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_dot_matrix_recommend_151204 epmms_award_config_dot_matrix_recommend_new_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_dot_matrix_recommend_151204
    ADD CONSTRAINT epmms_award_config_dot_matrix_recommend_new_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_dot_matrix_recommend epmms_award_config_dot_matrix_recommend_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_dot_matrix_recommend
    ADD CONSTRAINT epmms_award_config_dot_matrix_recommend_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_layer_full_layer epmms_award_config_layer_full_layer_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_layer_full_layer
    ADD CONSTRAINT epmms_award_config_layer_full_layer_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_pair_member_150919 epmms_award_config_pair_member_150919_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_pair_member_150919
    ADD CONSTRAINT epmms_award_config_pair_member_150919_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_pair_member epmms_award_config_pair_member_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_pair_member
    ADD CONSTRAINT epmms_award_config_pair_member_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_prize epmms_award_config_prize_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_prize
    ADD CONSTRAINT epmms_award_config_prize_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_recommend2 epmms_award_config_recommend2_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_recommend2
    ADD CONSTRAINT epmms_award_config_recommend2_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_recommend3 epmms_award_config_recommend3_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_recommend3
    ADD CONSTRAINT epmms_award_config_recommend3_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_recommend epmms_award_config_recommend_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.epmms_award_config_recommend
    ADD CONSTRAINT epmms_award_config_recommend_pkey PRIMARY KEY (award_config_id);


--
-- Name: static_fenhong static_fenhong_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.static_fenhong
    ADD CONSTRAINT static_fenhong_pkey PRIMARY KEY (award_config_id);


--
-- Name: award_config_xingyu_futou table_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.award_config_xingyu_futou
    ADD CONSTRAINT table_pkey PRIMARY KEY (award_config_id);


--
-- Name: upgrade_child_condition upgrade_child_condition_pkey; Type: CONSTRAINT; Schema: award; Owner: -
--

ALTER TABLE ONLY award.upgrade_child_condition
    ADD CONSTRAINT upgrade_child_condition_pkey PRIMARY KEY (config_id);


--
-- Name: epmms_award_config_aixinjijin award_config_aixinjijin_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_aixinjijin
    ADD CONSTRAINT award_config_aixinjijin_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_award_student award_config_award_student_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_award_student
    ADD CONSTRAINT award_config_award_student_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_chuangye award_config_chuangye_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_chuangye
    ADD CONSTRAINT award_config_chuangye_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_corp_fenhong award_config_corp_fenhong_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_corp_fenhong
    ADD CONSTRAINT award_config_corp_fenhong_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_gljt award_config_gljt_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_gljt
    ADD CONSTRAINT award_config_gljt_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_guanli award_config_guanli_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_guanli
    ADD CONSTRAINT award_config_guanli_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_guanli_upgrade award_config_guanli_upgrade_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_guanli_upgrade
    ADD CONSTRAINT award_config_guanli_upgrade_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_layer_full award_config_layer_full_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_layer_full
    ADD CONSTRAINT award_config_layer_full_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_org_up_down award_config_org_up_down_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_org_up_down
    ADD CONSTRAINT award_config_org_up_down_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_config_pond award_config_pond_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_config_pond
    ADD CONSTRAINT award_config_pond_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_student_out award_config_student_out_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_student_out
    ADD CONSTRAINT award_config_student_out_pkey PRIMARY KEY (award_config_recommend);


--
-- Name: epmms_bank bank_name; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_bank
    ADD CONSTRAINT bank_name UNIQUE (bank_name);


--
-- Name: epmms_bankaccount bankaccount_account; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_bankaccount
    ADD CONSTRAINT bankaccount_account UNIQUE (bankaccount_account);


--
-- Name: epmms_activation_record epmms_activation_record_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_activation_record
    ADD CONSTRAINT epmms_activation_record_pkey PRIMARY KEY (activation_id);


--
-- Name: epmms_agent epmms_agent_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_agent
    ADD CONSTRAINT epmms_agent_pkey PRIMARY KEY (agent_id);


--
-- Name: epmms_agent_type epmms_agent_type_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_agent_type
    ADD CONSTRAINT epmms_agent_type_pkey PRIMARY KEY (agent_type_level);


--
-- Name: epmms_announcement_class epmms_announcement_class_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_announcement_class
    ADD CONSTRAINT epmms_announcement_class_pkey PRIMARY KEY (class_id);


--
-- Name: epmms_announcement epmms_announcement_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_announcement
    ADD CONSTRAINT epmms_announcement_pkey PRIMARY KEY (announcement_id);


--
-- Name: epmms_appropriate epmms_appropriate_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_appropriate
    ADD CONSTRAINT epmms_appropriate_pkey PRIMARY KEY (appropriate_id);


--
-- Name: epmms_authassignment epmms_authassignment_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_authassignment
    ADD CONSTRAINT epmms_authassignment_pkey PRIMARY KEY (itemname, userid);


--
-- Name: epmms_authitem epmms_authitem_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_authitem
    ADD CONSTRAINT epmms_authitem_pkey PRIMARY KEY (name);


--
-- Name: epmms_authitemchild epmms_authitemchild_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_authitemchild
    ADD CONSTRAINT epmms_authitemchild_pkey PRIMARY KEY (child, parent);


--
-- Name: epmms_award_config_agent epmms_award_config_agent_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_agent
    ADD CONSTRAINT epmms_award_config_agent_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_all_fenhong epmms_award_config_all_fenhong_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_all_fenhong
    ADD CONSTRAINT epmms_award_config_all_fenhong_pkey PRIMARY KEY (config_id);


--
-- Name: epmms_award_config_dot_fuwu epmms_award_config_dot_fuwu_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_dot_fuwu
    ADD CONSTRAINT epmms_award_config_dot_fuwu_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_dot_layer epmms_award_config_dot_layer_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_dot_layer
    ADD CONSTRAINT epmms_award_config_dot_layer_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_dot_matrix epmms_award_config_dot_matrix_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_dot_matrix
    ADD CONSTRAINT epmms_award_config_dot_matrix_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_dot_member epmms_award_config_dot_member_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_dot_member
    ADD CONSTRAINT epmms_award_config_dot_member_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_dot epmms_award_config_dot_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_dot
    ADD CONSTRAINT epmms_award_config_dot_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_down epmms_award_config_down_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_down
    ADD CONSTRAINT epmms_award_config_down_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_dup_dot epmms_award_config_dup_dot_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_dup_dot
    ADD CONSTRAINT epmms_award_config_dup_dot_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_foundation epmms_award_config_foundation_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_foundation
    ADD CONSTRAINT epmms_award_config_foundation_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_gl epmms_award_config_gl_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_gl
    ADD CONSTRAINT epmms_award_config_gl_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_gongpai epmms_award_config_gongpai_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_gongpai
    ADD CONSTRAINT epmms_award_config_gongpai_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_group7 epmms_award_config_group7_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_group7
    ADD CONSTRAINT epmms_award_config_group7_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_group epmms_award_config_group_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_group
    ADD CONSTRAINT epmms_award_config_group_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_huikui epmms_award_config_huikui_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_huikui
    ADD CONSTRAINT epmms_award_config_huikui_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_layer_dot epmms_award_config_layer_dot_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_layer_dot
    ADD CONSTRAINT epmms_award_config_layer_dot_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_layer epmms_award_config_layer_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_layer
    ADD CONSTRAINT epmms_award_config_layer_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_layer_recommend_dot epmms_award_config_layer_recommend_dot_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_layer_recommend_dot
    ADD CONSTRAINT epmms_award_config_layer_recommend_dot_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_leader_down epmms_award_config_leader_down_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_leader_down
    ADD CONSTRAINT epmms_award_config_leader_down_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_lingdao epmms_award_config_lingdao_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_lingdao
    ADD CONSTRAINT epmms_award_config_lingdao_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_org_down epmms_award_config_org_down_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_org_down
    ADD CONSTRAINT epmms_award_config_org_down_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_out epmms_award_config_out_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_out
    ADD CONSTRAINT epmms_award_config_out_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_pair_member epmms_award_config_pair_member_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_pair_member
    ADD CONSTRAINT epmms_award_config_pair_member_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_peiyu_upgrade epmms_award_config_peiyu_upgrade_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_peiyu_upgrade
    ADD CONSTRAINT epmms_award_config_peiyu_upgrade_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config epmms_award_config_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config
    ADD CONSTRAINT epmms_award_config_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_prize epmms_award_config_prize_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_prize
    ADD CONSTRAINT epmms_award_config_prize_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_recommend_layer epmms_award_config_recommend_layer_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_recommend_layer
    ADD CONSTRAINT epmms_award_config_recommend_layer_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_recommend_level epmms_award_config_recommend_level_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_recommend_level
    ADD CONSTRAINT epmms_award_config_recommend_level_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_recommend epmms_award_config_recommend_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_recommend
    ADD CONSTRAINT epmms_award_config_recommend_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_stock epmms_award_config_stock_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_stock
    ADD CONSTRAINT epmms_award_config_stock_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_up epmms_award_config_up_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_up
    ADD CONSTRAINT epmms_award_config_up_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_upgrade epmms_award_config_upgrade_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_upgrade
    ADD CONSTRAINT epmms_award_config_upgrade_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_yeji epmms_award_config_yeji_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_yeji
    ADD CONSTRAINT epmms_award_config_yeji_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_day epmms_award_day_date_award_type_sum_uni; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_day
    ADD CONSTRAINT epmms_award_day_date_award_type_sum_uni UNIQUE (award_day_memberinfo_id, award_day_date, award_day_type_id, award_day_sum_type);


--
-- Name: CONSTRAINT epmms_award_day_date_award_type_sum_uni ON epmms_award_day; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON CONSTRAINT epmms_award_day_date_award_type_sum_uni ON public.epmms_award_day IS '组合候选键';


--
-- Name: epmms_award_config_day_fenhong epmms_award_day_fenhong_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_day_fenhong
    ADD CONSTRAINT epmms_award_day_fenhong_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_day epmms_award_day_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_day
    ADD CONSTRAINT epmms_award_day_pkey PRIMARY KEY (award_day_id);


--
-- Name: epmms_award_day_sum_all epmms_award_day_sum_all_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_day_sum_all
    ADD CONSTRAINT epmms_award_day_sum_all_pkey PRIMARY KEY (award_day_sum_id);


--
-- Name: epmms_award_day_sum epmms_award_day_sum_date_type; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_day_sum
    ADD CONSTRAINT epmms_award_day_sum_date_type UNIQUE (award_day_sum_memberinfo_id, award_day_sum_date, award_day_sum_type);


--
-- Name: epmms_award_day_sum epmms_award_day_sum_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_day_sum
    ADD CONSTRAINT epmms_award_day_sum_pkey PRIMARY KEY (award_day_sum_id);


--
-- Name: epmms_award_group epmms_award_group_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_group
    ADD CONSTRAINT epmms_award_group_pkey PRIMARY KEY (award_group_id);


--
-- Name: epmms_award_month epmms_award_month_date_award_type; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_month
    ADD CONSTRAINT epmms_award_month_date_award_type UNIQUE (award_month_memberinfo_id, award_month_date, award_month_type_id, award_month_sum_type);


--
-- Name: epmms_award_month epmms_award_month_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_month
    ADD CONSTRAINT epmms_award_month_pkey PRIMARY KEY (award_month_id);


--
-- Name: epmms_award_month_sum_all epmms_award_month_sum_all_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_month_sum_all
    ADD CONSTRAINT epmms_award_month_sum_all_pkey PRIMARY KEY (award_month_sum_id);


--
-- Name: epmms_award_month_sum epmms_award_month_sum_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_month_sum
    ADD CONSTRAINT epmms_award_month_sum_pkey PRIMARY KEY (award_month_sum_id);


--
-- Name: epmms_award_year_sum epmms_award_month_year_sum_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_year_sum
    ADD CONSTRAINT epmms_award_month_year_sum_pkey PRIMARY KEY (award_year_sum_id);


--
-- Name: epmms_award_period epmms_award_period_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_period
    ADD CONSTRAINT epmms_award_period_pkey PRIMARY KEY (award_period_id);


--
-- Name: epmms_award_period_sum epmms_award_period_sum_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_period_sum
    ADD CONSTRAINT epmms_award_period_sum_pkey PRIMARY KEY (award_period_sum_id);


--
-- Name: epmms_award_total epmms_award_total_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_total
    ADD CONSTRAINT epmms_award_total_pkey PRIMARY KEY (award_total_id);


--
-- Name: epmms_award_total_sum epmms_award_total_sum_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_total_sum
    ADD CONSTRAINT epmms_award_total_sum_pkey PRIMARY KEY (award_total_sum_id);


--
-- Name: epmms_award_type epmms_award_type_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_type
    ADD CONSTRAINT epmms_award_type_pkey PRIMARY KEY (award_type_id);


--
-- Name: epmms_award_week epmms_award_week_date_type_sum_uni; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_week
    ADD CONSTRAINT epmms_award_week_date_type_sum_uni UNIQUE (award_week_memberinfo_id, award_week_date, award_week_type_id, award_week_sum_type);


--
-- Name: epmms_award_week epmms_award_week_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_week
    ADD CONSTRAINT epmms_award_week_pkey PRIMARY KEY (award_week_id);


--
-- Name: epmms_award_week_sum_all epmms_award_week_sum_all_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_week_sum_all
    ADD CONSTRAINT epmms_award_week_sum_all_pkey PRIMARY KEY (award_week_sum_id);


--
-- Name: epmms_award_week_sum epmms_award_week_sum_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_week_sum
    ADD CONSTRAINT epmms_award_week_sum_pkey PRIMARY KEY (award_week_sum_id);


--
-- Name: epmms_award_year epmms_award_year_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_year
    ADD CONSTRAINT epmms_award_year_pkey PRIMARY KEY (award_year_id);


--
-- Name: epmms_backup epmms_backup_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_backup
    ADD CONSTRAINT epmms_backup_pkey PRIMARY KEY (backup_id);


--
-- Name: epmms_bank epmms_bank_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_bank
    ADD CONSTRAINT epmms_bank_pkey PRIMARY KEY (bank_id);


--
-- Name: epmms_bankaccount epmms_bankaccount_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_bankaccount
    ADD CONSTRAINT epmms_bankaccount_pkey PRIMARY KEY (bankaccount_id);


--
-- Name: epmms_buy epmms_buy_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_buy
    ADD CONSTRAINT epmms_buy_pkey PRIMARY KEY (buy_id);


--
-- Name: epmms_cap_award epmms_cap_award_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_cap_award
    ADD CONSTRAINT epmms_cap_award_pkey PRIMARY KEY (cap_award_id);


--
-- Name: epmms_cap_award epmms_cap_award_type_award_uni; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_cap_award
    ADD CONSTRAINT epmms_cap_award_type_award_uni UNIQUE (cap_award_type, cap_award_date_type);


--
-- Name: epmms_cap_member_award epmms_cap_member_award_epmms_cap_member_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_cap_member_award
    ADD CONSTRAINT epmms_cap_member_award_epmms_cap_member_pkey PRIMARY KEY (cap_member_id);


--
-- Name: epmms_cap_member_sum epmms_cap_member_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_cap_member_sum
    ADD CONSTRAINT epmms_cap_member_pkey PRIMARY KEY (cap_member_id);


--
-- Name: epmms_cap_sum epmms_cap_sum_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_cap_sum
    ADD CONSTRAINT epmms_cap_sum_pkey PRIMARY KEY (cap_sum_id);


--
-- Name: epmms_cap_sum epmms_cap_sum_type_uni; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_cap_sum
    ADD CONSTRAINT epmms_cap_sum_type_uni UNIQUE (cap_sum_sum_type, cap_sum_date_type, cap_sum_money);


--
-- Name: epmms_charge epmms_charge_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_charge
    ADD CONSTRAINT epmms_charge_pkey PRIMARY KEY (charge_id);


--
-- Name: epmms_config_auth epmms_config_auth_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_config_auth
    ADD CONSTRAINT epmms_config_auth_pkey PRIMARY KEY (config_auth_id);


--
-- Name: epmms_config_award_differential epmms_config_award_differential_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_config_award_differential
    ADD CONSTRAINT epmms_config_award_differential_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_config_backup epmms_config_backup_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_config_backup
    ADD CONSTRAINT epmms_config_backup_pkey PRIMARY KEY (config_backup_id);


--
-- Name: epmms_award_config_dif epmms_config_dif_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_dif
    ADD CONSTRAINT epmms_config_dif_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_award_config_recommend_layer_dot epmms_config_dot_m_l_r_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config_recommend_layer_dot
    ADD CONSTRAINT epmms_config_dot_m_l_r_pkey PRIMARY KEY (award_config_id);


--
-- Name: epmms_config_jackpot epmms_config_jackpot_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_config_jackpot
    ADD CONSTRAINT epmms_config_jackpot_pkey PRIMARY KEY (config_jackpot_id);


--
-- Name: epmms_config_map epmms_config_map_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_config_map
    ADD CONSTRAINT epmms_config_map_pkey PRIMARY KEY (config_map_id);


--
-- Name: epmms_config_site epmms_config_site_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_config_site
    ADD CONSTRAINT epmms_config_site_pkey PRIMARY KEY (config_site_id);


--
-- Name: epmms_config_sms epmms_config_sms_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_config_sms
    ADD CONSTRAINT epmms_config_sms_pkey PRIMARY KEY (config_sms_id);


--
-- Name: epmms_config_smtp epmms_config_smtp_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_config_smtp
    ADD CONSTRAINT epmms_config_smtp_pkey PRIMARY KEY (config_smtp_id);


--
-- Name: epmms_config_withdrawals epmms_config_withdrawals_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_config_withdrawals
    ADD CONSTRAINT epmms_config_withdrawals_pkey PRIMARY KEY (config_withdrawals_id);


--
-- Name: epmms_deal epmms_deal_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_deal
    ADD CONSTRAINT epmms_deal_pkey PRIMARY KEY (deal_id);


--
-- Name: epmms_dup epmms_dup_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_dup
    ADD CONSTRAINT epmms_dup_pkey PRIMARY KEY (dup_id);


--
-- Name: epmms_finance_type epmms_finace_type_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_finance_type
    ADD CONSTRAINT epmms_finace_type_pkey PRIMARY KEY (finance_type_id);


--
-- Name: epmms_finance epmms_finance_member_finance_uni; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_finance
    ADD CONSTRAINT epmms_finance_member_finance_uni UNIQUE (finance_memberinfo_id, finance_type);


--
-- Name: epmms_finance epmms_finance_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_finance
    ADD CONSTRAINT epmms_finance_pkey PRIMARY KEY (finance_id);


--
-- Name: epmms_finance_type epmms_finance_type_finance_type_name_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_finance_type
    ADD CONSTRAINT epmms_finance_type_finance_type_name_key UNIQUE (finance_type_name);


--
-- Name: epmms_foundation epmms_foundation_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_foundation
    ADD CONSTRAINT epmms_foundation_pkey PRIMARY KEY (foundation_id);


--
-- Name: epmms_futou epmms_futou_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_futou
    ADD CONSTRAINT epmms_futou_pkey PRIMARY KEY (futou_id);


--
-- Name: epmms_game_charge epmms_game_charge_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_game_charge
    ADD CONSTRAINT epmms_game_charge_pkey PRIMARY KEY (charge_id);


--
-- Name: epmms_group epmms_group_group_seq_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_group
    ADD CONSTRAINT epmms_group_group_seq_key UNIQUE (group_seq);


--
-- Name: epmms_group epmms_group_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_group
    ADD CONSTRAINT epmms_group_pkey PRIMARY KEY (group_id);


--
-- Name: epmms_groupmap epmms_groupmap_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_groupmap
    ADD CONSTRAINT epmms_groupmap_pkey PRIMARY KEY (groupmap_id);


--
-- Name: epmms_help epmms_help_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_help
    ADD CONSTRAINT epmms_help_pkey PRIMARY KEY (help_id);


--
-- Name: epmms_jackpot_info epmms_jackpot_info_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_jackpot_info
    ADD CONSTRAINT epmms_jackpot_info_pkey PRIMARY KEY (info_id);


--
-- Name: epmms_jackpot_win_record epmms_jackpot_win_record_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_jackpot_win_record
    ADD CONSTRAINT epmms_jackpot_win_record_pkey PRIMARY KEY (jackpot_id);


--
-- Name: epmms_layer epmms_layer_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_layer
    ADD CONSTRAINT epmms_layer_pkey PRIMARY KEY (layer_id);


--
-- Name: epmms_log epmms_log_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_log
    ADD CONSTRAINT epmms_log_pkey PRIMARY KEY (log_id);


--
-- Name: epmms_map_edit epmms_map_edit_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_map_edit
    ADD CONSTRAINT epmms_map_edit_pkey PRIMARY KEY (map_edit_id);


--
-- Name: epmms_member_level epmms_member_level_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_member_level
    ADD CONSTRAINT epmms_member_level_pkey PRIMARY KEY (member_level_level);


--
-- Name: epmms_member_upgrade epmms_member_upgrade_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_member_upgrade
    ADD CONSTRAINT epmms_member_upgrade_pkey PRIMARY KEY (member_upgrade_id);


--
-- Name: epmms_memberinfo_item epmms_memberinfo_item_field; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_memberinfo_item
    ADD CONSTRAINT epmms_memberinfo_item_field UNIQUE (memberinfo_item_field);


--
-- Name: epmms_memberinfo_item epmms_memberinfo_item_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_memberinfo_item
    ADD CONSTRAINT epmms_memberinfo_item_pkey PRIMARY KEY (memberinfo_item_id);


--
-- Name: epmms_memberinfo epmms_memberinfo_memberinfo_account_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_memberinfo
    ADD CONSTRAINT epmms_memberinfo_memberinfo_account_key UNIQUE (memberinfo_account);


--
-- Name: epmms_memberinfo epmms_memberinfo_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_memberinfo
    ADD CONSTRAINT epmms_memberinfo_pkey PRIMARY KEY (memberinfo_id);


--
-- Name: epmms_membermap2 epmms_membermap2_membermap_path_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap2
    ADD CONSTRAINT epmms_membermap2_membermap_path_key UNIQUE (membermap_path);


--
-- Name: epmms_membermap2 epmms_membermap2_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap2
    ADD CONSTRAINT epmms_membermap2_pkey PRIMARY KEY (membermap_id);


--
-- Name: epmms_membermap3 epmms_membermap3_membermap_seq_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap3
    ADD CONSTRAINT epmms_membermap3_membermap_seq_key UNIQUE (membermap_seq);


--
-- Name: epmms_membermap3 epmms_membermap3_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap3
    ADD CONSTRAINT epmms_membermap3_pkey PRIMARY KEY (membermap_id);


--
-- Name: epmms_membermap4 epmms_membermap4_idx; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap4
    ADD CONSTRAINT epmms_membermap4_idx UNIQUE (membermap_parent_id, membermap_order);


--
-- Name: epmms_membermap4 epmms_membermap4_membermap_path_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap4
    ADD CONSTRAINT epmms_membermap4_membermap_path_key UNIQUE (membermap_path);


--
-- Name: epmms_membermap4 epmms_membermap4_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap4
    ADD CONSTRAINT epmms_membermap4_pkey PRIMARY KEY (membermap_id);


--
-- Name: epmms_membermap epmms_membermap_membermap_no_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap
    ADD CONSTRAINT epmms_membermap_membermap_no_key UNIQUE (membermap_no);


--
-- Name: epmms_membermap epmms_membermap_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap
    ADD CONSTRAINT epmms_membermap_pkey PRIMARY KEY (membermap_id);


--
-- Name: epmms_memberstatus epmms_memberstatus_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_memberstatus
    ADD CONSTRAINT epmms_memberstatus_pkey PRIMARY KEY (status_id);


--
-- Name: epmms_membertype epmms_membertype_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membertype
    ADD CONSTRAINT epmms_membertype_pkey PRIMARY KEY (membertype_level);


--
-- Name: epmms_menu epmms_menu_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_menu
    ADD CONSTRAINT epmms_menu_pkey PRIMARY KEY (menu_id);


--
-- Name: epmms_messages epmms_messages_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_messages
    ADD CONSTRAINT epmms_messages_pkey PRIMARY KEY (messages_id);


--
-- Name: epmms_orders epmms_orders_orders_sn_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_orders
    ADD CONSTRAINT epmms_orders_orders_sn_key UNIQUE (orders_sn);


--
-- Name: epmms_orders epmms_orders_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_orders
    ADD CONSTRAINT epmms_orders_pkey PRIMARY KEY (orders_id);


--
-- Name: epmms_orders_product epmms_orders_product_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_orders_product
    ADD CONSTRAINT epmms_orders_product_pkey PRIMARY KEY (orders_product_id);


--
-- Name: epmms_parent_relation epmms_parent_relation_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_parent_relation
    ADD CONSTRAINT epmms_parent_relation_pkey PRIMARY KEY (parent_relation_upper_id, parent_relation_member_id);


--
-- Name: epmms_pond epmms_pond_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_pond
    ADD CONSTRAINT epmms_pond_pkey PRIMARY KEY (pond_id);


--
-- Name: epmms_prize epmms_prize_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_prize
    ADD CONSTRAINT epmms_prize_pkey PRIMARY KEY (prize_id);


--
-- Name: epmms_product_class epmms_product_class_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_product_class
    ADD CONSTRAINT epmms_product_class_pkey PRIMARY KEY (product_class_id);


--
-- Name: epmms_product epmms_product_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_product
    ADD CONSTRAINT epmms_product_pkey PRIMARY KEY (product_id);


--
-- Name: epmms_ratio epmms_ratio_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_ratio
    ADD CONSTRAINT epmms_ratio_pkey PRIMARY KEY (ratio_id);


--
-- Name: epmms_recommend_relation epmms_recommend_relation_idx; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_recommend_relation
    ADD CONSTRAINT epmms_recommend_relation_idx PRIMARY KEY (recommend_relation_upper_id, recommend_relation_member_id);


--
-- Name: epmms_rights epmms_rights_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_rights
    ADD CONSTRAINT epmms_rights_pkey PRIMARY KEY (itemname);


--
-- Name: epmms_sale epmms_sale_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_sale
    ADD CONSTRAINT epmms_sale_pkey PRIMARY KEY (sale_id);


--
-- Name: epmms_signing epmms_signing_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_signing
    ADD CONSTRAINT epmms_signing_pkey PRIMARY KEY (signing_id);


--
-- Name: epmms_star epmms_star_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_star
    ADD CONSTRAINT epmms_star_pkey PRIMARY KEY (star_id);


--
-- Name: epmms_stock_trend epmms_stock_trend_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_stock_trend
    ADD CONSTRAINT epmms_stock_trend_pkey PRIMARY KEY (stock_trend_id);


--
-- Name: epmms_sum_config epmms_sum_config_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_sum_config
    ADD CONSTRAINT epmms_sum_config_pkey PRIMARY KEY (sum_config_id);


--
-- Name: epmms_sum_type epmms_sum_type_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_sum_type
    ADD CONSTRAINT epmms_sum_type_pkey PRIMARY KEY (sum_type_id);


--
-- Name: epmms_sum_type epmms_sum_type_sum_type_name_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_sum_type
    ADD CONSTRAINT epmms_sum_type_sum_type_name_key UNIQUE (sum_type_name);


--
-- Name: epmms_supplement epmms_supplement_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_supplement
    ADD CONSTRAINT epmms_supplement_pkey PRIMARY KEY (supplement_id);


--
-- Name: epmms_system_status epmms_system_status_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_system_status
    ADD CONSTRAINT epmms_system_status_pkey PRIMARY KEY (system_status_id);


--
-- Name: epmms_transfer_config epmms_transfer_config_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_transfer_config
    ADD CONSTRAINT epmms_transfer_config_pkey PRIMARY KEY (transfer_config_id);


--
-- Name: epmms_transfer epmms_transfer_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_transfer
    ADD CONSTRAINT epmms_transfer_pkey PRIMARY KEY (transfer_id);


--
-- Name: epmms_transfer epmms_transfer_transfer_no_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_transfer
    ADD CONSTRAINT epmms_transfer_transfer_no_key UNIQUE (transfer_sn);


--
-- Name: epmms_userinfo epmms_userinfo_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_userinfo
    ADD CONSTRAINT epmms_userinfo_pkey PRIMARY KEY (userinfo_id);


--
-- Name: epmms_withdrawals epmms_withdrawals_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_withdrawals
    ADD CONSTRAINT epmms_withdrawals_pkey PRIMARY KEY (withdrawals_id);


--
-- Name: epmms_membermap membermap_verify_seq; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap
    ADD CONSTRAINT membermap_verify_seq UNIQUE (membermap_verify_seq);


--
-- Name: epmms_membertype membertype_name; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membertype
    ADD CONSTRAINT membertype_name UNIQUE (membertype_name);


--
-- Name: epmms_mybank mybank_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_mybank
    ADD CONSTRAINT mybank_pkey PRIMARY KEY (mybank_id);


--
-- Name: epmms_product product_name; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_product
    ADD CONSTRAINT product_name UNIQUE (product_name);


--
-- Name: epmms_userinfo userinfo_account; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_userinfo
    ADD CONSTRAINT userinfo_account UNIQUE (userinfo_account);


--
-- Name: agent_memberinfo_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX agent_memberinfo_id ON public.epmms_agent USING btree (agent_memberinfo_id);


--
-- Name: agentcharge_agent_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX agentcharge_agent_id ON public.epmms_charge USING btree (charge_memberinfo_id);


--
-- Name: award_config_type_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX award_config_type_id ON public.epmms_award_config USING btree (award_config_type_id);


--
-- Name: award_period_memberinfo_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX award_period_memberinfo_id ON public.epmms_award_day USING btree (award_day_memberinfo_id);


--
-- Name: award_period_memberinfo_id1; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX award_period_memberinfo_id1 ON public.epmms_award_month USING btree (award_month_memberinfo_id);


--
-- Name: award_period_memberinfo_id3; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX award_period_memberinfo_id3 ON public.epmms_award_week USING btree (award_week_memberinfo_id);


--
-- Name: award_period_sum_src_memberinfo_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX award_period_sum_src_memberinfo_id ON public.epmms_award_period_sum USING btree (award_period_sum_src_memberinfo_id);


--
-- Name: bankaccount_bank_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX bankaccount_bank_id ON public.epmms_bankaccount USING btree (bankaccount_bank_id);


--
-- Name: child; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX child ON public.epmms_authitemchild USING btree (child);


--
-- Name: epmms_award_day_sum_all_idx; Type: INDEX; Schema: public; Owner: -
--

CREATE UNIQUE INDEX epmms_award_day_sum_all_idx ON public.epmms_award_day_sum_all USING btree (award_day_sum_memberinfo_id, award_day_sum_date);


--
-- Name: epmms_award_month_sum_all_member_date_type_id; Type: INDEX; Schema: public; Owner: -
--

CREATE UNIQUE INDEX epmms_award_month_sum_all_member_date_type_id ON public.epmms_award_month_sum_all USING btree (award_month_sum_memberinfo_id, award_month_sum_date);


--
-- Name: epmms_award_month_sum_member_date_type_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX epmms_award_month_sum_member_date_type_id ON public.epmms_award_month_sum USING btree (award_month_sum_memberinfo_id, award_month_sum_date, award_month_sum_type);


--
-- Name: epmms_award_period_idx; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX epmms_award_period_idx ON public.epmms_award_period USING btree (award_period_period);


--
-- Name: epmms_award_period_member_period_type_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX epmms_award_period_member_period_type_id ON public.epmms_award_period USING btree (award_period_memberinfo_id, award_period_period, award_period_type_id);


--
-- Name: epmms_award_period_sum_memberinfo_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX epmms_award_period_sum_memberinfo_id ON public.epmms_award_day_sum USING btree (award_day_sum_memberinfo_id);


--
-- Name: epmms_award_period_sum_memberinfo_id1; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX epmms_award_period_sum_memberinfo_id1 ON public.epmms_award_month_sum USING btree (award_month_sum_memberinfo_id);


--
-- Name: epmms_award_period_sum_period_type; Type: INDEX; Schema: public; Owner: -
--

CREATE UNIQUE INDEX epmms_award_period_sum_period_type ON public.epmms_award_period_sum USING btree (award_period_sum_memberinfo_id, award_period_sum_period, award_period_sum_type);


--
-- Name: epmms_award_total_award_period_memberinfo_id1; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX epmms_award_total_award_period_memberinfo_id1 ON public.epmms_award_total USING btree (award_total_memberinfo_id);


--
-- Name: epmms_award_total_member_type_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX epmms_award_total_member_type_id ON public.epmms_award_total USING btree (award_total_memberinfo_id, award_total_type_id, award_total_sum_type);


--
-- Name: epmms_award_total_sum_epmms_award_period_sum_memberinfo_id1; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX epmms_award_total_sum_epmms_award_period_sum_memberinfo_id1 ON public.epmms_award_total_sum USING btree (award_total_sum_memberinfo_id);


--
-- Name: epmms_award_total_sum_member_type_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX epmms_award_total_sum_member_type_id ON public.epmms_award_total_sum USING btree (award_total_sum_memberinfo_id, award_total_sum_type);


--
-- Name: epmms_award_week_sum_all_date_sum; Type: INDEX; Schema: public; Owner: -
--

CREATE UNIQUE INDEX epmms_award_week_sum_all_date_sum ON public.epmms_award_week_sum_all USING btree (award_week_sum_memberinfo_id, award_week_sum_date);


--
-- Name: epmms_award_week_sum_date_sum; Type: INDEX; Schema: public; Owner: -
--

CREATE UNIQUE INDEX epmms_award_week_sum_date_sum ON public.epmms_award_week_sum USING btree (award_week_sum_memberinfo_id, award_week_sum_date, award_week_sum_type);


--
-- Name: epmms_award_year_date_type_idx; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX epmms_award_year_date_type_idx ON public.epmms_award_year USING btree (award_year_memberinfo_id, award_year_date, award_year_type_id, award_year_sum_type);


--
-- Name: epmms_award_year_memberinfo_id_idx; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX epmms_award_year_memberinfo_id_idx ON public.epmms_award_year USING btree (award_year_memberinfo_id);


--
-- Name: epmms_award_year_sum_member_type_Id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX "epmms_award_year_sum_member_type_Id" ON public.epmms_award_year_sum USING btree (award_year_sum_memberinfo_id, award_year_sum_date, award_year_sum_type);


--
-- Name: epmms_layer_idx; Type: INDEX; Schema: public; Owner: -
--

CREATE UNIQUE INDEX epmms_layer_idx ON public.epmms_layer USING btree (layer_member_id, layer_layer);


--
-- Name: epmms_membermap_idx; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX epmms_membermap_idx ON public.epmms_membermap USING btree (membermap_id, membermap_membertype_level);


--
-- Name: epmms_parent_relation_idx; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX epmms_parent_relation_idx ON public.epmms_parent_relation USING btree (parent_relation_member_id);


--
-- Name: epmms_star_idx; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX epmms_star_idx ON public.epmms_star USING btree (star_product_id, star_grade);


--
-- Name: epmms_star_idx1; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX epmms_star_idx1 ON public.epmms_star USING btree (star_member_id, star_product_id);


--
-- Name: memberinfo_bank_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX memberinfo_bank_id ON public.epmms_memberinfo USING btree (memberinfo_bank_id);


--
-- Name: membermap_agent_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX membermap_agent_id ON public.epmms_membermap USING btree (membermap_agent_id);


--
-- Name: membermap_parent_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX membermap_parent_id ON public.epmms_membermap USING btree (membermap_parent_id);


--
-- Name: membermap_recommend_id; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX membermap_recommend_id ON public.epmms_membermap USING btree (membermap_recommend_id);


--
-- Name: menu_pid; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX menu_pid ON public.epmms_menu USING btree (menu_pid);


--
-- Name: parent_order; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX parent_order ON public.epmms_membermap USING btree (membermap_parent_id, membermap_order);


--
-- Name: period_idx; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX period_idx ON public.epmms_award_period_sum USING btree (award_period_sum_period);


--
-- Name: userinfo_role; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX userinfo_role ON public.epmms_userinfo USING btree (userinfo_role);


--
-- Name: epmms_award_day epmms_award_day_award_sum_ins; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_day_award_sum_ins BEFORE INSERT ON public.epmms_award_day FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_day_award_sum_ins_tr();


--
-- Name: TRIGGER epmms_award_day_award_sum_ins ON epmms_award_day; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TRIGGER epmms_award_day_award_sum_ins ON public.epmms_award_day IS '更新每日各项奖金累计';


--
-- Name: epmms_award_day epmms_award_day_award_sum_total_after; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_day_award_sum_total_after AFTER INSERT OR UPDATE ON public.epmms_award_day FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_day_award_sum_total_after_tr();


--
-- Name: epmms_award_day_sum_all epmms_award_day_sum_all_tr; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_day_sum_all_tr BEFORE INSERT ON public.epmms_award_day_sum_all FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_day_sum_all_replace();


--
-- Name: epmms_award_day_sum epmms_award_day_sum_ins_sum; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_day_sum_ins_sum BEFORE INSERT ON public.epmms_award_day_sum FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_day_sum_ins_sum_tr();


--
-- Name: epmms_award_day_sum epmms_award_day_sum_ins_sum_after; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_day_sum_ins_sum_after AFTER INSERT OR UPDATE ON public.epmms_award_day_sum FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_day_sum_ins_sum_after_tr();


--
-- Name: epmms_award_month epmms_award_month_award_sum_ins; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_month_award_sum_ins BEFORE INSERT ON public.epmms_award_month FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_month_award_sum_ins_tr();


--
-- Name: epmms_award_month epmms_award_month_award_sum_total_after; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_month_award_sum_total_after AFTER INSERT OR UPDATE ON public.epmms_award_month FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_month_award_total_sum_after_tr();


--
-- Name: epmms_award_month_sum_all epmms_award_month_sum_all_tr; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_month_sum_all_tr BEFORE INSERT ON public.epmms_award_month_sum_all FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_month_sum_all_tr_replace();


--
-- Name: epmms_award_month_sum epmms_award_month_sum_ins_sum; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_month_sum_ins_sum BEFORE INSERT ON public.epmms_award_month_sum FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_month_sum_ins_sum_tr();


--
-- Name: epmms_award_month_sum epmms_award_month_sum_total_sum_after; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_month_sum_total_sum_after AFTER INSERT OR UPDATE ON public.epmms_award_month_sum FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_month_sum_total_sum_after_tr();


--
-- Name: epmms_award_period epmms_award_period_date_type_sum; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_period_date_type_sum AFTER INSERT OR UPDATE ON public.epmms_award_period FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_period_date_type_sum_tr();


--
-- Name: TRIGGER epmms_award_period_date_type_sum ON epmms_award_period; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON TRIGGER epmms_award_period_date_type_sum ON public.epmms_award_period IS '产生每个奖金时，进行每项奖金的汇总';


--
-- Name: epmms_award_period_sum epmms_award_period_sum_sum_award_after; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_period_sum_sum_award_after AFTER INSERT OR UPDATE ON public.epmms_award_period_sum FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_period_sum_sum_award_after_tr();


--
-- Name: epmms_award_period_sum epmms_award_period_sum_tr; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_period_sum_tr BEFORE INSERT ON public.epmms_award_period_sum FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_period_sum_tr_ins();


--
-- Name: epmms_award_period epmms_award_period_tr; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_period_tr BEFORE INSERT ON public.epmms_award_period FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_period_tr_ins();


--
-- Name: epmms_award_total epmms_award_total_award_sum_before; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_total_award_sum_before BEFORE INSERT ON public.epmms_award_total FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_total_award_sum_before_tr();


--
-- Name: epmms_award_total_sum epmms_award_total_sum_award_after; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_total_sum_award_after AFTER INSERT OR UPDATE ON public.epmms_award_total_sum FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_total_sum_award_after_tr();


--
-- Name: epmms_award_total_sum epmms_award_total_sum_before; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_total_sum_before BEFORE INSERT ON public.epmms_award_total_sum FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_total_sum_before_tr();


--
-- Name: epmms_award_week epmms_award_week_award_sum_ins; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_week_award_sum_ins BEFORE INSERT ON public.epmms_award_week FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_week_award_sum_ins_tr();


--
-- Name: epmms_award_week epmms_award_week_award_sum_total_after; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_week_award_sum_total_after AFTER INSERT OR UPDATE ON public.epmms_award_week FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_week_award_sum_total_after_tr();


--
-- Name: epmms_award_week_sum_all epmms_award_week_sum_all_ins_sum; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_week_sum_all_ins_sum BEFORE INSERT ON public.epmms_award_week_sum_all FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_week_sum_all_replace();


--
-- Name: epmms_award_week_sum epmms_award_week_sum_ins_sum; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_week_sum_ins_sum BEFORE INSERT ON public.epmms_award_week_sum FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_week_sum_ins_sum_tr();


--
-- Name: epmms_award_week_sum epmms_award_week_sum_ins_sum_after; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_week_sum_ins_sum_after AFTER INSERT OR UPDATE ON public.epmms_award_week_sum FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_week_sum_ins_sum_after_tr();


--
-- Name: epmms_award_year epmms_award_year_award_sum_ins; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_year_award_sum_ins BEFORE INSERT ON public.epmms_award_year FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_year_award_sum_ins_tr();


--
-- Name: epmms_award_year epmms_award_year_award_sum_total_after; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_year_award_sum_total_after AFTER INSERT OR UPDATE ON public.epmms_award_year FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_year_award_sum_total_after_tr();


--
-- Name: epmms_award_year_sum epmms_award_year_sum_ins_sum; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_year_sum_ins_sum BEFORE INSERT ON public.epmms_award_year_sum FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_year_sum_ins_sum_tr();


--
-- Name: epmms_award_year_sum epmms_award_year_sum_total_sum_after; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_award_year_sum_total_sum_after AFTER INSERT OR UPDATE ON public.epmms_award_year_sum FOR EACH ROW EXECUTE PROCEDURE public.epmms_award_year_sum_total_sum_after_tr();


--
-- Name: epmms_finance epmms_finance_replace_before; Type: TRIGGER; Schema: public; Owner: -
--

CREATE TRIGGER epmms_finance_replace_before BEFORE INSERT ON public.epmms_finance FOR EACH ROW EXECUTE PROCEDURE public.epmms_finance_replace_before_tr();


--
-- Name: epmms_agent epmms_agent_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_agent
    ADD CONSTRAINT epmms_agent_fk FOREIGN KEY (agent_memberinfo_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_agent epmms_agent_fk1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_agent
    ADD CONSTRAINT epmms_agent_fk1 FOREIGN KEY (agent_type) REFERENCES public.epmms_agent_type(agent_type_level);


--
-- Name: epmms_agent epmms_agent_fk2; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_agent
    ADD CONSTRAINT epmms_agent_fk2 FOREIGN KEY (agent_memberinfo_id) REFERENCES public.epmms_membermap(membermap_id);


--
-- Name: epmms_announcement epmms_announcement_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_announcement
    ADD CONSTRAINT epmms_announcement_fk FOREIGN KEY (announcement_userinfo_id) REFERENCES public.epmms_userinfo(userinfo_id);


--
-- Name: epmms_announcement epmms_announcement_fk1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_announcement
    ADD CONSTRAINT epmms_announcement_fk1 FOREIGN KEY (announcement_class) REFERENCES public.epmms_announcement_class(class_id);


--
-- Name: epmms_appropriate epmms_appropriate_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_appropriate
    ADD CONSTRAINT epmms_appropriate_fk FOREIGN KEY (appropriate_finance_type_id) REFERENCES public.epmms_finance_type(finance_type_id);


--
-- Name: epmms_appropriate epmms_appropriate_fk1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_appropriate
    ADD CONSTRAINT epmms_appropriate_fk1 FOREIGN KEY (appropriate_memberinfo_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_authassignment epmms_authassignment_ibfk_1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_authassignment
    ADD CONSTRAINT epmms_authassignment_ibfk_1 FOREIGN KEY (itemname) REFERENCES public.epmms_authitem(name) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: epmms_authitemchild epmms_authitemchild_ibfk_1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_authitemchild
    ADD CONSTRAINT epmms_authitemchild_ibfk_1 FOREIGN KEY (parent) REFERENCES public.epmms_authitem(name) MATCH FULL ON DELETE CASCADE;


--
-- Name: epmms_authitemchild epmms_authitemchild_ibfk_2; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_authitemchild
    ADD CONSTRAINT epmms_authitemchild_ibfk_2 FOREIGN KEY (child) REFERENCES public.epmms_authitem(name) MATCH FULL ON DELETE CASCADE;


--
-- Name: epmms_award_config epmms_award_config_ibfk_1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_config
    ADD CONSTRAINT epmms_award_config_ibfk_1 FOREIGN KEY (award_config_type_id) REFERENCES public.epmms_award_type(award_type_id) MATCH FULL ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: epmms_award_day epmms_award_day_ibfk_2; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_day
    ADD CONSTRAINT epmms_award_day_ibfk_2 FOREIGN KEY (award_day_memberinfo_id) REFERENCES public.epmms_memberinfo(memberinfo_id) MATCH FULL;


--
-- Name: epmms_award_day_sum_all epmms_award_day_sum_all_ibfk_2; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_day_sum_all
    ADD CONSTRAINT epmms_award_day_sum_all_ibfk_2 FOREIGN KEY (award_day_sum_memberinfo_id) REFERENCES public.epmms_memberinfo(memberinfo_id) MATCH FULL;


--
-- Name: epmms_award_day_sum epmms_award_day_sum_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_day_sum
    ADD CONSTRAINT epmms_award_day_sum_fk FOREIGN KEY (award_day_sum_type) REFERENCES public.epmms_sum_type(sum_type_id);


--
-- Name: epmms_award_day_sum epmms_award_day_sum_ibfk_2; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_day_sum
    ADD CONSTRAINT epmms_award_day_sum_ibfk_2 FOREIGN KEY (award_day_sum_memberinfo_id) REFERENCES public.epmms_memberinfo(memberinfo_id) MATCH FULL;


--
-- Name: epmms_award_group epmms_award_group_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_group
    ADD CONSTRAINT epmms_award_group_fk FOREIGN KEY (award_group_group) REFERENCES public.epmms_sum_type(sum_type_id);


--
-- Name: epmms_award_group epmms_award_group_fk1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_group
    ADD CONSTRAINT epmms_award_group_fk1 FOREIGN KEY (award_group_type) REFERENCES public.epmms_award_type(award_type_id);


--
-- Name: epmms_award_month epmms_award_month_ibfk_1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_month
    ADD CONSTRAINT epmms_award_month_ibfk_1 FOREIGN KEY (award_month_memberinfo_id) REFERENCES public.epmms_memberinfo(memberinfo_id) MATCH FULL;


--
-- Name: epmms_award_month_sum_all epmms_award_month_sum_all_ibfk_1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_month_sum_all
    ADD CONSTRAINT epmms_award_month_sum_all_ibfk_1 FOREIGN KEY (award_month_sum_memberinfo_id) REFERENCES public.epmms_memberinfo(memberinfo_id) MATCH FULL;


--
-- Name: epmms_award_month_sum epmms_award_month_sum_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_month_sum
    ADD CONSTRAINT epmms_award_month_sum_fk FOREIGN KEY (award_month_sum_type) REFERENCES public.epmms_sum_type(sum_type_id);


--
-- Name: epmms_award_month_sum epmms_award_month_sum_ibfk_1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_month_sum
    ADD CONSTRAINT epmms_award_month_sum_ibfk_1 FOREIGN KEY (award_month_sum_memberinfo_id) REFERENCES public.epmms_memberinfo(memberinfo_id) MATCH FULL;


--
-- Name: epmms_award_year_sum epmms_award_month_year_sum_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_year_sum
    ADD CONSTRAINT epmms_award_month_year_sum_fk FOREIGN KEY (award_year_sum_memberinfo_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_award_year_sum epmms_award_month_year_sum_fk1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_year_sum
    ADD CONSTRAINT epmms_award_month_year_sum_fk1 FOREIGN KEY (award_year_sum_type) REFERENCES public.epmms_sum_type(sum_type_id);


--
-- Name: epmms_award_period epmms_award_period_fk1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_period
    ADD CONSTRAINT epmms_award_period_fk1 FOREIGN KEY (award_period_type_id) REFERENCES public.epmms_award_type(award_type_id);


--
-- Name: epmms_award_period epmms_award_period_ibfk_1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_period
    ADD CONSTRAINT epmms_award_period_ibfk_1 FOREIGN KEY (award_period_memberinfo_id) REFERENCES public.epmms_memberinfo(memberinfo_id) MATCH FULL;


--
-- Name: epmms_award_period_sum epmms_award_period_sum_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_period_sum
    ADD CONSTRAINT epmms_award_period_sum_fk FOREIGN KEY (award_period_sum_type) REFERENCES public.epmms_sum_type(sum_type_id);


--
-- Name: epmms_award_period_sum epmms_award_period_sum_ibfk_2; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_period_sum
    ADD CONSTRAINT epmms_award_period_sum_ibfk_2 FOREIGN KEY (award_period_sum_memberinfo_id) REFERENCES public.epmms_memberinfo(memberinfo_id) MATCH FULL;


--
-- Name: epmms_award_period_sum epmms_award_period_sum_ibfk_3; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_period_sum
    ADD CONSTRAINT epmms_award_period_sum_ibfk_3 FOREIGN KEY (award_period_sum_src_memberinfo_id) REFERENCES public.epmms_memberinfo(memberinfo_id) MATCH FULL;


--
-- Name: epmms_award_total epmms_award_total_ibfk_1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_total
    ADD CONSTRAINT epmms_award_total_ibfk_1 FOREIGN KEY (award_total_memberinfo_id) REFERENCES public.epmms_memberinfo(memberinfo_id) MATCH FULL;


--
-- Name: epmms_award_total_sum epmms_award_total_sum_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_total_sum
    ADD CONSTRAINT epmms_award_total_sum_fk FOREIGN KEY (award_total_sum_type) REFERENCES public.epmms_sum_type(sum_type_id);


--
-- Name: epmms_award_total_sum epmms_award_total_sum_ibfk_1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_total_sum
    ADD CONSTRAINT epmms_award_total_sum_ibfk_1 FOREIGN KEY (award_total_sum_memberinfo_id) REFERENCES public.epmms_memberinfo(memberinfo_id) MATCH FULL;


--
-- Name: epmms_award_week epmms_award_week_ibfk_1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_week
    ADD CONSTRAINT epmms_award_week_ibfk_1 FOREIGN KEY (award_week_memberinfo_id) REFERENCES public.epmms_memberinfo(memberinfo_id) MATCH FULL;


--
-- Name: epmms_award_week_sum_all epmms_award_week_sum_all_ibfk_1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_week_sum_all
    ADD CONSTRAINT epmms_award_week_sum_all_ibfk_1 FOREIGN KEY (award_week_sum_memberinfo_id) REFERENCES public.epmms_memberinfo(memberinfo_id) MATCH FULL;


--
-- Name: epmms_award_week_sum epmms_award_week_sum_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_week_sum
    ADD CONSTRAINT epmms_award_week_sum_fk FOREIGN KEY (award_week_sum_type) REFERENCES public.epmms_sum_type(sum_type_id);


--
-- Name: epmms_award_week_sum epmms_award_week_sum_ibfk_1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_week_sum
    ADD CONSTRAINT epmms_award_week_sum_ibfk_1 FOREIGN KEY (award_week_sum_memberinfo_id) REFERENCES public.epmms_memberinfo(memberinfo_id) MATCH FULL;


--
-- Name: epmms_award_year epmms_award_year_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_award_year
    ADD CONSTRAINT epmms_award_year_fk FOREIGN KEY (award_year_memberinfo_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_bankaccount epmms_bankaccount_ibfk_1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_bankaccount
    ADD CONSTRAINT epmms_bankaccount_ibfk_1 FOREIGN KEY (bankaccount_bank_id) REFERENCES public.epmms_bank(bank_id) MATCH FULL;


--
-- Name: epmms_buy epmms_buy_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_buy
    ADD CONSTRAINT epmms_buy_fk FOREIGN KEY (buy_member_id) REFERENCES public.epmms_memberinfo(memberinfo_id) ON DELETE CASCADE;


--
-- Name: epmms_cap_member_sum epmms_cap_member_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_cap_member_sum
    ADD CONSTRAINT epmms_cap_member_fk FOREIGN KEY (cap_member_type_id) REFERENCES public.epmms_membertype(membertype_level);


--
-- Name: epmms_charge epmms_charge_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_charge
    ADD CONSTRAINT epmms_charge_fk FOREIGN KEY (charge_finance_type_id) REFERENCES public.epmms_finance_type(finance_type_id);


--
-- Name: epmms_charge epmms_charge_fk1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_charge
    ADD CONSTRAINT epmms_charge_fk1 FOREIGN KEY (charge_bank_id) REFERENCES public.epmms_bank(bank_id);


--
-- Name: epmms_charge epmms_charge_ibfk_1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_charge
    ADD CONSTRAINT epmms_charge_ibfk_1 FOREIGN KEY (charge_memberinfo_id) REFERENCES public.epmms_memberinfo(memberinfo_id) MATCH FULL;


--
-- Name: epmms_deal epmms_deal_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_deal
    ADD CONSTRAINT epmms_deal_fk FOREIGN KEY (deal_sale_id) REFERENCES public.epmms_sale(sale_id) ON DELETE CASCADE;


--
-- Name: epmms_deal epmms_deal_fk1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_deal
    ADD CONSTRAINT epmms_deal_fk1 FOREIGN KEY (deal_buy_id) REFERENCES public.epmms_buy(buy_id) ON DELETE CASCADE;


--
-- Name: epmms_deal epmms_deal_fk2; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_deal
    ADD CONSTRAINT epmms_deal_fk2 FOREIGN KEY (deal_sale_member_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_deal epmms_deal_fk3; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_deal
    ADD CONSTRAINT epmms_deal_fk3 FOREIGN KEY (deal_buy_member_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_dup epmms_dup_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_dup
    ADD CONSTRAINT epmms_dup_fk FOREIGN KEY (dup_member_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_finance epmms_finance_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_finance
    ADD CONSTRAINT epmms_finance_fk FOREIGN KEY (finance_type) REFERENCES public.epmms_finance_type(finance_type_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: epmms_finance epmms_finance_fk1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_finance
    ADD CONSTRAINT epmms_finance_fk1 FOREIGN KEY (finance_memberinfo_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_foundation epmms_foundation_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_foundation
    ADD CONSTRAINT epmms_foundation_fk FOREIGN KEY (foundation_member_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_futou epmms_futou_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_futou
    ADD CONSTRAINT epmms_futou_fk FOREIGN KEY (futou_member_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_game_charge epmms_game_charge_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_game_charge
    ADD CONSTRAINT epmms_game_charge_fk FOREIGN KEY (charge_recommend) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_groupmap epmms_groupmap_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_groupmap
    ADD CONSTRAINT epmms_groupmap_fk FOREIGN KEY (groupmap_group_id) REFERENCES public.epmms_group(group_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: epmms_groupmap epmms_groupmap_fk2; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_groupmap
    ADD CONSTRAINT epmms_groupmap_fk2 FOREIGN KEY (groupmap_member_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_layer epmms_layer_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_layer
    ADD CONSTRAINT epmms_layer_fk FOREIGN KEY (layer_member_id) REFERENCES public.epmms_membermap(membermap_id);


--
-- Name: epmms_map_edit epmms_map_edit_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_map_edit
    ADD CONSTRAINT epmms_map_edit_fk FOREIGN KEY (map_edit_src_member_id) REFERENCES public.epmms_membermap(membermap_id);


--
-- Name: epmms_map_edit epmms_map_edit_fk1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_map_edit
    ADD CONSTRAINT epmms_map_edit_fk1 FOREIGN KEY (map_edit_dst_member_id) REFERENCES public.epmms_membermap(membermap_id);


--
-- Name: epmms_map_edit epmms_map_edit_fk2; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_map_edit
    ADD CONSTRAINT epmms_map_edit_fk2 FOREIGN KEY (map_edit_dst_recommend_id) REFERENCES public.epmms_membermap(membermap_id);


--
-- Name: epmms_member_upgrade epmms_member_upgrade_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_member_upgrade
    ADD CONSTRAINT epmms_member_upgrade_fk FOREIGN KEY (member_upgrade_member_id) REFERENCES public.epmms_membermap(membermap_id);


--
-- Name: epmms_member_upgrade epmms_member_upgrade_fk1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_member_upgrade
    ADD CONSTRAINT epmms_member_upgrade_fk1 FOREIGN KEY (member_upgrade_type) REFERENCES public.epmms_membertype(membertype_level);


--
-- Name: epmms_memberinfo epmms_memberinfo_ibfk_1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_memberinfo
    ADD CONSTRAINT epmms_memberinfo_ibfk_1 FOREIGN KEY (memberinfo_bank_id) REFERENCES public.epmms_bank(bank_id) MATCH FULL;


--
-- Name: epmms_membermap2 epmms_membermap2_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap2
    ADD CONSTRAINT epmms_membermap2_fk FOREIGN KEY (membermap_membertype) REFERENCES public.epmms_membertype(membertype_level) ON UPDATE CASCADE;


--
-- Name: epmms_membermap2 epmms_membermap2_fk1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap2
    ADD CONSTRAINT epmms_membermap2_fk1 FOREIGN KEY (membermap_parent_id) REFERENCES public.epmms_membermap2(membermap_id);


--
-- Name: epmms_membermap3 epmms_membermap3_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap3
    ADD CONSTRAINT epmms_membermap3_fk FOREIGN KEY (membermap_member_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_membermap4 epmms_membermap4_fk1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap4
    ADD CONSTRAINT epmms_membermap4_fk1 FOREIGN KEY (membermap_parent_id) REFERENCES public.epmms_membermap4(membermap_id);


--
-- Name: epmms_membermap epmms_membermap_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap
    ADD CONSTRAINT epmms_membermap_fk FOREIGN KEY (membermap_level) REFERENCES public.epmms_member_level(member_level_level);


--
-- Name: epmms_membermap epmms_membermap_fk1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap
    ADD CONSTRAINT epmms_membermap_fk1 FOREIGN KEY (membermap_membertype_level) REFERENCES public.epmms_membertype(membertype_level) ON UPDATE CASCADE;


--
-- Name: epmms_membermap epmms_membermap_fk2; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap
    ADD CONSTRAINT epmms_membermap_fk2 FOREIGN KEY (membermap_level) REFERENCES public.epmms_member_level(member_level_level);


--
-- Name: epmms_membermap epmms_membermap_fk3; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap
    ADD CONSTRAINT epmms_membermap_fk3 FOREIGN KEY (membermap_agent_type) REFERENCES public.epmms_agent_type(agent_type_level);


--
-- Name: epmms_membermap epmms_membermap_ibfk_1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap
    ADD CONSTRAINT epmms_membermap_ibfk_1 FOREIGN KEY (membermap_id) REFERENCES public.epmms_memberinfo(memberinfo_id) MATCH FULL ON DELETE CASCADE;


--
-- Name: epmms_membermap epmms_membermap_ibfk_2; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap
    ADD CONSTRAINT epmms_membermap_ibfk_2 FOREIGN KEY (membermap_parent_id) REFERENCES public.epmms_membermap(membermap_id) MATCH FULL;


--
-- Name: epmms_membermap epmms_membermap_ibfk_7; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap
    ADD CONSTRAINT epmms_membermap_ibfk_7 FOREIGN KEY (membermap_agent_id) REFERENCES public.epmms_membermap(membermap_id) MATCH FULL;


--
-- Name: epmms_membermap epmms_membermap_ibfk_8; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap
    ADD CONSTRAINT epmms_membermap_ibfk_8 FOREIGN KEY (membermap_verify_member_id) REFERENCES public.epmms_memberinfo(memberinfo_id) MATCH FULL;


--
-- Name: epmms_membermap epmms_membermap_ibfk_9; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_membermap
    ADD CONSTRAINT epmms_membermap_ibfk_9 FOREIGN KEY (membermap_recommend_id) REFERENCES public.epmms_membermap(membermap_id) MATCH FULL;


--
-- Name: epmms_memberstatus epmms_memberstatus_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_memberstatus
    ADD CONSTRAINT epmms_memberstatus_fk FOREIGN KEY (status_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_menu epmms_menu_ibfk_1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_menu
    ADD CONSTRAINT epmms_menu_ibfk_1 FOREIGN KEY (menu_pid) REFERENCES public.epmms_menu(menu_id) MATCH FULL;


--
-- Name: epmms_messages epmms_messages_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_messages
    ADD CONSTRAINT epmms_messages_fk FOREIGN KEY (messages_sender_member_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_messages epmms_messages_fk1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_messages
    ADD CONSTRAINT epmms_messages_fk1 FOREIGN KEY (messages_receiver_member_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_messages epmms_messages_fk2; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_messages
    ADD CONSTRAINT epmms_messages_fk2 FOREIGN KEY (messages_member_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_mybank epmms_mybank_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_mybank
    ADD CONSTRAINT epmms_mybank_fk FOREIGN KEY (mybank_bank_id) REFERENCES public.epmms_bank(bank_id);


--
-- Name: epmms_mybank epmms_mybank_fk1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_mybank
    ADD CONSTRAINT epmms_mybank_fk1 FOREIGN KEY (mybank_memberinfo_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_orders epmms_orders_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_orders
    ADD CONSTRAINT epmms_orders_fk FOREIGN KEY (orders_member_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_orders_product epmms_orders_product_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_orders_product
    ADD CONSTRAINT epmms_orders_product_fk FOREIGN KEY (orders_product_product_id) REFERENCES public.epmms_product(product_id);


--
-- Name: epmms_orders_product epmms_orders_product_fk1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_orders_product
    ADD CONSTRAINT epmms_orders_product_fk1 FOREIGN KEY (orders_product_orders_id) REFERENCES public.epmms_orders(orders_id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: epmms_prize epmms_prize_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_prize
    ADD CONSTRAINT epmms_prize_fk FOREIGN KEY (prize_member_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_product epmms_product_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_product
    ADD CONSTRAINT epmms_product_fk FOREIGN KEY (product_class_id) REFERENCES public.epmms_product_class(product_class_id);


--
-- Name: epmms_rights epmms_rights_ibfk_1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_rights
    ADD CONSTRAINT epmms_rights_ibfk_1 FOREIGN KEY (itemname) REFERENCES public.epmms_authitem(name) MATCH FULL ON DELETE CASCADE;


--
-- Name: epmms_sale epmms_sale_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_sale
    ADD CONSTRAINT epmms_sale_fk FOREIGN KEY (sale_member_id) REFERENCES public.epmms_memberinfo(memberinfo_id) ON DELETE CASCADE;


--
-- Name: epmms_signing epmms_signing_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_signing
    ADD CONSTRAINT epmms_signing_fk FOREIGN KEY (signing_member_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_star epmms_star_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_star
    ADD CONSTRAINT epmms_star_fk FOREIGN KEY (star_product_id) REFERENCES public.epmms_product(product_id);


--
-- Name: epmms_star epmms_star_fk1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_star
    ADD CONSTRAINT epmms_star_fk1 FOREIGN KEY (star_member_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_stock_trend epmms_stock_trend_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_stock_trend
    ADD CONSTRAINT epmms_stock_trend_fk FOREIGN KEY (stock_trend_memberinfo_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_supplement epmms_supplement_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_supplement
    ADD CONSTRAINT epmms_supplement_fk FOREIGN KEY (supplement_member_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_transfer epmms_transfer_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_transfer
    ADD CONSTRAINT epmms_transfer_fk FOREIGN KEY (transfer_src_member_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_transfer epmms_transfer_fk1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_transfer
    ADD CONSTRAINT epmms_transfer_fk1 FOREIGN KEY (transfer_src_finance_type) REFERENCES public.epmms_finance_type(finance_type_id);


--
-- Name: epmms_transfer epmms_transfer_fk2; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_transfer
    ADD CONSTRAINT epmms_transfer_fk2 FOREIGN KEY (transfer_dst_member_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_transfer epmms_transfer_fk3; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_transfer
    ADD CONSTRAINT epmms_transfer_fk3 FOREIGN KEY (transfer_dst_finance_type) REFERENCES public.epmms_finance_type(finance_type_id);


--
-- Name: epmms_userinfo epmms_userinfo_ibfk_1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_userinfo
    ADD CONSTRAINT epmms_userinfo_ibfk_1 FOREIGN KEY (userinfo_role) REFERENCES public.epmms_authitem(name) MATCH FULL;


--
-- Name: epmms_withdrawals epmms_withdrawals_fk; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_withdrawals
    ADD CONSTRAINT epmms_withdrawals_fk FOREIGN KEY (withdrawals_member_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: epmms_withdrawals epmms_withdrawals_fk1; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_withdrawals
    ADD CONSTRAINT epmms_withdrawals_fk1 FOREIGN KEY (withdrawals_finance_type_id) REFERENCES public.epmms_finance_type(finance_type_id);


--
-- Name: epmms_activation_record memberinfo; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_activation_record
    ADD CONSTRAINT memberinfo FOREIGN KEY (activation_member_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: CONSTRAINT memberinfo ON epmms_activation_record; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON CONSTRAINT memberinfo ON public.epmms_activation_record IS '会员信息';


--
-- Name: epmms_jackpot_win_record memeber_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.epmms_jackpot_win_record
    ADD CONSTRAINT memeber_id FOREIGN KEY (jackpot_id) REFERENCES public.epmms_memberinfo(memberinfo_id);


--
-- Name: CONSTRAINT memeber_id ON epmms_jackpot_win_record; Type: COMMENT; Schema: public; Owner: -
--

COMMENT ON CONSTRAINT memeber_id ON public.epmms_jackpot_win_record IS '会员信息';


--
-- PostgreSQL database dump complete
--

